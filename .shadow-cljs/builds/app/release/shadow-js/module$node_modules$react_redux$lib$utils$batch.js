["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-redux/lib/utils/batch.js"],"~:js","shadow$provide[77]=function(h,a,n,f){f.__esModule=!0;f.getBatch=f.setBatch=void 0;var e=function(a){a()};f.setBatch=function(a){return e=a};f.getBatch=function(){return e}}","~:source","shadow$provide[77] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.getBatch = exports.setBatch = void 0;\n\n// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nvar batch = defaultNoopBatch; // Allow injecting another batching function later\n\nvar setBatch = function setBatch(newBatch) {\n  return batch = newBatch;\n}; // Supply a getter just to skip dealing with ESM bindings\n\n\nexports.setBatch = setBatch;\n\nvar getBatch = function getBatch() {\n  return batch;\n};\n\nexports.getBatch = getBatch;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","setBatch","getBatch"]],"~:compiled-at",1579150619322,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_redux$lib$utils$batch.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG7DA,CAAAC,WAAA,CAAqB,CAAA,CACrBD,EAAAE,SAAA,CAAmBF,CAAAG,SAAnB,CAAsC,IAAK,EAO3C,KAAIC,EAJJC,QAAyB,CAACC,CAAD,CAAW,CAClCA,CAAA,EADkC,CAWpCN,EAAAG,SAAA,CALeA,QAAiB,CAACI,CAAD,CAAW,CACzC,MAAOH,EAAP,CAAeG,CAD0B,CAW3CP,EAAAE,SAAA,CAJeA,QAAiB,EAAG,CACjC,MAAOE,EAD0B,CApB0B;\",\n\"sources\":[\"node_modules/react-redux/lib/utils/batch.js\"],\n\"sourcesContent\":[\"shadow$provide[77] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.getBatch = exports.setBatch = void 0;\\n\\n// Default to a dummy \\\"batch\\\" implementation that just runs the callback\\nfunction defaultNoopBatch(callback) {\\n  callback();\\n}\\n\\nvar batch = defaultNoopBatch; // Allow injecting another batching function later\\n\\nvar setBatch = function setBatch(newBatch) {\\n  return batch = newBatch;\\n}; // Supply a getter just to skip dealing with ESM bindings\\n\\n\\nexports.setBatch = setBatch;\\n\\nvar getBatch = function getBatch() {\\n  return batch;\\n};\\n\\nexports.getBatch = getBatch;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"getBatch\",\"setBatch\",\"batch\",\"defaultNoopBatch\",\"callback\",\"newBatch\"]\n}\n"]