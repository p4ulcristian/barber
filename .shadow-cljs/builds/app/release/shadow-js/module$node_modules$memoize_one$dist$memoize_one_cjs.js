["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/memoize-one/dist/memoize-one.cjs.js"],"~:js","shadow$provide[104]=function(h,a,n,f){function e(a,e){if(a.length!==e.length)return!1;for(var f=0;f<a.length;f++)if(a[f]!==e[f])return!1;return!0}n.exports=function(a,f){void 0===f&&(f=e);var h,n=[],m,q=!1;return function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(q&&h===this&&f(e,n))return m;m=a.apply(this,e);q=!0;h=this;n=e;return m}}}","~:source","shadow$provide[104] = function(global,require,module,exports) {\n'use strict';\n\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nmodule.exports = memoizeOne;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1579150619342,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$memoize_one$dist$memoize_one_cjs.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,QAASA,EAAc,CAACC,CAAD,CAAYC,CAAZ,CAAwB,CAC3C,GAAID,CAAAE,OAAJ,GAAyBD,CAAAC,OAAzB,CACI,MAAO,CAAA,CAEX,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,CAAAE,OAApB,CAAsCC,CAAA,EAAtC,CACI,GAAIH,CAAA,CAAUG,CAAV,CAAJ,GAAqBF,CAAA,CAAWE,CAAX,CAArB,CACI,MAAO,CAAA,CAGf,OAAO,CAAA,CAToC,CAmC/CN,CAAAC,QAAA,CAvBAM,QAAmB,CAACC,CAAD,CAAWC,CAAX,CAAoB,CACnB,IAAK,EAArB,GAAIA,CAAJ,GAA0BA,CAA1B,CAAoCP,CAApC,CACA,KAAIQ,CAAJ,CACIC,EAAW,EADf,CAEIC,CAFJ,CAGIC,EAAa,CAAA,CAejB,OAdAC,SAAiB,EAAG,CAEhB,IADA,IAAIC,EAAU,EAAd,CACSC,EAAK,CAAd,CAAiBA,CAAjB,CAAsBC,SAAAZ,OAAtB,CAAwCW,CAAA,EAAxC,CACID,CAAA,CAAQC,CAAR,CAAA,CAAcC,SAAA,CAAUD,CAAV,CAElB,IAAIH,CAAJ,EAAkBH,CAAlB,GAA+B,IAA/B,EAAuCD,CAAA,CAAQM,CAAR,CAAiBJ,CAAjB,CAAvC,CACI,MAAOC,EAEXA,EAAA,CAAaJ,CAAAU,MAAA,CAAe,IAAf,CAAqBH,CAArB,CACbF,EAAA,CAAa,CAAA,CACbH,EAAA,CAAW,IACXC,EAAA,CAAWI,CACX,OAAOH,EAZS,CANe,CAfuB;\",\n\"sources\":[\"node_modules/memoize-one/dist/memoize-one.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[104] = function(global,require,module,exports) {\\n'use strict';\\n\\nfunction areInputsEqual(newInputs, lastInputs) {\\n    if (newInputs.length !== lastInputs.length) {\\n        return false;\\n    }\\n    for (var i = 0; i < newInputs.length; i++) {\\n        if (newInputs[i] !== lastInputs[i]) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n\\nfunction memoizeOne(resultFn, isEqual) {\\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\\n    var lastThis;\\n    var lastArgs = [];\\n    var lastResult;\\n    var calledOnce = false;\\n    function memoized() {\\n        var newArgs = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            newArgs[_i] = arguments[_i];\\n        }\\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\\n            return lastResult;\\n        }\\n        lastResult = resultFn.apply(this, newArgs);\\n        calledOnce = true;\\n        lastThis = this;\\n        lastArgs = newArgs;\\n        return lastResult;\\n    }\\n    return memoized;\\n}\\n\\nmodule.exports = memoizeOne;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"areInputsEqual\",\"newInputs\",\"lastInputs\",\"length\",\"i\",\"memoizeOne\",\"resultFn\",\"isEqual\",\"lastThis\",\"lastArgs\",\"lastResult\",\"calledOnce\",\"memoized\",\"newArgs\",\"_i\",\"arguments\",\"apply\"]\n}\n"]