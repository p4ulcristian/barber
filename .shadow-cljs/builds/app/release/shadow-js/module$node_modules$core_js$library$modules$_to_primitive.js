["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js/library/modules/_to-primitive.js"],"~:js","shadow$provide[35]=function(h,a,n,f){var e=a(29);n.exports=function(a,f){if(!e(a))return a;var h,q;if(f&&\"function\"==typeof(h=a.toString)&&!e(q=h.call(a))||\"function\"==typeof(h=a.valueOf)&&!e(q=h.call(a))||!f&&\"function\"==typeof(h=a.toString)&&!e(q=h.call(a)))return q;throw TypeError(\"Can't convert object to primitive value\");}}","~:source","shadow$provide[35] = function(global,require,module,exports) {\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$core_js$library$modules$_is_object"]],"~:properties",["^5",[]],"~:compiled-at",1579150619300,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js$library$modules$_to_primitive.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAE7D,IAAIC,EAAWH,CAAA,CAAQ,EAAR,CAGfC,EAAAC,QAAA,CAAiBE,QAAS,CAACC,CAAD,CAAKC,CAAL,CAAQ,CAChC,GAAI,CAACH,CAAA,CAASE,CAAT,CAAL,CAAmB,MAAOA,EADM,KAE5BE,CAF4B,CAExBC,CAGR,IAFIF,CAEJ,EAFsC,UAEtC,EAFS,OAAQC,CAAR,CAAaF,CAAAI,SAAb,CAET,EAFoD,CAACN,CAAA,CAASK,CAAT,CAAeD,CAAAG,KAAA,CAAQL,CAAR,CAAf,CAErD,EADgC,UAChC,EADI,OAAQE,CAAR,CAAaF,CAAAM,QAAb,CACJ,EAD8C,CAACR,CAAA,CAASK,CAAT,CAAeD,CAAAG,KAAA,CAAQL,CAAR,CAAf,CAC/C,EAAI,CAACC,CAAL,EAAuC,UAAvC,EAAU,OAAQC,CAAR,CAAaF,CAAAI,SAAb,CAAV,EAAqD,CAACN,CAAA,CAASK,CAAT,CAAeD,CAAAG,KAAA,CAAQL,CAAR,CAAf,CAAtD,CAAmF,MAAOG,EAC1F,MAAMI,UAAA,CAAU,yCAAV,CAAN,CANgC,CAL2B;\",\n\"sources\":[\"node_modules/core-js/library/modules/_to-primitive.js\"],\n\"sourcesContent\":[\"shadow$provide[35] = function(global,require,module,exports) {\\n// 7.1.1 ToPrimitive(input [, PreferredType])\\nvar isObject = require('./_is-object');\\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\\n// and the second argument - flag - preferred type is a string\\nmodule.exports = function (it, S) {\\n  if (!isObject(it)) return it;\\n  var fn, val;\\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\n  throw TypeError(\\\"Can't convert object to primitive value\\\");\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isObject\",\"module.exports\",\"it\",\"S\",\"fn\",\"val\",\"toString\",\"call\",\"valueOf\",\"TypeError\"]\n}\n"]