["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-redux/lib/connect/selectorFactory.js"],"~:js","shadow$provide[94]=function(h,a,n,f){function e(a,e,f,h){return function(m,n){return f(a(m,n),e(h,n),n)}}function t(a,e,f,h,n){var m=n.areStatesEqual,q=n.areOwnPropsEqual,t=n.areStatePropsEqual,v=!1,r,w,x,E,z;return function(n,F){if(v){var D=!q(F,w),G=!m(n,r);r=n;w=F;D&&G?(x=a(r,w),e.dependsOnOwnProps&&(E=e(h,w)),z=f(x,E,w)):D?(a.dependsOnOwnProps&&(x=a(r,w)),e.dependsOnOwnProps&&(E=e(h,w)),z=f(x,E,w)):G&&(n=a(r,w),F=!t(n,x),x=n,F&&(z=f(x,E,w)));n=z}else r=n,w=F,x=a(r,w),E=e(h,w),z=f(x,E,w),v=!0,\nn=z;return n}}h=a(74);f.__esModule=!0;f.impureFinalPropsSelectorFactory=e;f.pureFinalPropsSelectorFactory=t;f[\"default\"]=function(a,f){var h=f.initMapStateToProps,n=f.initMapDispatchToProps,w=f.initMergeProps;f=(0,q[\"default\"])(f,[\"initMapStateToProps\",\"initMapDispatchToProps\",\"initMergeProps\"]);h=h(a,f);n=n(a,f);w=w(a,f);return(f.pure?t:e)(h,n,w,a,f)};var q=h(a(81));h(a(93))}","~:source","shadow$provide[94] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;\nexports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;\nexports[\"default\"] = finalPropsSelectorFactory;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _verifySubselectors = _interopRequireDefault(require(\"./verifySubselectors\"));\n\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\n\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n  var hasRunAtLeastOnce = false;\n  var state;\n  var ownProps;\n  var stateProps;\n  var dispatchProps;\n  var mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n} // TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\n\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = (0, _objectWithoutPropertiesLoose2[\"default\"])(_ref2, [\"initMapStateToProps\", \"initMapDispatchToProps\", \"initMergeProps\"]);\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    (0, _verifySubselectors[\"default\"])(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n  }\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$react_redux$lib$connect$verifySubselectors"]],"~:properties",["^5",["pureFinalPropsSelectorFactory","__esModule","impureFinalPropsSelectorFactory"]],"~:compiled-at",1579150619335,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_redux$lib$connect$selectorFactory.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-redux/lib/connect/selectorFactory.js\"],\n\"sourcesContent\":[\"shadow$provide[94] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nexports.__esModule = true;\\nexports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;\\nexports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;\\nexports[\\\"default\\\"] = finalPropsSelectorFactory;\\n\\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutPropertiesLoose\\\"));\\n\\nvar _verifySubselectors = _interopRequireDefault(require(\\\"./verifySubselectors\\\"));\\n\\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\\n  return function impureFinalPropsSelector(state, ownProps) {\\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\\n  };\\n}\\n\\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\\n  var areStatesEqual = _ref.areStatesEqual,\\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\\n      areStatePropsEqual = _ref.areStatePropsEqual;\\n  var hasRunAtLeastOnce = false;\\n  var state;\\n  var ownProps;\\n  var stateProps;\\n  var dispatchProps;\\n  var mergedProps;\\n\\n  function handleFirstCall(firstState, firstOwnProps) {\\n    state = firstState;\\n    ownProps = firstOwnProps;\\n    stateProps = mapStateToProps(state, ownProps);\\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\\n    hasRunAtLeastOnce = true;\\n    return mergedProps;\\n  }\\n\\n  function handleNewPropsAndNewState() {\\n    stateProps = mapStateToProps(state, ownProps);\\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\\n    return mergedProps;\\n  }\\n\\n  function handleNewProps() {\\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\\n    return mergedProps;\\n  }\\n\\n  function handleNewState() {\\n    var nextStateProps = mapStateToProps(state, ownProps);\\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\\n    stateProps = nextStateProps;\\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\\n    return mergedProps;\\n  }\\n\\n  function handleSubsequentCalls(nextState, nextOwnProps) {\\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\\n    var stateChanged = !areStatesEqual(nextState, state);\\n    state = nextState;\\n    ownProps = nextOwnProps;\\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\\n    if (propsChanged) return handleNewProps();\\n    if (stateChanged) return handleNewState();\\n    return mergedProps;\\n  }\\n\\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\\n  };\\n} // TODO: Add more comments\\n// If pure is true, the selector returned by selectorFactory will memoize its results,\\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\\n// props have not changed. If false, the selector will always return a new\\n// object and shouldComponentUpdate will always return true.\\n\\n\\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\\n  var initMapStateToProps = _ref2.initMapStateToProps,\\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\\n      initMergeProps = _ref2.initMergeProps,\\n      options = (0, _objectWithoutPropertiesLoose2[\\\"default\\\"])(_ref2, [\\\"initMapStateToProps\\\", \\\"initMapDispatchToProps\\\", \\\"initMergeProps\\\"]);\\n  var mapStateToProps = initMapStateToProps(dispatch, options);\\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\\n  var mergeProps = initMergeProps(dispatch, options);\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    (0, _verifySubselectors[\\\"default\\\"])(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\\n  }\\n\\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"impureFinalPropsSelectorFactory\",\"mapStateToProps\",\"mapDispatchToProps\",\"mergeProps\",\"dispatch\",\"impureFinalPropsSelector\",\"state\",\"ownProps\",\"pureFinalPropsSelectorFactory\",\"_ref\",\"areStatesEqual\",\"areOwnPropsEqual\",\"areStatePropsEqual\",\"hasRunAtLeastOnce\",\"stateProps\",\"dispatchProps\",\"mergedProps\",\"pureFinalPropsSelector\",\"nextState\",\"nextOwnProps\",\"propsChanged\",\"stateChanged\",\"dependsOnOwnProps\",\"nextStateProps\",\"statePropsChanged\",\"firstState\",\"firstOwnProps\",\"_interopRequireDefault\",\"__esModule\",\"finalPropsSelectorFactory\",\"_ref2\",\"initMapStateToProps\",\"initMapDispatchToProps\",\"initMergeProps\",\"options\",\"_objectWithoutPropertiesLoose2\",\"pure\",\"selectorFactory\"]\n}\n"]