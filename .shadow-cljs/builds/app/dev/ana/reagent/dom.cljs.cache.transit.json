["^ ","~:output",["^ ","~:js","goog.provide('reagent.dom');\ngoog.require('cljs.core');\nvar module$node_modules$react_dom$index=shadow.js.require(\"module$node_modules$react_dom$index\", {});\ngoog.require('reagent.impl.util');\ngoog.require('reagent.impl.template');\ngoog.require('reagent.impl.batching');\ngoog.require('reagent.ratom');\ngoog.require('reagent.debug');\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.imported !== 'undefined')){\n} else {\nreagent.dom.imported = null;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.roots !== 'undefined')){\n} else {\nreagent.dom.roots = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\nreagent.dom.unmount_comp = (function reagent$dom$unmount_comp(container){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.dom.roots,cljs.core.dissoc,container);\n\nreturn module$node_modules$react_dom$index.unmountComponentAtNode(container);\n});\nreagent.dom.render_comp = (function reagent$dom$render_comp(comp,container,callback){\nvar _STAR_always_update_STAR__orig_val__66665 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__66666 = true;\nreagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__66666;\n\ntry{var G__66667 = (comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null));\nvar G__66668 = container;\nvar G__66669 = ((function (G__66667,G__66668,_STAR_always_update_STAR__orig_val__66665,_STAR_always_update_STAR__temp_val__66666){\nreturn (function (){\nvar _STAR_always_update_STAR__orig_val__66670 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__66671 = false;\nreagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__66671;\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reagent.dom.roots,cljs.core.assoc,container,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp,container], null));\n\nreagent.impl.batching.flush_after_render();\n\nif((!((callback == null)))){\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\n} else {\nreturn null;\n}\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__66670;\n}});})(G__66667,G__66668,_STAR_always_update_STAR__orig_val__66665,_STAR_always_update_STAR__temp_val__66666))\n;\nreturn module$node_modules$react_dom$index.render(G__66667,G__66668,G__66669);\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__66665;\n}});\nreagent.dom.re_render_component = (function reagent$dom$re_render_component(comp,container){\nreturn reagent.dom.render_comp(comp,container,null);\n});\n/**\n * Render a Reagent component into the DOM. The first argument may be\n *   either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n * \n *   Optionally takes a callback that is called when the component is in place.\n * \n *   Returns the mounted component instance.\n */\nreagent.dom.render = (function reagent$dom$render(var_args){\nvar G__66673 = arguments.length;\nswitch (G__66673) {\ncase 2:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nreagent.dom.render.cljs$core$IFn$_invoke$arity$2 = (function (comp,container){\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3(comp,container,null);\n});\n\nreagent.dom.render.cljs$core$IFn$_invoke$arity$3 = (function (comp,container,callback){\nreagent.ratom.flush_BANG_();\n\nvar f = (function (){\nreturn reagent.impl.template.as_element(((cljs.core.fn_QMARK_(comp))?(comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)):comp));\n});\nreturn reagent.dom.render_comp(f,container,callback);\n});\n\nreagent.dom.render.cljs$lang$maxFixedArity = 3;\n\nreagent.dom.unmount_component_at_node = (function reagent$dom$unmount_component_at_node(container){\nreturn reagent.dom.unmount_comp(container);\n});\n/**\n * Returns the root DOM node of a mounted component.\n */\nreagent.dom.dom_node = (function reagent$dom$dom_node(this$){\nreturn module$node_modules$react_dom$index.findDOMNode(this$);\n});\nreagent.impl.template.find_dom_node = reagent.dom.dom_node;\n/**\n * Force re-rendering of all mounted Reagent components. This is\n *   probably only useful in a development environment, when you want to\n *   update components in response to some dynamic changes to code.\n * \n *   Note that force-update-all may not update root components. This\n *   happens if a component 'foo' is mounted with `(render [foo])` (since\n *   functions are passed by value, and not by reference, in\n *   ClojureScript). To get around this you'll have to introduce a layer\n *   of indirection, for example by using `(render [#'foo])` instead.\n */\nreagent.dom.force_update_all = (function reagent$dom$force_update_all(){\nreagent.ratom.flush_BANG_();\n\nvar seq__66674_66680 = cljs.core.seq(cljs.core.vals(cljs.core.deref(reagent.dom.roots)));\nvar chunk__66675_66681 = null;\nvar count__66676_66682 = (0);\nvar i__66677_66683 = (0);\nwhile(true){\nif((i__66677_66683 < count__66676_66682)){\nvar v_66684 = chunk__66675_66681.cljs$core$IIndexed$_nth$arity$2(null,i__66677_66683);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_66684);\n\n\nvar G__66685 = seq__66674_66680;\nvar G__66686 = chunk__66675_66681;\nvar G__66687 = count__66676_66682;\nvar G__66688 = (i__66677_66683 + (1));\nseq__66674_66680 = G__66685;\nchunk__66675_66681 = G__66686;\ncount__66676_66682 = G__66687;\ni__66677_66683 = G__66688;\ncontinue;\n} else {\nvar temp__5735__auto___66689 = cljs.core.seq(seq__66674_66680);\nif(temp__5735__auto___66689){\nvar seq__66674_66690__$1 = temp__5735__auto___66689;\nif(cljs.core.chunked_seq_QMARK_(seq__66674_66690__$1)){\nvar c__4550__auto___66691 = cljs.core.chunk_first(seq__66674_66690__$1);\nvar G__66692 = cljs.core.chunk_rest(seq__66674_66690__$1);\nvar G__66693 = c__4550__auto___66691;\nvar G__66694 = cljs.core.count(c__4550__auto___66691);\nvar G__66695 = (0);\nseq__66674_66680 = G__66692;\nchunk__66675_66681 = G__66693;\ncount__66676_66682 = G__66694;\ni__66677_66683 = G__66695;\ncontinue;\n} else {\nvar v_66696 = cljs.core.first(seq__66674_66690__$1);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_66696);\n\n\nvar G__66697 = cljs.core.next(seq__66674_66690__$1);\nvar G__66698 = null;\nvar G__66699 = (0);\nvar G__66700 = (0);\nseq__66674_66680 = G__66697;\nchunk__66675_66681 = G__66698;\ncount__66676_66682 = G__66699;\ni__66677_66683 = G__66700;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn \"Updated\";\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/dom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flatpickr","~$module$node_modules$react_flatpickr$build$index","~$react-slider","~$module$node_modules$react_slider$lib$components$ReactSlider$ReactSlider","~$react-beautiful-dnd","~$module$node_modules$react_beautiful_dnd$dist$react_beautiful_dnd_cjs"],"~:use-macros",["^ ","~$dbg","~$reagent.debug"],"~:excludes",["~#set",[]],"~:name","~$reagent.dom","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^S","~$reagent.ratom","^T","^A","^A","~$cljs.core","^U","~$goog","^V","~$reagent.impl.template","^W","~$reagent.impl.batching","^X","~$util","^S","~$tmpl","^W","~$ratom","^T","~$batch","^X","^J","^J","^@","^A"],"~:seen",["^L",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^J","^J","^U","^U","^T","^T","^[","^T"],"~:form",["~#list",["~$ns","^N",["^16",["^12",["^@","~:as","^@"],["^S","^18","^Y"],["^W","^18","^Z"],["^X","^18","^10"],["^T","^18","^["],["^J","~:refer-macros",["^I"]]]]]],"~:flags",["^ ","^12",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^V","^U","^A","^S","^W","^X","^T","^J"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","reagent/dom.cljs"],"~:compiled-at",1578749465624,"~:resource-name","reagent/dom.cljs","~:warnings",[],"~:source","(ns reagent.dom\n  (:require [react-dom :as react-dom]\n            [reagent.impl.util :as util]\n            [reagent.impl.template :as tmpl]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dbg]]))\n\n(defonce ^:private imported nil)\n\n(defonce ^:private roots (atom {}))\n\n(defn- unmount-comp [container]\n  (swap! roots dissoc container)\n  (react-dom/unmountComponentAtNode container))\n\n(defn- render-comp [comp container callback]\n  (binding [util/*always-update* true]\n    (react-dom/render (comp) container\n      (fn []\n        (binding [util/*always-update* false]\n          (swap! roots assoc container [comp container])\n          (batch/flush-after-render)\n          (if (some? callback)\n            (callback)))))))\n\n(defn- re-render-component [comp container]\n  (render-comp comp container nil))\n\n(defn render\n  \"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.\"\n  ([comp container]\n   (render comp container nil))\n  ([comp container callback]\n   (ratom/flush!)\n   (let [f (fn []\n             (tmpl/as-element (if (fn? comp) (comp) comp)))]\n     (render-comp f container callback))))\n\n(defn unmount-component-at-node [container]\n  (unmount-comp container))\n\n(defn dom-node\n  \"Returns the root DOM node of a mounted component.\"\n  [this]\n  (react-dom/findDOMNode this))\n\n(set! tmpl/find-dom-node dom-node)\n\n(defn force-update-all\n  \"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.\"\n  []\n  (ratom/flush!)\n  (doseq [v (vals @roots)]\n    (apply re-render-component v))\n  \"Updated\")\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;;;;AAQA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA,AAAmBC;;AAEnB,AAAA,AAAAH,AAAAC,AAAAG;AAAA;AAAA,AAAA,AAAmBC,AAAM,AAAA,AAACC;;AAE1B,AAAA,AAAOC,AAAcC;AAArB,AACE,AAACC,AAAMJ,AAAMK,AAAOF;;AACpB,AAACG,AAAiCH;;AAEpC,AAAA,AAAOI,AAAaC,AAAKL,AAAUM;AAAnC,AACE,AAAAC,AAAUE;AAAVD,AAAA;AAAA,AAAA,AAAAA,AAAUC;;AAAV,AAAA,AACE,AAAAC,AAAkB,AAACL,AAAAA,AAAAA;AAAnBM,AAAyBX;AAAzBY,AACE;;AAAA,AACE,AAAAE,AAAUL;AAAVM,AAAA;AAAA,AAAA,AAAAA,AAAUN;;AAAV,AAAA,AACE,AAAA,AAACO,AAAMnB,AAAMoB,AAAMjB,AAAWK,AAAKL;;AACnC,AAACkB;;AACD,AAAI,AAAA,AAAA,AAAOZ;AACT,AAACA,AAAAA,AAAAA;;AADH;;AAHF,AAAA,AAAAQ,AAAUL;;;AAFd,AAAA,AAAAC,AAAAC,AAAAC,AAACC;AADH,AAAA,AAAAN,AAAUE;;AASZ,AAAA,AAAOU,AAAqBd,AAAKL;AAAjC,AACE,AAAA,AAACI,AAAYC,AAAKL;;AAEpB,AAAA;;;;;;;;AAAA,AAAAoB,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAOFjB,AAAKL;AAPT,AAQG,AAAA,AAACwB,AAAOnB,AAAKL;;;AARhB,AAAA,AAAA,AAAMsB,AASFjB,AAAKL,AAAUM;AATnB,AAUG,AAACmB;;AACD,AAAMC,AAAE;AAAA,AACE,AAACC,AAAgB,AAAI,AAACC,AAAIvB,AAAM,AAACA,AAAAA,AAAAA,AAAMA;;AADjD,AAEE,AAACD,AAAYsB,AAAE1B,AAAUM;;;AAb9B,AAAA,AAAA,AAAMgB;;AAAN,AAeA,AAAA,AAAMO,AAA2B7B;AAAjC,AACE,AAACD,AAAaC;;AAEhB;;;AAAA,AAAM8B,AAEHC;AAFH,AAGE,AAACC,AAAsBD;;AAEzB,AAAME,AAAmBH;AAEzB;;;;;;;;;;;AAAA,AAAMI;AAAN,AAWE,AAACT;;AACD,AAAAU,AAAA,AAAAC,AAAU,AAAA,AAAAa,AAACC,AAAMrD;AAAjBwC,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAAb;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAJ,AAAAD;AAAA,AAAA,AAAAK;AAAA,AAAA,AAAAL,AAAAK;AAAA,AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAAO,AAAA,AAAAC,AAAAR;AAAA,AAAA,AAAA,AAAAS,AAAAT;AAAAO;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAX,AAAQa;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAA,AAAAD,AAAAZ;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAZF","names",["js/reagent","js/reagent.dom","js/reagent.dom.imported","reagent.dom/imported","js/reagent.dom.roots","reagent.dom/roots","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.dom/unmount-comp","container","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc","js/module$node_modules$react_dom$index.unmountComponentAtNode","reagent.dom/render-comp","comp","callback","*always-update*-orig-val__66665","*always-update*-temp-val__66666","reagent.impl.util/*always-update*","G__66667","G__66668","G__66669","js/module$node_modules$react_dom$index.render","*always-update*-orig-val__66670","*always-update*-temp-val__66671","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","reagent.impl.batching/flush-after-render","reagent.dom/re-render-component","var_args","G__66673","reagent.dom/render","js/Error","reagent.dom.render.cljs$core$IFn$_invoke$arity$3","reagent.ratom/flush!","f","reagent.impl.template/as-element","cljs.core/fn?","reagent.dom/unmount-component-at-node","reagent.dom/dom-node","this","js/module$node_modules$react_dom$index.findDOMNode","reagent.impl.template/find-dom-node","reagent.dom/force-update-all","seq__66674","cljs.core/seq","chunk__66675","count__66676","i__66677","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","v","cljs.core/deref","cljs.core/vals","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1578682820000,1578682820000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1>","reagent/impl/batching.cljs"],[1570993393169,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U","^J","^S"]]],["^1>","goog/math/math.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","~$goog.array","~$goog.asserts"]]],["^1>","goog/array/array.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^1T"]]],["^1K","node_modules/prop-types/checkPropTypes.js"],[1578682820000,1578682820000,1549836454000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1>","reagent/impl/util.cljs"],[1570993393169,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U","^J","~$clojure.string"]]],["^1>","goog/debug/error.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1>","goog/dom/nodetype.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1K","node_modules/scheduler/cjs/scheduler.development.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P"]]],["^1>","reagent/ratom.cljs"],[1570993393169,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U","^S","^J","^X","~$clojure.set","~$goog.object"]]],["^1K","node_modules/scheduler/cjs/scheduler.production.min.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P"]]],["^1K","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P"]]],["^1K","node_modules/react/index.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1>","shadow/js.js"],[1578682820577,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1>","goog/object/object.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1>","reagent/impl/template.cljs"],[1570993393169,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U","^?","^1V","~$clojure.walk","^S","~$reagent.impl.component","^X","^T","^J","^1X"]]],["^1K","node_modules/react-dom/cjs/react-dom.production.min.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1578682820000,1565093957000],["^1K","node_modules/react/cjs/react.development.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","^21","~$module$node_modules$prop_types$checkPropTypes"]]],["^1>","goog/math/long.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^1T","~$goog.reflect"]]],["^1>","goog/string/internal.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1K","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P"]]],["^1>","goog/functions/functions.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1>","reagent/impl/component.cljs"],[1570993393169,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U","^1X","^?","^S","^X","^T","^J"]]],["^1>","clojure/walk.cljs"],[1565093957209,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U"]]],["^1>","goog/structs/map.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1K","node_modules/scheduler/index.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1>","goog/asserts/asserts.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1>","goog/uri/uri.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^1S","^1T","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1K","node_modules/object-assign/index.js"],[1578682820000,1578682820000,1484580833000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P"]]],["^1>","goog/base.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",[]]],["^1>","goog/structs/structs.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^1S","^1X"]]],["^1>","clojure/string.cljs"],[1565093957209,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U","^2<","~$goog.string.StringBuffer"]]],["^1K","node_modules/react/cjs/react.production.min.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","^21"]]],["^1>","goog/string/string.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","~$goog.string.internal"]]],["^1>","goog/reflect/reflect.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1>","goog/string/stringbuffer.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1>","goog/iter/iter.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^1S","^1T","~$goog.functions","~$goog.math"]]],["^1>","reagent/dom.cljs"],[1570993393169,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U","^A","^S","^W","^X","^T","^J"]]],["^1K","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1578682820000,1578682820000,1549571078000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P"]]],["^1>","cljs/core.cljs"],[1565093957209,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["~$goog.math.Long","~$goog.math.Integer","^2<","^1X","^1S","~$goog.Uri","^2B"]]],["^1>","reagent/debug.cljs"],[1570993393169,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U"]]],["^1>","goog/math/integer.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V"]]],["^1K","node_modules/scheduler/tracing.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1K","node_modules/react-dom/cjs/react-dom.development.js"],[1578682820000,1578682820000,499162500000,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^1P","^?","^21","^22","^24","~$module$node_modules$scheduler$tracing"]]],["^1>","clojure/set.cljs"],[1565093957209,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^U"]]],["^1>","goog/uri/utils.js"],[1570979810632,"^1L",["^ ","^1M",null,"^1N",["^L",[]],"^1O",["^V","^1S","^1T","^2<"]]]]],"~:clj-info",["^ ","jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1565093954000,"jar:file:/Users/paul/.m2/repository/reagent/reagent/0.9.0-rc1/reagent-0.9.0-rc1.jar!/reagent/ratom.clj",1570993393000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/reagent/reagent/0.9.0-rc1/reagent-0.9.0-rc1.jar!/reagent/debug.clj",1570993393000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1565096504000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/dom.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J"],"^K",["^L",[]],"~:shadow/js-access-properties",["^L",["findDOMNode","render","unmountComponentAtNode"]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^T","^A","^A","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^S","^Z","^W","^[","^T","^10","^X","^J","^J","^@","^A"],"^11",["^L",["^12"]],"~:shadow/js-access-global",["^L",["Error"]],"^13",null,"~:defs",["^ ","~$re-render-component",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/dom.cljs","^7",27,"^8",8,"^9",27,"^:",27,"~:private",true,"~:arglists",["^16",["~$quote",["^16",[["~$comp","~$container"]]]]]],"^3A",true,"^M","~$reagent.dom/re-render-component","^6","reagent/dom.cljs","^:",27,"~:method-params",["^16",[["^3D","^3E"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^8",1,"~:variadic?",false,"^7",27,"~:ret-tag","~$any","^9",27,"~:max-fixed-arity",2,"~:fn-var",true,"^3B",["^16",["^3C",["^16",[["^3D","^3E"]]]]]],"~$force-update-all",["^ ","^3@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",55,"^8",7,"^9",55,"^:",23,"^3B",["^16",["^3C",["^16",[[]]]]],"~:doc","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"^M","~$reagent.dom/force-update-all","^6","reagent/dom.cljs","^:",23,"^3G",["^16",[[]]],"^3H",null,"^3I",["^16",[null,null]],"^8",1,"^3J",false,"^7",55,"^3K","~$string","^9",55,"^3M",0,"^3N",true,"^3B",["^16",["^3C",["^16",[[]]]]],"^3P","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"~$render-comp",["^ ","^3@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",17,"^8",8,"^9",17,"^:",19,"^3A",true,"^3B",["^16",["^3C",["^16",[["^3D","^3E","~$callback"]]]]]],"^3A",true,"^M","~$reagent.dom/render-comp","^6","reagent/dom.cljs","^:",19,"^3G",["^16",[["^3D","^3E","^3T"]]],"^3H",null,"^3I",["^16",[null,null]],"^8",1,"^3J",false,"^7",17,"^9",17,"^3M",3,"^3N",true,"^3B",["^16",["^3C",["^16",[["^3D","^3E","^3T"]]]]]],"~$imported",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",9,"^8",20,"^9",9,"^:",28,"^3A",true],"^3A",true,"^M","~$reagent.dom/imported","^6","reagent/dom.cljs","^:",28,"^8",1,"^7",9,"^9",9,"~:tag","~$clj-nil"],"~$unmount-component-at-node",["^ ","^3@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",45,"^8",7,"^9",45,"^:",32,"^3B",["^16",["^3C",["^16",[["^3E"]]]]]],"^M","~$reagent.dom/unmount-component-at-node","^6","reagent/dom.cljs","^:",32,"^3G",["^16",[["^3E"]]],"^3H",null,"^3I",["^16",[null,null]],"^8",1,"^3J",false,"^7",45,"^3K","~$js","^9",45,"^3M",1,"^3N",true,"^3B",["^16",["^3C",["^16",[["^3E"]]]]]],"~$unmount-comp",["^ ","^3@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",13,"^8",8,"^9",13,"^:",20,"^3A",true,"^3B",["^16",["^3C",["^16",[["^3E"]]]]]],"^3A",true,"^M","~$reagent.dom/unmount-comp","^6","reagent/dom.cljs","^:",20,"^3G",["^16",[["^3E"]]],"^3H",null,"^3I",["^16",[null,null]],"^8",1,"^3J",false,"^7",13,"^3K","^40","^9",13,"^3M",1,"^3N",true,"^3B",["^16",["^3C",["^16",[["^3E"]]]]]],"~$roots",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",11,"^8",20,"^9",11,"^:",25,"^3A",true],"^3A",true,"^M","~$reagent.dom/roots","^6","reagent/dom.cljs","^:",25,"^8",1,"^7",11,"^9",11,"^3X","~$cljs.core/Atom"],"~$dom-node",["^ ","^3@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",48,"^8",7,"^9",48,"^:",15,"^3B",["^16",["^3C",["^16",[["~$this"]]]]],"^3P","Returns the root DOM node of a mounted component."],"^M","~$reagent.dom/dom-node","^6","reagent/dom.cljs","^:",15,"^3G",["^16",[["^47"]]],"^3H",null,"^3I",["^16",[null,null]],"^8",1,"^3J",false,"^7",48,"^3K","^40","^9",48,"^3M",1,"^3N",true,"^3B",["^16",["^3C",["^16",[["^47"]]]]],"^3P","Returns the root DOM node of a mounted component."],"~$render",["^ ","^3@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",30,"^8",7,"^9",30,"^:",13,"^3B",["^16",["^3C",["^16",[["^3D","^3E"],["^3D","^3E","^3T"]]]]],"^3P","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.","~:top-fn",["^ ","^3J",false,"~:fixed-arity",3,"^3M",3,"^3G",["^16",[["^3D","^3E"],["^3D","^3E","^3T"]]],"^3B",["^16",[["^3D","^3E"],["^3D","^3E","^3T"]]],"^3I",["^16",[null,null]]]],"^M","~$reagent.dom/render","^6","reagent/dom.cljs","^:",13,"^4:",["^ ","^3J",false,"^4;",3,"^3M",3,"^3G",["^16",[["^3D","^3E"],["^3D","^3E","^3T"]]],"^3B",["^16",[["^3D","^3E"],["^3D","^3E","^3T"]]],"^3I",["^16",[null,null]]],"^3G",["^16",[["^3D","^3E"],["^3D","^3E","^3T"]]],"^3H",null,"^4;",3,"^3I",["^16",[null,null]],"^8",1,"^3J",false,"~:methods",[["^ ","^4;",2,"^3J",false,"^3X","^3L"],["^ ","^4;",3,"^3J",false,"^3X","^3L"]],"^7",30,"^9",30,"^3M",3,"^3N",true,"^3B",["^16",[["^3D","^3E"],["^3D","^3E","^3T"]]],"^3P","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance."]],"^14",["^ ","^J","^J","^U","^U","^T","^T","^[","^T"],"^1:",["^ ","^12",["^L",[]]],"^1;",["^ "],"^1<",["^V","^U","^A","^S","^W","^X","^T","^J"]],"^P","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^L",[]],"~:compiler-options",["^1J",[["^4@","~:static-fns"],true,["^4@","~:shadow-tweaks"],null,["^4@","~:elide-asserts"],false,["^4@","~:optimize-constants"],null,["^4@","^1A"],null,["^4@","~:external-config"],null,["^4@","~:tooling-config"],null,["^4@","~:emit-constants"],null,["^4@","~:load-tests"],null,["^4@","~:form-size-threshold"],null,["^4@","~:infer-externs"],true,["^4@","^1C"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4@","~:fn-invoke-direct"],null,["^4@","~:source-map"],"/dev/null"]]]