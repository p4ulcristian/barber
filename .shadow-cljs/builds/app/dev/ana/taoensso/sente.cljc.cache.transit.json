["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente');\ngoog.require('cljs.core');\ngoog.require('clojure.string');\ngoog.require('cljs.core.async');\ngoog.require('taoensso.encore');\ngoog.require('taoensso.timbre');\ngoog.require('taoensso.sente.interfaces');\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(105),(0)], null));\n} else {\ntaoensso.encore.assert_min_encore_version(2.105);\n}\n/**\n * Useful for identifying client/server mismatch\n */\ntaoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(11),(0)], null);\ntaoensso.sente.node_target_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\");\nif((typeof taoensso !== 'undefined') && (typeof taoensso.sente !== 'undefined') && (typeof taoensso.sente.debug_mode_QMARK__ !== 'undefined')){\n} else {\ntaoensso.sente.debug_mode_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\ntaoensso.sente.expected = (function taoensso$sente$expected(expected,x){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),expected,new cljs.core.Keyword(null,\"actual\",\"actual\",107306363),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x),new cljs.core.Keyword(null,\"value\",\"value\",305978217),x], null)], null);\n});\n/**\n * Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n *   returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\n */\ntaoensso.sente.validate_event = (function taoensso$sente$validate_event(x){\nif((!(cljs.core.vector_QMARK_(x)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-type\",\"wrong-type\",929556915),taoensso.sente.expected(new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),x)], null);\n} else {\nif(cljs.core.not((function (){var G__69564 = cljs.core.count(x);\nvar fexpr__69563 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null);\nreturn (fexpr__69563.cljs$core$IFn$_invoke$arity$1 ? fexpr__69563.cljs$core$IFn$_invoke$arity$1(G__69564) : fexpr__69563.call(null,G__69564));\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-length\",\"wrong-length\",1367572281),taoensso.sente.expected(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),x)], null);\n} else {\nvar vec__69565 = x;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69565,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69565,(1),null);\nif((!((ev_id instanceof cljs.core.Keyword)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-id-type\",\"wrong-id-type\",-1213601689),taoensso.sente.expected(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),ev_id)], null);\n} else {\nif(cljs.core.not(cljs.core.namespace(ev_id))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"unnamespaced-id\",\"unnamespaced-id\",1976189772),taoensso.sente.expected(new cljs.core.Keyword(null,\"namespaced-keyword\",\"namespaced-keyword\",131372895),ev_id)], null);\n} else {\nreturn null;\n\n}\n}\n\n}\n}\n});\n/**\n * Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n *   throws a validation exception.\n */\ntaoensso.sente.assert_event = (function taoensso$sente$assert_event(x){\nvar temp__5735__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar errs = temp__5735__auto__;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"errors\",\"errors\",-908790718),errs], null));\n} else {\nreturn null;\n}\n});\n/**\n * Valid [ev-id ?ev-data] form?\n */\ntaoensso.sente.event_QMARK_ = (function taoensso$sente$event_QMARK_(x){\nreturn (taoensso.sente.validate_event(x) == null);\n});\ntaoensso.sente.as_event = (function taoensso$sente$as_event(x){\nvar temp__5733__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar errs = temp__5733__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-event\",\"chsk/bad-event\",-565206930),x], null);\n} else {\nreturn x;\n}\n});\ntaoensso.sente.client_event_msg_QMARK_ = (function taoensso$sente$client_event_msg_QMARK_(x){\nvar and__4120__auto__ = cljs.core.map_QMARK_(x);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = taoensso.encore.ks_EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x);\nif(and__4120__auto____$1){\nvar map__69585 = x;\nvar map__69585__$1 = (((((!((map__69585 == null))))?(((((map__69585.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__69585.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__69585):map__69585);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69585__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69585__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69585__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69585__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(state)) && (taoensso.sente.event_QMARK_(event)));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n});\ntaoensso.sente.server_event_msg_QMARK_ = (function taoensso$sente$server_event_msg_QMARK_(x){\nvar and__4120__auto__ = cljs.core.map_QMARK_(x);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = taoensso.encore.ks_EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),null,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),null,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x);\nif(and__4120__auto____$1){\nvar map__69606 = x;\nvar map__69606__$1 = (((((!((map__69606 == null))))?(((((map__69606.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__69606.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__69606):map__69606);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69606__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69606__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar connected_uids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69606__$1,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231));\nvar ring_req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69606__$1,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69606__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69606__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69606__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(connected_uids)) && (cljs.core.map_QMARK_(ring_req)) && (taoensso.encore.nblank_str_QMARK_(client_id)) && (taoensso.sente.event_QMARK_(event)) && ((((_QMARK_reply_fn == null)) || (cljs.core.ifn_QMARK_(_QMARK_reply_fn)))));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n});\n/**\n * All server `event-msg`s go through this\n */\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = (function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv,p__69609){\nvar map__69610 = p__69609;\nvar map__69610__$1 = (((((!((map__69610 == null))))?(((((map__69610.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__69610.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__69610):map__69610);\nvar ev_msg = map__69610__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69610__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69610__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nvar vec__69613 = taoensso.sente.as_event(event);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69613,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69613,(1),null);\nvar valid_event = vec__69613;\nvar ev_msg_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),valid_event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null)], 0));\nif((!(taoensso.sente.server_event_msg_QMARK_(ev_msg_STAR_)))){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,189,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__69613,ev_id,ev__QMARK_data,valid_event,ev_msg_STAR_,map__69610,map__69610__$1,ev_msg,event,_QMARK_reply_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad ev-msg: %s\",ev_msg], null);\n});})(vec__69613,ev_id,ev__QMARK_data,valid_event,ev_msg_STAR_,map__69610,map__69610__$1,ev_msg,event,_QMARK_reply_fn))\n,null)),null,-454500317);\n} else {\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ch_recv,ev_msg_STAR_);\n}\n});\ntaoensso.sente.cb_error_QMARK_ = (function taoensso$sente$cb_error_QMARK_(cb_reply_clj){\nvar fexpr__69616 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264),null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439),null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489),null], null), null);\nreturn (fexpr__69616.cljs$core$IFn$_invoke$arity$1 ? fexpr__69616.cljs$core$IFn$_invoke$arity$1(cb_reply_clj) : fexpr__69616.call(null,cb_reply_clj));\n});\ntaoensso.sente.cb_success_QMARK_ = (function taoensso$sente$cb_success_QMARK_(cb_reply_clj){\nreturn cljs.core.not(taoensso.sente.cb_error_QMARK_(cb_reply_clj));\n});\n/**\n * prefixed-pstr->[clj ?cb-uuid]\n */\ntaoensso.sente.unpack = (function taoensso$sente$unpack(packer,prefixed_pstr){\nif(typeof prefixed_pstr === 'string'){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",203,\"(string? prefixed-pstr)\",prefixed_pstr,null,null);\n}\n\nvar wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_(prefixed_pstr,\"+\");\nvar pstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(prefixed_pstr,(1));\nvar clj = (function (){try{return taoensso.sente.interfaces.unpack(packer,pstr);\n}catch (e69627){var t = e69627;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,210,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (t,wrapped_QMARK_,pstr){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad package: %s (%s)\",pstr,t], null);\n});})(t,wrapped_QMARK_,pstr))\n,null)),null,-1378246313);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-package\",\"chsk/bad-package\",501893679),pstr], null);\n}})();\nvar vec__69623 = ((wrapped_QMARK_)?clj:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,null], null));\nvar clj__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69623,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69623,(1),null);\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),_QMARK_cb_uuid))?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):_QMARK_cb_uuid);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,216,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (wrapped_QMARK_,pstr,clj,vec__69623,clj__$1,_QMARK_cb_uuid,_QMARK_cb_uuid__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unpacking: %s -> %s\",prefixed_pstr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null)], null);\n});})(wrapped_QMARK_,pstr,clj,vec__69623,clj__$1,_QMARK_cb_uuid,_QMARK_cb_uuid__$1))\n,null)),null,-1382360991);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null);\n});\n/**\n * clj->prefixed-pstr\n */\ntaoensso.sente.pack = (function taoensso$sente$pack(var_args){\nvar G__69629 = arguments.length;\nswitch (G__69629) {\ncase 2:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ntaoensso.sente.pack.cljs$core$IFn$_invoke$arity$2 = (function (packer,clj){\nvar pstr = [\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,223,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (pstr){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (unwrapped): %s -> %s\",clj,pstr], null);\n});})(pstr))\n,null)),null,-36370260);\n\nreturn pstr;\n});\n\ntaoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = (function (packer,clj,_QMARK_cb_uuid){\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_cb_uuid,new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321)))?(0):_QMARK_cb_uuid);\nvar wrapped_clj = (cljs.core.truth_(_QMARK_cb_uuid__$1)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,_QMARK_cb_uuid__$1], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null));\nvar pstr = [\"+\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,wrapped_clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,232,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (_QMARK_cb_uuid__$1,wrapped_clj,pstr){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (wrapped): %s -> %s\",wrapped_clj,pstr], null);\n});})(_QMARK_cb_uuid__$1,wrapped_clj,pstr))\n,null)),null,-1293574282);\n\nreturn pstr;\n});\n\ntaoensso.sente.pack.cljs$lang$maxFixedArity = 3;\n\n\n/**\n* @constructor\n * @implements {taoensso.sente.interfaces.IPacker}\n*/\ntaoensso.sente.EdnPacker = (function (){\n});\ntaoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = (function (_,x){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(x);\n});\n\ntaoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = (function (_,s){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(s);\n});\n\ntaoensso.sente.EdnPacker.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n});\n\ntaoensso.sente.EdnPacker.cljs$lang$type = true;\n\ntaoensso.sente.EdnPacker.cljs$lang$ctorStr = \"taoensso.sente/EdnPacker\";\n\ntaoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"taoensso.sente/EdnPacker\");\n});\n\n/**\n * Positional factory function for taoensso.sente/EdnPacker.\n */\ntaoensso.sente.__GT_EdnPacker = (function taoensso$sente$__GT_EdnPacker(){\nreturn (new taoensso.sente.EdnPacker());\n});\n\ntaoensso.sente.default_edn_packer = (new taoensso.sente.EdnPacker());\ntaoensso.sente.coerce_packer = (function taoensso$sente$coerce_packer(x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885))){\nreturn taoensso.sente.default_edn_packer;\n} else {\nvar e = (function (){try{if((function (){var fexpr__69642 = (function (p1__69639_SHARP_){\nif((!((p1__69639_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__69639_SHARP_.taoensso$sente$interfaces$IPacker$)))){\nreturn true;\n} else {\nif((!p1__69639_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__69639_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__69639_SHARP_);\n}\n});\nreturn fexpr__69642(x);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e69640){if((e69640 instanceof Error)){\nvar e = e69640;\nreturn e;\n} else {\nthrow e69640;\n\n}\n}})();\nif((e == null)){\nreturn x;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",245,\"((fn* [p1__69639#] (satisfies? interfaces/IPacker p1__69639#)) x)\",x,e,null);\n}\n}\n});\ntaoensso.sente.next_idx_BANG_ = taoensso.encore.idx_fn();\n\n\n/**\n * Takes a web server adapter[1] and returns a map with keys:\n *  :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n *  :send-fn ; (fn [user-id ev] for server>user push.\n *  :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n *  :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n *  :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n * \n *   Common options:\n *  :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n *  :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n *                     ;                    CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n *  :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n *  :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n *  :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n *  :send-buf-ms-ajax  ; [2]\n *  :send-buf-ms-ws    ; [2]\n *  :packer            ; :edn (default), or an IPacker implementation.\n * \n *   [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n *         `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n *    You must have the necessary web-server dependency in your project.clj and\n *    the necessary entry in your namespace's `ns` form.\n * \n *   [2] Optimization to allow transparent batching of rapidly-triggered\n *    server>user pushes. This is esp. important for Ajax clients which use a\n *    (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n *    after send call (larger values => larger batch windows).\n */\ntaoensso.sente.make_channel_socket_server_BANG_ = (function taoensso$sente$make_channel_socket_server_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___71243 = arguments.length;\nvar i__4731__auto___71244 = (0);\nwhile(true){\nif((i__4731__auto___71244 < len__4730__auto___71243)){\nargs__4736__auto__.push((arguments[i__4731__auto___71244]));\n\nvar G__71245 = (i__4731__auto___71244 + (1));\ni__4731__auto___71244 = G__71245;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (web_server_ch_adapter,p__69655){\nvar vec__69656 = p__69655;\nvar map__69659 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69656,(0),null);\nvar map__69659__$1 = (((((!((map__69659 == null))))?(((((map__69659.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__69659.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__69659):map__69659);\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(25)], 0)));\nvar send_buf_ms_ws = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"send-buf-ms-ws\",\"send-buf-ms-ws\",-1149586238),(30));\nvar lp_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar csrf_token_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"csrf-token-fn\",\"csrf-token-fn\",-1846298394),((function (vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms){\nreturn (function (ring_req){\nvar or__4131__auto__ = new cljs.core.Keyword(null,\"anti-forgery-token\",\"anti-forgery-token\",806990841).cljs$core$IFn$_invoke$arity$1(ring_req);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nvar or__4131__auto____$2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(\"ring.middleware.anti-forgery\",\"anti-forgery-token\",\"ring.middleware.anti-forgery/anti-forgery-token\",571563484)], null));\nif(cljs.core.truth_(or__4131__auto____$2)){\nreturn or__4131__auto____$2;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),\"__anti-forgery-token\"], null));\n}\n}\n}\n});})(vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms))\n);\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar send_buf_ms_ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"send-buf-ms-ajax\",\"send-buf-ms-ajax\",1546129037),(100));\nvar handshake_data_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"handshake-data-fn\",\"handshake-data-fn\",2011983089),((function (vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax){\nreturn (function (ring_req){\nreturn null;\n});})(vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax))\n);\nvar user_id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"user-id-fn\",\"user-id-fn\",-1532150029),((function (vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn){\nreturn (function (ring_req){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400)], null));\n});})(vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn))\n);\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((1000)));\nvar bad_csrf_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__69659__$1,new cljs.core.Keyword(null,\"bad-csrf-fn\",\"bad-csrf-fn\",16619032),((function (vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n){\nreturn (function (ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Bad CSRF token\"], null);\n});})(vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n))\n);\nnew cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ajax)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e69662){if((e69662 instanceof Error)){\nvar e = e69662;\nreturn e;\n} else {\nthrow e69662;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",320,\"(enc/pos-int? send-buf-ms-ajax)\",send_buf_ms_ajax,e,null);\n}\n})(),(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ws)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e69666){if((e69666 instanceof Error)){\nvar e = e69666;\nreturn e;\n} else {\nthrow e69666;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",320,\"(enc/pos-int? send-buf-ms-ws)\",send_buf_ms_ws,e,null);\n}\n})()], null);\n\nvar e_71257 = (function (){try{if((function (){var fexpr__69669 = ((function (vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p1__69648_SHARP_){\nif((!((p1__69648_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__69648_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$)))){\nreturn true;\n} else {\nif((!p1__69648_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__69648_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__69648_SHARP_);\n}\n});})(vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn fexpr__69669(web_server_ch_adapter);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e69667){if((e69667 instanceof Error)){\nvar e = e69667;\nreturn e;\n} else {\nthrow e69667;\n\n}\n}})();\nif((e_71257 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",321,\"((fn* [p1__69648#] (satisfies? interfaces/IServerChanAdapter p1__69648#)) web-server-ch-adapter)\",web_server_ch_adapter,e_71257,null);\n}\n\nvar max_ms_71258 = taoensso.sente.default_client_side_ajax_timeout_ms;\nif((lp_timeout_ms >= max_ms_71258)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":lp-timeout-ms must be < \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_ms_71258)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),lp_timeout_ms,new cljs.core.Keyword(null,\"default-client-side-ajax-timeout-ms\",\"default-client-side-ajax-timeout-ms\",1149929762),max_ms_71258], null));\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar ch_recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(recv_buf_or_n);\nvar user_id_fn__$1 = ((function (packer__$1,ch_recv,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req,client_id){\nvar or__4131__auto__ = (function (){var G__69672 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ring_req,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id);\nreturn (user_id_fn.cljs$core$IFn$_invoke$arity$1 ? user_id_fn.cljs$core$IFn$_invoke$arity$1(G__69672) : user_id_fn.call(null,G__69672));\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486);\n}\n});})(packer__$1,ch_recv,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar conns_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar send_buffers_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar connected_uids_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.PersistentHashSet.EMPTY], null));\nvar upd_conn_BANG_ = ((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar G__71263 = null;\nvar G__71263__3 = (function (conn_type,uid,client_id){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nvar vec__69673 = _QMARK_v;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69673,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69673,(1),null);\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),_QMARK_sch], null));\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n});\nvar G__71263__4 = (function (conn_type,uid,client_id,new__QMARK_sch){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),new__QMARK_sch], null));\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n});\nG__71263 = function(conn_type,uid,client_id,new__QMARK_sch){\nswitch(arguments.length){\ncase 3:\nreturn G__71263__3.call(this,conn_type,uid,client_id);\ncase 4:\nreturn G__71263__4.call(this,conn_type,uid,client_id,new__QMARK_sch);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__71263.cljs$core$IFn$_invoke$arity$3 = G__71263__3;\nG__71263.cljs$core$IFn$_invoke$arity$4 = G__71263__4;\nreturn G__71263;\n})()\n;})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar connect_uid_BANG_ = ((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (conn_type,uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e69677){if((e69677 instanceof Error)){\nvar e = e69677;\nreturn e;\n} else {\nthrow e69677;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",365,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p__69681){\nvar map__69682 = p__69681;\nvar map__69682__$1 = (((((!((map__69682 == null))))?(((((map__69682.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__69682.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__69682):map__69682);\nvar old_m = map__69682__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69682__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69682__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69682__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar new_m = (function (){var G__69684 = conn_type;\nvar G__69684__$1 = (((G__69684 instanceof cljs.core.Keyword))?G__69684.fqn:null);\nswitch (G__69684__$1) {\ncase \"ws\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),ajax__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ncase \"ajax\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),ws,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__69684__$1)].join('')));\n\n}\n})();\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif((((!(cljs.core.contains_QMARK_(old_any,uid)))) && (cljs.core.contains_QMARK_(new_any,uid)))){\nreturn new cljs.core.Keyword(null,\"newly-connected\",\"newly-connected\",-2029862681);\n} else {\nreturn null;\n}\n})());\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\nreturn newly_connected_QMARK_;\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar upd_connected_uid_BANG_ = ((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e69686){if((e69686 instanceof Error)){\nvar e = e69686;\nreturn e;\n} else {\nthrow e69686;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",382,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p__69687){\nvar map__69688 = p__69687;\nvar map__69688__$1 = (((((!((map__69688 == null))))?(((((map__69688.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__69688.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__69688):map__69688);\nvar old_m = map__69688__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69688__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69688__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69688__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar conns_SINGLEQUOTE_ = cljs.core.deref(conns_);\nvar any_ws_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_clients_QMARK_ = ((any_ws_clients_QMARK_) || (any_ajax_clients_QMARK_));\nvar new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),((any_ws_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ws,uid)),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),((any_ajax_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid)),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),((any_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(any,uid))], null);\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif(((cljs.core.contains_QMARK_(old_any,uid)) && ((!(cljs.core.contains_QMARK_(new_any,uid)))))){\nreturn new cljs.core.Keyword(null,\"newly-disconnected\",\"newly-disconnected\",-1586164962);\n} else {\nreturn null;\n}\n})());\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\nreturn newly_disconnected_QMARK_;\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar send_fn = ((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() { \nvar G__71294__delegate = function (user_id,ev,p__69691){\nvar vec__69692 = p__69691;\nvar map__69695 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69692,(0),null);\nvar map__69695__$1 = (((((!((map__69695 == null))))?(((((map__69695.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__69695.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__69695):map__69695);\nvar opts = map__69695__$1;\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__69695__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar uid_71309 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(user_id,new cljs.core.Keyword(\"sente\",\"all-users-without-uid\",\"sente/all-users-without-uid\",-42979578)))?new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486):user_id);\nvar __71310 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,408,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (uid_71309,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (->uid %s) %s\",uid_71309,ev], null);\n});})(uid_71309,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-1368166526);\nvar __71311__$1 = (cljs.core.truth_(uid_71309)?null:(function(){throw (new Error([\"Assert failed: \",[\"Support for sending to `nil` user-ids has been REMOVED. \",\"Please send to `:sente/all-users-without-uid` instead.\"].join(''),\"\\n\",\"uid\"].join('')))})());\nvar __71312__$2 = taoensso.sente.assert_event(ev);\nvar ev_uuid_71313 = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\nvar flush_buffer_BANG__71314 = ((function (uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (conn_type){\nvar temp__5735__auto__ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null),((function (uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (m){\nvar vec__69697 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_71309);\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69697,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69697,(1),null);\nif(cljs.core.contains_QMARK_(ev_uuids,ev_uuid_71313)){\nreturn taoensso.encore.swapped(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,uid_71309),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_71309));\n} else {\nreturn taoensso.encore.swapped(m,null);\n}\n});})(uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar pulled = temp__5735__auto__;\nvar vec__69700 = pulled;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69700,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69700,(1),null);\nif(cljs.core.vector_QMARK_(buffered_evs)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",435,\"(vector? buffered-evs)\",buffered_evs,null,null);\n}\n\nif(cljs.core.set_QMARK_(ev_uuids)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",436,\"(set? ev-uuids)\",ev_uuids,null,null);\n}\n\nvar buffered_evs_ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,buffered_evs);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,439,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (buffered_evs_ppstr,vec__69700,buffered_evs,ev_uuids,pulled,temp__5735__auto__,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"buffered-evs-ppstr: %s\",buffered_evs_ppstr], null);\n});})(buffered_evs_ppstr,vec__69700,buffered_evs,ev_uuids,pulled,temp__5735__auto__,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-1780856363);\n\nvar G__69708 = conn_type;\nvar G__69708__$1 = (((G__69708 instanceof cljs.core.Keyword))?G__69708.fqn:null);\nswitch (G__69708__$1) {\ncase \"ws\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4 ? taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4(conns_,uid_71309,buffered_evs_ppstr,upd_conn_BANG_) : taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null,conns_,uid_71309,buffered_evs_ppstr,upd_conn_BANG_));\n\nbreak;\ncase \"ajax\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,uid_71309,buffered_evs_ppstr) : taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null,conns_,uid_71309,buffered_evs_ppstr));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__69708__$1)].join('')));\n\n}\n} else {\nreturn null;\n}\n});})(uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ev,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"close\",\"chsk/close\",1840295819)], null))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,448,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk closing (client may reconnect): %s\",uid_71309], null);\n});})(uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-733655213);\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__71314(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__71314(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\n}\n\nvar seq__69712_71316 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid_71309], null))));\nvar chunk__69713_71317 = null;\nvar count__69714_71318 = (0);\nvar i__69715_71319 = (0);\nwhile(true){\nif((i__69715_71319 < count__69714_71318)){\nvar vec__69760_71320 = chunk__69713_71317.cljs$core$IIndexed$_nth$arity$2(null,i__69715_71319);\nvar _QMARK_sch_71321 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69760_71320,(0),null);\nvar _udt_71322 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69760_71320,(1),null);\nvar temp__5735__auto___71323 = _QMARK_sch_71321;\nif(cljs.core.truth_(temp__5735__auto___71323)){\nvar sch_71324 = temp__5735__auto___71323;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_71324);\n} else {\n}\n\n\nvar G__71325 = seq__69712_71316;\nvar G__71326 = chunk__69713_71317;\nvar G__71327 = count__69714_71318;\nvar G__71328 = (i__69715_71319 + (1));\nseq__69712_71316 = G__71325;\nchunk__69713_71317 = G__71326;\ncount__69714_71318 = G__71327;\ni__69715_71319 = G__71328;\ncontinue;\n} else {\nvar temp__5735__auto___71329 = cljs.core.seq(seq__69712_71316);\nif(temp__5735__auto___71329){\nvar seq__69712_71330__$1 = temp__5735__auto___71329;\nif(cljs.core.chunked_seq_QMARK_(seq__69712_71330__$1)){\nvar c__4550__auto___71331 = cljs.core.chunk_first(seq__69712_71330__$1);\nvar G__71332 = cljs.core.chunk_rest(seq__69712_71330__$1);\nvar G__71333 = c__4550__auto___71331;\nvar G__71334 = cljs.core.count(c__4550__auto___71331);\nvar G__71335 = (0);\nseq__69712_71316 = G__71332;\nchunk__69713_71317 = G__71333;\ncount__69714_71318 = G__71334;\ni__69715_71319 = G__71335;\ncontinue;\n} else {\nvar vec__69764_71336 = cljs.core.first(seq__69712_71330__$1);\nvar _QMARK_sch_71337 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69764_71336,(0),null);\nvar _udt_71338 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69764_71336,(1),null);\nvar temp__5735__auto___71339__$1 = _QMARK_sch_71337;\nif(cljs.core.truth_(temp__5735__auto___71339__$1)){\nvar sch_71340 = temp__5735__auto___71339__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_71340);\n} else {\n}\n\n\nvar G__71341 = cljs.core.next(seq__69712_71330__$1);\nvar G__71342 = null;\nvar G__71343 = (0);\nvar G__71344 = (0);\nseq__69712_71316 = G__71341;\nchunk__69713_71317 = G__71342;\ncount__69714_71318 = G__71343;\ni__69715_71319 = G__71344;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__69768_71345 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid_71309], null))));\nvar chunk__69769_71346 = null;\nvar count__69770_71347 = (0);\nvar i__69771_71348 = (0);\nwhile(true){\nif((i__69771_71348 < count__69770_71347)){\nvar vec__69782_71351 = chunk__69769_71346.cljs$core$IIndexed$_nth$arity$2(null,i__69771_71348);\nvar _QMARK_sch_71352 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69782_71351,(0),null);\nvar _udt_71353 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69782_71351,(1),null);\nvar temp__5735__auto___71356 = _QMARK_sch_71352;\nif(cljs.core.truth_(temp__5735__auto___71356)){\nvar sch_71357 = temp__5735__auto___71356;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_71357);\n} else {\n}\n\n\nvar G__71358 = seq__69768_71345;\nvar G__71359 = chunk__69769_71346;\nvar G__71360 = count__69770_71347;\nvar G__71361 = (i__69771_71348 + (1));\nseq__69768_71345 = G__71358;\nchunk__69769_71346 = G__71359;\ncount__69770_71347 = G__71360;\ni__69771_71348 = G__71361;\ncontinue;\n} else {\nvar temp__5735__auto___71362 = cljs.core.seq(seq__69768_71345);\nif(temp__5735__auto___71362){\nvar seq__69768_71363__$1 = temp__5735__auto___71362;\nif(cljs.core.chunked_seq_QMARK_(seq__69768_71363__$1)){\nvar c__4550__auto___71364 = cljs.core.chunk_first(seq__69768_71363__$1);\nvar G__71365 = cljs.core.chunk_rest(seq__69768_71363__$1);\nvar G__71366 = c__4550__auto___71364;\nvar G__71367 = cljs.core.count(c__4550__auto___71364);\nvar G__71368 = (0);\nseq__69768_71345 = G__71365;\nchunk__69769_71346 = G__71366;\ncount__69770_71347 = G__71367;\ni__69771_71348 = G__71368;\ncontinue;\n} else {\nvar vec__69789_71369 = cljs.core.first(seq__69768_71363__$1);\nvar _QMARK_sch_71370 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69789_71369,(0),null);\nvar _udt_71371 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69789_71369,(1),null);\nvar temp__5735__auto___71374__$1 = _QMARK_sch_71370;\nif(cljs.core.truth_(temp__5735__auto___71374__$1)){\nvar sch_71375 = temp__5735__auto___71374__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_71375);\n} else {\n}\n\n\nvar G__71376 = cljs.core.next(seq__69768_71363__$1);\nvar G__71377 = null;\nvar G__71378 = (0);\nvar G__71379 = (0);\nseq__69768_71345 = G__71376;\nchunk__69769_71346 = G__71377;\ncount__69770_71347 = G__71378;\ni__69771_71348 = G__71379;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nvar seq__69795_71380 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)], null));\nvar chunk__69796_71381 = null;\nvar count__69797_71382 = (0);\nvar i__69798_71383 = (0);\nwhile(true){\nif((i__69798_71383 < count__69797_71382)){\nvar conn_type_71384 = chunk__69796_71381.cljs$core$IIndexed$_nth$arity$2(null,i__69798_71383);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_71384,uid_71309], null),((function (seq__69795_71380,chunk__69796_71381,count__69797_71382,i__69798_71383,conn_type_71384,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_71313])], null);\n} else {\nvar vec__69814 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69814,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69814,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_71313)], null);\n}\n});})(seq__69795_71380,chunk__69796_71381,count__69797_71382,i__69798_71383,conn_type_71384,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar G__71387 = seq__69795_71380;\nvar G__71388 = chunk__69796_71381;\nvar G__71389 = count__69797_71382;\nvar G__71390 = (i__69798_71383 + (1));\nseq__69795_71380 = G__71387;\nchunk__69796_71381 = G__71388;\ncount__69797_71382 = G__71389;\ni__69798_71383 = G__71390;\ncontinue;\n} else {\nvar temp__5735__auto___71391 = cljs.core.seq(seq__69795_71380);\nif(temp__5735__auto___71391){\nvar seq__69795_71392__$1 = temp__5735__auto___71391;\nif(cljs.core.chunked_seq_QMARK_(seq__69795_71392__$1)){\nvar c__4550__auto___71393 = cljs.core.chunk_first(seq__69795_71392__$1);\nvar G__71394 = cljs.core.chunk_rest(seq__69795_71392__$1);\nvar G__71395 = c__4550__auto___71393;\nvar G__71396 = cljs.core.count(c__4550__auto___71393);\nvar G__71397 = (0);\nseq__69795_71380 = G__71394;\nchunk__69796_71381 = G__71395;\ncount__69797_71382 = G__71396;\ni__69798_71383 = G__71397;\ncontinue;\n} else {\nvar conn_type_71398 = cljs.core.first(seq__69795_71392__$1);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_71398,uid_71309], null),((function (seq__69795_71380,chunk__69796_71381,count__69797_71382,i__69798_71383,conn_type_71398,seq__69795_71392__$1,temp__5735__auto___71391,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_71313])], null);\n} else {\nvar vec__69818 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69818,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69818,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_71313)], null);\n}\n});})(seq__69795_71380,chunk__69796_71381,count__69797_71382,i__69798_71383,conn_type_71398,seq__69795_71392__$1,temp__5735__auto___71391,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar G__71401 = cljs.core.next(seq__69795_71392__$1);\nvar G__71402 = null;\nvar G__71403 = (0);\nvar G__71404 = (0);\nseq__69795_71380 = G__71401;\nchunk__69796_71381 = G__71402;\ncount__69797_71382 = G__71403;\ni__69798_71383 = G__71404;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__71314(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__71314(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\nvar ws_timeout_71405 = cljs.core.async.timeout(send_buf_ms_ws);\nvar ajax_timeout_71406 = cljs.core.async.timeout(send_buf_ms_ajax);\nvar c__60039__auto___71407 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto___71407,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto___71407,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_69826){\nvar state_val_69827 = (state_69826[(1)]);\nif((state_val_69827 === (1))){\nvar state_69826__$1 = state_69826;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_69826__$1,(2),ws_timeout_71405);\n} else {\nif((state_val_69827 === (2))){\nvar inst_69823 = (state_69826[(2)]);\nvar inst_69824 = flush_buffer_BANG__71314(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar state_69826__$1 = (function (){var statearr_69828 = state_69826;\n(statearr_69828[(7)] = inst_69823);\n\nreturn statearr_69828;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_69826__$1,inst_69824);\n} else {\nreturn null;\n}\n}\n});})(c__60039__auto___71407,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto___71407,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_69831 = [null,null,null,null,null,null,null,null];\n(statearr_69831[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_69831[(1)] = (1));\n\nreturn statearr_69831;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_69826){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_69826);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e69832){if((e69832 instanceof Object)){\nvar ex__59760__auto__ = e69832;\nvar statearr_69833_71410 = state_69826;\n(statearr_69833_71410[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_69826);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e69832;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71411 = state_69826;\nstate_69826 = G__71411;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_69826){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_69826);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto___71407,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__60041__auto__ = (function (){var statearr_69837 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_69837[(6)] = c__60039__auto___71407);\n\nreturn statearr_69837;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto___71407,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar c__60039__auto___71412 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto___71412,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto___71412,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_69844){\nvar state_val_69845 = (state_69844[(1)]);\nif((state_val_69845 === (1))){\nvar state_69844__$1 = state_69844;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_69844__$1,(2),ajax_timeout_71406);\n} else {\nif((state_val_69845 === (2))){\nvar inst_69841 = (state_69844[(2)]);\nvar inst_69842 = flush_buffer_BANG__71314(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar state_69844__$1 = (function (){var statearr_69846 = state_69844;\n(statearr_69846[(7)] = inst_69841);\n\nreturn statearr_69846;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_69844__$1,inst_69842);\n} else {\nreturn null;\n}\n}\n});})(c__60039__auto___71412,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto___71412,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_69847 = [null,null,null,null,null,null,null,null];\n(statearr_69847[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_69847[(1)] = (1));\n\nreturn statearr_69847;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_69844){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_69844);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e69848){if((e69848 instanceof Object)){\nvar ex__59760__auto__ = e69848;\nvar statearr_69849_71417 = state_69844;\n(statearr_69849_71417[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_69844);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e69848;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71418 = state_69844;\nstate_69844 = G__71418;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_69844){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_69844);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto___71412,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__60041__auto__ = (function (){var statearr_69852 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_69852[(6)] = c__60039__auto___71412);\n\nreturn statearr_69852;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto___71412,ws_timeout_71405,ajax_timeout_71406,uid_71309,__71310,__71311__$1,__71312__$2,ev_uuid_71313,flush_buffer_BANG__71314,vec__69692,map__69695,map__69695__$1,opts,flush_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n}\n}\n\nreturn null;\n};\nvar G__71294 = function (user_id,ev,var_args){\nvar p__69691 = null;\nif (arguments.length > 2) {\nvar G__71419__i = 0, G__71419__a = new Array(arguments.length -  2);\nwhile (G__71419__i < G__71419__a.length) {G__71419__a[G__71419__i] = arguments[G__71419__i + 2]; ++G__71419__i;}\n  p__69691 = new cljs.core.IndexedSeq(G__71419__a,0,null);\n} \nreturn G__71294__delegate.call(this,user_id,ev,p__69691);};\nG__71294.cljs$lang$maxFixedArity = 2;\nG__71294.cljs$lang$applyTo = (function (arglist__71420){\nvar user_id = cljs.core.first(arglist__71420);\narglist__71420 = cljs.core.next(arglist__71420);\nvar ev = cljs.core.first(arglist__71420);\nvar p__69691 = cljs.core.rest(arglist__71420);\nreturn G__71294__delegate(user_id,ev,p__69691);\n});\nG__71294.cljs$core$IFn$_invoke$arity$variadic = G__71294__delegate;\nreturn G__71294;\n})()\n;})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar bad_csrf_QMARK_ = ((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req){\nif((csrf_token_fn == null)){\nreturn false;\n} else {\nvar temp__5733__auto__ = (csrf_token_fn.cljs$core$IFn$_invoke$arity$1 ? csrf_token_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : csrf_token_fn.call(null,ring_req));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar reference_csrf_token = temp__5733__auto__;\nvar csrf_token_from_client = (function (){var or__4131__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-csrf-token\"], null));\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-xsrf-token\"], null));\n}\n}\n})();\nreturn cljs.core.not(taoensso.encore.const_str_EQ_(reference_csrf_token,csrf_token_from_client));\n} else {\nreturn true;\n}\n}\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar ev_msg_const = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_], null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"ajax-post-fn\",\"ajax-post-fn\",1830071264),((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req){\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null,ring_req));\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_){\nif(cljs.core.not(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: (not websocket?)\"));\n}\n\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar ppstr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar vec__69861 = taoensso.sente.unpack(packer__$1,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69861,(0),null);\nvar has_cb_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__69861,(1),null);\nvar reply_fn = (function (){var replied_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nreturn ((function (replied_QMARK__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (resp_clj){\nif(cljs.core.compare_and_set_BANG_(replied_QMARK__,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,542,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (replied_QMARK__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ajax post reply): %s\",resp_clj], null);\n});})(replied_QMARK__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,125440232);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,resp_clj));\n} else {\nreturn null;\n}\n});\n;})(replied_QMARK__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),clj,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),user_id_fn__$1(ring_req,client_id),new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),(cljs.core.truth_(has_cb_QMARK_)?reply_fn:null)], null)], 0)));\n\nif(cljs.core.truth_(has_cb_QMARK_)){\nvar temp__5735__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__60039__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,reply_fn,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,reply_fn,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_69877){\nvar state_val_69878 = (state_69877[(1)]);\nif((state_val_69878 === (1))){\nvar inst_69872 = cljs.core.async.timeout(ms);\nvar state_69877__$1 = state_69877;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_69877__$1,(2),inst_69872);\n} else {\nif((state_val_69878 === (2))){\nvar inst_69874 = (state_69877[(2)]);\nvar inst_69875 = (function (){var G__69883 = new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489);\nreturn (reply_fn.cljs$core$IFn$_invoke$arity$1 ? reply_fn.cljs$core$IFn$_invoke$arity$1(G__69883) : reply_fn.call(null,G__69883));\n})();\nvar state_69877__$1 = (function (){var statearr_69884 = state_69877;\n(statearr_69884[(7)] = inst_69874);\n\nreturn statearr_69884;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_69877__$1,inst_69875);\n} else {\nreturn null;\n}\n}\n});})(c__60039__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,reply_fn,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,reply_fn,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_69885 = [null,null,null,null,null,null,null,null];\n(statearr_69885[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_69885[(1)] = (1));\n\nreturn statearr_69885;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_69877){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_69877);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e69886){if((e69886 instanceof Object)){\nvar ex__59760__auto__ = e69886;\nvar statearr_69887_71449 = state_69877;\n(statearr_69887_71449[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_69877);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e69886;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71451 = state_69877;\nstate_69877 = G__71451;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_69877){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_69877);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,reply_fn,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__60041__auto__ = (function (){var statearr_69890 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_69890[(6)] = c__60039__auto__);\n\nreturn statearr_69890;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__69861,clj,has_cb_QMARK_,reply_fn,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__60039__auto__;\n} else {\nreturn null;\n}\n} else {\nvar G__69891 = new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337);\nreturn (reply_fn.cljs$core$IFn$_invoke$arity$1 ? reply_fn.cljs$core$IFn$_invoke$arity$1(G__69891) : reply_fn.call(null,G__69891));\n}\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n], null));\n\n}\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"ajax-get-or-ws-handshake-fn\",\"ajax-get-or-ws-handshake-fn\",-1210409233),((function (packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req){\nvar sch_uuid = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar uid = user_id_fn__$1(ring_req,client_id);\nvar receive_event_msg_BANG_ = ((function (sch_uuid,params,client_id,uid,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$self = null;\nvar taoensso$sente$self__1 = (function (event){\nreturn taoensso$sente$self.cljs$core$IFn$_invoke$arity$2(event,null);\n});\nvar taoensso$sente$self__2 = (function (event,_QMARK_reply_fn){\nreturn taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),uid], null)], 0)));\n});\ntaoensso$sente$self = function(event,_QMARK_reply_fn){\nswitch(arguments.length){\ncase 1:\nreturn taoensso$sente$self__1.call(this,event);\ncase 2:\nreturn taoensso$sente$self__2.call(this,event,_QMARK_reply_fn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;\nreturn taoensso$sente$self;\n})()\n;})(sch_uuid,params,client_id,uid,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar send_handshake_BANG_ = ((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,586,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-handshake!\"], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-175853212);\n\nvar _QMARK_handshake_data = (handshake_data_fn.cljs$core$IFn$_invoke$arity$1 ? handshake_data_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : handshake_data_fn.call(null,ring_req));\nvar handshake_ev = (((_QMARK_handshake_data == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null,_QMARK_handshake_data], null)], null));\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,handshake_ev));\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nif(clojure.string.blank_QMARK_(client_id)){\nvar err_msg = \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\";\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,599,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (err_msg,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[err_msg,\": %s\"].join(''),ring_req], null);\n});})(err_msg,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-588474439);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req], null));\n} else {\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null,ring_req));\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_){\nif(cljs.core.truth_(websocket_QMARK_)){\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,612,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New WebSocket channel: %s (%s)\",uid,sch_uuid], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,724722135);\nvar updated_conn = upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid))){\nreceive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nsend_handshake_BANG_(server_ch,websocket_QMARK_);\n\nvar temp__5735__auto__ = ws_kalive_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__60039__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_69945){\nvar state_val_69946 = (state_69945[(1)]);\nif((state_val_69946 === (7))){\nvar inst_69941 = (state_69945[(2)]);\nvar state_69945__$1 = state_69945;\nvar statearr_69950_71487 = state_69945__$1;\n(statearr_69950_71487[(2)] = inst_69941);\n\n(statearr_69950_71487[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (1))){\nvar inst_69901 = udt_open;\nvar state_69945__$1 = (function (){var statearr_69952 = state_69945;\n(statearr_69952[(7)] = inst_69901);\n\nreturn statearr_69952;\n})();\nvar statearr_69953_71488 = state_69945__$1;\n(statearr_69953_71488[(2)] = null);\n\n(statearr_69953_71488[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (4))){\nvar inst_69914 = (state_69945[(8)]);\nvar inst_69905 = (state_69945[(2)]);\nvar inst_69909 = cljs.core.deref(conns_);\nvar inst_69911 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_69912 = [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id];\nvar inst_69913 = (new cljs.core.PersistentVector(null,3,(5),inst_69911,inst_69912,null));\nvar inst_69914__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_69909,inst_69913);\nvar state_69945__$1 = (function (){var statearr_69956 = state_69945;\n(statearr_69956[(8)] = inst_69914__$1);\n\n(statearr_69956[(9)] = inst_69905);\n\nreturn statearr_69956;\n})();\nif(cljs.core.truth_(inst_69914__$1)){\nvar statearr_69958_71498 = state_69945__$1;\n(statearr_69958_71498[(1)] = (5));\n\n} else {\nvar statearr_69959_71499 = state_69945__$1;\n(statearr_69959_71499[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (13))){\nvar inst_69921 = (state_69945[(10)]);\nvar inst_69934 = (state_69945[(2)]);\nvar inst_69901 = inst_69921;\nvar state_69945__$1 = (function (){var statearr_69960 = state_69945;\n(statearr_69960[(7)] = inst_69901);\n\n(statearr_69960[(11)] = inst_69934);\n\nreturn statearr_69960;\n})();\nvar statearr_69961_71500 = state_69945__$1;\n(statearr_69961_71500[(2)] = null);\n\n(statearr_69961_71500[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (6))){\nvar state_69945__$1 = state_69945;\nvar statearr_69962_71501 = state_69945__$1;\n(statearr_69962_71501[(2)] = null);\n\n(statearr_69962_71501[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (3))){\nvar inst_69943 = (state_69945[(2)]);\nvar state_69945__$1 = state_69945;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_69945__$1,inst_69943);\n} else {\nif((state_val_69946 === (12))){\nvar state_69945__$1 = state_69945;\nvar statearr_69965_71502 = state_69945__$1;\n(statearr_69965_71502[(2)] = null);\n\n(statearr_69965_71502[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (2))){\nvar inst_69903 = cljs.core.async.timeout(ms);\nvar state_69945__$1 = state_69945;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_69945__$1,(4),inst_69903);\n} else {\nif((state_val_69946 === (11))){\nvar inst_69927 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304));\nvar inst_69928 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_69927);\nvar state_69945__$1 = state_69945;\nvar statearr_69967_71503 = state_69945__$1;\n(statearr_69967_71503[(2)] = inst_69928);\n\n(statearr_69967_71503[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (9))){\nvar state_69945__$1 = state_69945;\nvar statearr_69968_71504 = state_69945__$1;\n(statearr_69968_71504[(2)] = null);\n\n(statearr_69968_71504[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (5))){\nvar inst_69914 = (state_69945[(8)]);\nvar inst_69920 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_69914,(0),null);\nvar inst_69921 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_69914,(1),null);\nvar inst_69923 = taoensso.sente.interfaces.sch_open_QMARK_(server_ch);\nvar state_69945__$1 = (function (){var statearr_69970 = state_69945;\n(statearr_69970[(12)] = inst_69920);\n\n(statearr_69970[(10)] = inst_69921);\n\nreturn statearr_69970;\n})();\nif(cljs.core.truth_(inst_69923)){\nvar statearr_69971_71505 = state_69945__$1;\n(statearr_69971_71505[(1)] = (8));\n\n} else {\nvar statearr_69972_71506 = state_69945__$1;\n(statearr_69972_71506[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (10))){\nvar inst_69938 = (state_69945[(2)]);\nvar state_69945__$1 = state_69945;\nvar statearr_69973_71507 = state_69945__$1;\n(statearr_69973_71507[(2)] = inst_69938);\n\n(statearr_69973_71507[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_69946 === (8))){\nvar inst_69901 = (state_69945[(7)]);\nvar inst_69921 = (state_69945[(10)]);\nvar inst_69925 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_69921,inst_69901);\nvar state_69945__$1 = state_69945;\nif(inst_69925){\nvar statearr_69975_71508 = state_69945__$1;\n(statearr_69975_71508[(1)] = (11));\n\n} else {\nvar statearr_69976_71509 = state_69945__$1;\n(statearr_69976_71509[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_69977 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_69977[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_69977[(1)] = (1));\n\nreturn statearr_69977;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_69945){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_69945);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e69978){if((e69978 instanceof Object)){\nvar ex__59760__auto__ = e69978;\nvar statearr_69979_71510 = state_69945;\n(statearr_69979_71510[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_69945);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e69978;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71511 = state_69945;\nstate_69945 = G__71511;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_69945){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_69945);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__60041__auto__ = (function (){var statearr_69980 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_69980[(6)] = c__60039__auto__);\n\nreturn statearr_69980;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__60039__auto__;\n} else {\nreturn null;\n}\n} else {\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,641,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New Ajax handshake/poll: %s (%s)\",uid,sch_uuid], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,1362475913);\nvar updated_conn = upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar handshake_QMARK_ = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"init?\",\"init?\",438181499).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093).cljs$core$IFn$_invoke$arity$1(params);\n}\n})();\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid))){\nreceive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nif(cljs.core.truth_(handshake_QMARK_)){\nreturn send_handshake_BANG_(server_ch,websocket_QMARK_);\n} else {\nvar temp__5735__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__60039__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_70010){\nvar state_val_70011 = (state_70010[(1)]);\nif((state_val_70011 === (1))){\nvar inst_69985 = cljs.core.async.timeout(ms);\nvar state_70010__$1 = state_70010;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_70010__$1,(2),inst_69985);\n} else {\nif((state_val_70011 === (2))){\nvar inst_69992 = (state_70010[(7)]);\nvar inst_69987 = (state_70010[(2)]);\nvar inst_69988 = cljs.core.deref(conns_);\nvar inst_69989 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_69990 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id];\nvar inst_69991 = (new cljs.core.PersistentVector(null,3,(5),inst_69989,inst_69990,null));\nvar inst_69992__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_69988,inst_69991);\nvar state_70010__$1 = (function (){var statearr_70012 = state_70010;\n(statearr_70012[(7)] = inst_69992__$1);\n\n(statearr_70012[(8)] = inst_69987);\n\nreturn statearr_70012;\n})();\nif(cljs.core.truth_(inst_69992__$1)){\nvar statearr_70013_71512 = state_70010__$1;\n(statearr_70013_71512[(1)] = (3));\n\n} else {\nvar statearr_70014_71513 = state_70010__$1;\n(statearr_70014_71513[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70011 === (3))){\nvar inst_69992 = (state_70010[(7)]);\nvar inst_69997 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_69992,(0),null);\nvar inst_69998 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_69992,(1),null);\nvar inst_69999 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_69998,udt_open);\nvar state_70010__$1 = (function (){var statearr_70015 = state_70010;\n(statearr_70015[(9)] = inst_69997);\n\nreturn statearr_70015;\n})();\nif(inst_69999){\nvar statearr_70016_71514 = state_70010__$1;\n(statearr_70016_71514[(1)] = (6));\n\n} else {\nvar statearr_70017_71515 = state_70010__$1;\n(statearr_70017_71515[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70011 === (4))){\nvar state_70010__$1 = state_70010;\nvar statearr_70018_71516 = state_70010__$1;\n(statearr_70018_71516[(2)] = null);\n\n(statearr_70018_71516[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70011 === (5))){\nvar inst_70008 = (state_70010[(2)]);\nvar state_70010__$1 = state_70010;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_70010__$1,inst_70008);\n} else {\nif((state_val_70011 === (6))){\nvar inst_70001 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar inst_70002 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_70001);\nvar state_70010__$1 = state_70010;\nvar statearr_70019_71517 = state_70010__$1;\n(statearr_70019_71517[(2)] = inst_70002);\n\n(statearr_70019_71517[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70011 === (7))){\nvar state_70010__$1 = state_70010;\nvar statearr_70020_71518 = state_70010__$1;\n(statearr_70020_71518[(2)] = null);\n\n(statearr_70020_71518[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70011 === (8))){\nvar inst_70005 = (state_70010[(2)]);\nvar state_70010__$1 = state_70010;\nvar statearr_70021_71519 = state_70010__$1;\n(statearr_70021_71519[(2)] = inst_70005);\n\n(statearr_70021_71519[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_70022 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_70022[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_70022[(1)] = (1));\n\nreturn statearr_70022;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_70010){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_70010);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e70023){if((e70023 instanceof Object)){\nvar ex__59760__auto__ = e70023;\nvar statearr_70024_71520 = state_70010;\n(statearr_70024_71520[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_70010);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e70023;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71521 = state_70010;\nstate_70010 = G__71521;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_70010){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_70010);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__60041__auto__ = (function (){var statearr_70025 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_70025[(6)] = c__60039__auto__);\n\nreturn statearr_70025;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__60039__auto__;\n} else {\nreturn null;\n}\n}\n}\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"on-msg\",\"on-msg\",-2021925279),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_,req_ppstr){\nif(cljs.core.truth_(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: websocket?\"));\n}\n\nupd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id);\n\nvar vec__70030 = taoensso.sente.unpack(packer__$1,req_ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70030,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70030,(1),null);\nreturn receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$2(clj,(cljs.core.truth_(_QMARK_cb_uuid)?((function (vec__70030,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function taoensso$sente$reply_fn(resp_clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,671,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__70030,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ws reply): %s\",resp_clj], null);\n});})(vec__70030,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,68650799);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(packer__$1,resp_clj,_QMARK_cb_uuid));\n});})(vec__70030,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n:null));\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"on-close\",\"on-close\",-761178394),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_,_status){\nvar conn_type = (cljs.core.truth_(websocket_QMARK_)?new cljs.core.Keyword(null,\"ws\",\"ws\",86841443):new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,680,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (conn_type,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"%s channel closed: %s (%s)\",(cljs.core.truth_(websocket_QMARK_)?\"WebSocket\":\"Ajax\"),uid,sch_uuid], null);\n});})(conn_type,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-2124998526);\nvar updated_conn = upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4(conn_type,uid,client_id,null);\nvar udt_close = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar c__60039__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_70088){\nvar state_val_70089 = (state_70088[(1)]);\nif((state_val_70089 === (7))){\nvar state_70088__$1 = state_70088;\nvar statearr_70094_71523 = state_70088__$1;\n(statearr_70094_71523[(2)] = null);\n\n(statearr_70094_71523[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (1))){\nvar inst_70033 = cljs.core.async.timeout((5000));\nvar state_70088__$1 = state_70088;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_70088__$1,(2),inst_70033);\n} else {\nif((state_val_70089 === (4))){\nvar state_70088__$1 = state_70088;\nvar statearr_70095_71524 = state_70088__$1;\n(statearr_70095_71524[(2)] = null);\n\n(statearr_70095_71524[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (13))){\nvar state_70088__$1 = state_70088;\nvar statearr_70096_71525 = state_70088__$1;\n(statearr_70096_71525[(2)] = null);\n\n(statearr_70096_71525[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (6))){\nvar inst_70043 = (state_70088[(7)]);\nvar inst_70063 = (state_70088[(8)]);\nvar inst_70045 = (state_70088[(9)]);\nvar inst_70046 = (state_70088[(10)]);\nvar inst_70058 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_70059 = [conn_type,uid,client_id];\nvar inst_70060 = (new cljs.core.PersistentVector(null,3,(5),inst_70058,inst_70059,null));\nvar inst_70062 = (function (){var vec__70036 = inst_70043;\nvar __QMARK_sch = inst_70045;\nvar udt_t1 = inst_70046;\nreturn ((function (vec__70036,__QMARK_sch,udt_t1,inst_70043,inst_70063,inst_70045,inst_70046,inst_70058,inst_70059,inst_70060,state_val_70089,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p__70061){\nvar vec__70101 = p__70061;\nvar _sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70101,(0),null);\nvar udt_t1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70101,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1__$1,udt_close)){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),true);\n} else {\nreturn taoensso.encore.swapped(udt_t1__$1,false);\n}\n});\n;})(vec__70036,__QMARK_sch,udt_t1,inst_70043,inst_70063,inst_70045,inst_70046,inst_70058,inst_70059,inst_70060,state_val_70089,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar inst_70063__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_70060,inst_70062);\nvar state_70088__$1 = (function (){var statearr_70106 = state_70088;\n(statearr_70106[(8)] = inst_70063__$1);\n\nreturn statearr_70106;\n})();\nif(cljs.core.truth_(inst_70063__$1)){\nvar statearr_70108_71526 = state_70088__$1;\n(statearr_70108_71526[(1)] = (9));\n\n} else {\nvar statearr_70109_71527 = state_70088__$1;\n(statearr_70109_71527[(1)] = (10));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (3))){\nvar inst_70043 = (state_70088[(7)]);\nvar inst_70045 = (state_70088[(9)]);\nvar inst_70046 = (state_70088[(10)]);\nvar inst_70049 = (function (){var vec__70036 = inst_70043;\nvar __QMARK_sch = inst_70045;\nvar udt_t1 = inst_70046;\nreturn ((function (vec__70036,__QMARK_sch,udt_t1,inst_70043,inst_70045,inst_70046,state_val_70089,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"close-timeout: %s %s %s %s\",conn_type,uid,sch_uuid,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1,udt_close),udt_t1,udt_close], null)], null);\n});\n;})(vec__70036,__QMARK_sch,udt_t1,inst_70043,inst_70045,inst_70046,state_val_70089,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar inst_70050 = (new cljs.core.Delay(inst_70049,null));\nvar inst_70051 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,694,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_70050,null,1873240380);\nvar state_70088__$1 = state_70088;\nvar statearr_70112_71528 = state_70088__$1;\n(statearr_70112_71528[(2)] = inst_70051);\n\n(statearr_70112_71528[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (12))){\nvar inst_70073 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_70074 = [new cljs.core.Keyword(\"chsk\",\"uidport-close\",\"chsk/uidport-close\",901058678),uid];\nvar inst_70075 = (new cljs.core.PersistentVector(null,2,(5),inst_70073,inst_70074,null));\nvar inst_70076 = receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1(inst_70075);\nvar state_70088__$1 = state_70088;\nvar statearr_70114_71529 = state_70088__$1;\n(statearr_70114_71529[(2)] = inst_70076);\n\n(statearr_70114_71529[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (2))){\nvar inst_70043 = (state_70088[(7)]);\nvar inst_70035 = (state_70088[(2)]);\nvar inst_70039 = cljs.core.deref(conns_);\nvar inst_70040 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_70041 = [conn_type,uid,client_id];\nvar inst_70042 = (new cljs.core.PersistentVector(null,3,(5),inst_70040,inst_70041,null));\nvar inst_70043__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_70039,inst_70042);\nvar inst_70045 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_70043__$1,(0),null);\nvar inst_70046 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_70043__$1,(1),null);\nvar inst_70047 = cljs.core.deref(taoensso.sente.debug_mode_QMARK__);\nvar state_70088__$1 = (function (){var statearr_70116 = state_70088;\n(statearr_70116[(7)] = inst_70043__$1);\n\n(statearr_70116[(9)] = inst_70045);\n\n(statearr_70116[(10)] = inst_70046);\n\n(statearr_70116[(11)] = inst_70035);\n\nreturn statearr_70116;\n})();\nif(cljs.core.truth_(inst_70047)){\nvar statearr_70118_71531 = state_70088__$1;\n(statearr_70118_71531[(1)] = (3));\n\n} else {\nvar statearr_70119_71532 = state_70088__$1;\n(statearr_70119_71532[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (11))){\nvar inst_70082 = (state_70088[(2)]);\nvar state_70088__$1 = state_70088;\nvar statearr_70125_71533 = state_70088__$1;\n(statearr_70125_71533[(2)] = inst_70082);\n\n(statearr_70125_71533[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (9))){\nvar inst_70043 = (state_70088[(7)]);\nvar inst_70063 = (state_70088[(8)]);\nvar inst_70045 = (state_70088[(9)]);\nvar inst_70046 = (state_70088[(10)]);\nvar inst_70065 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_70066 = [conn_type,uid];\nvar inst_70067 = (new cljs.core.PersistentVector(null,2,(5),inst_70065,inst_70066,null));\nvar inst_70068 = (function (){var vec__70036 = inst_70043;\nvar __QMARK_sch = inst_70045;\nvar udt_t1 = inst_70046;\nvar disconnect_QMARK_ = inst_70063;\nreturn ((function (vec__70036,__QMARK_sch,udt_t1,disconnect_QMARK_,inst_70043,inst_70063,inst_70045,inst_70046,inst_70065,inst_70066,inst_70067,state_val_70089,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_m){\nif(cljs.core.empty_QMARK_(_QMARK_m)){\nreturn new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782);\n} else {\nreturn _QMARK_m;\n}\n});\n;})(vec__70036,__QMARK_sch,udt_t1,disconnect_QMARK_,inst_70043,inst_70063,inst_70045,inst_70046,inst_70065,inst_70066,inst_70067,state_val_70089,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar inst_70069 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_70067,inst_70068);\nvar inst_70070 = upd_connected_uid_BANG_(uid);\nvar state_70088__$1 = (function (){var statearr_70132 = state_70088;\n(statearr_70132[(12)] = inst_70069);\n\nreturn statearr_70132;\n})();\nif(cljs.core.truth_(inst_70070)){\nvar statearr_70135_71536 = state_70088__$1;\n(statearr_70135_71536[(1)] = (12));\n\n} else {\nvar statearr_70136_71537 = state_70088__$1;\n(statearr_70136_71537[(1)] = (13));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (5))){\nvar inst_70046 = (state_70088[(10)]);\nvar inst_70054 = (state_70088[(2)]);\nvar inst_70055 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_70046,udt_close);\nvar state_70088__$1 = (function (){var statearr_70138 = state_70088;\n(statearr_70138[(13)] = inst_70054);\n\nreturn statearr_70138;\n})();\nif(inst_70055){\nvar statearr_70141_71538 = state_70088__$1;\n(statearr_70141_71538[(1)] = (6));\n\n} else {\nvar statearr_70143_71539 = state_70088__$1;\n(statearr_70143_71539[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (14))){\nvar inst_70079 = (state_70088[(2)]);\nvar state_70088__$1 = state_70088;\nvar statearr_70145_71540 = state_70088__$1;\n(statearr_70145_71540[(2)] = inst_70079);\n\n(statearr_70145_71540[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (10))){\nvar state_70088__$1 = state_70088;\nvar statearr_70148_71541 = state_70088__$1;\n(statearr_70148_71541[(2)] = null);\n\n(statearr_70148_71541[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70089 === (8))){\nvar inst_70086 = (state_70088[(2)]);\nvar state_70088__$1 = state_70088;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_70088__$1,inst_70086);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_70151 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_70151[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_70151[(1)] = (1));\n\nreturn statearr_70151;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_70088){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_70088);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e70152){if((e70152 instanceof Object)){\nvar ex__59760__auto__ = e70152;\nvar statearr_70153_71542 = state_70088;\n(statearr_70153_71542[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_70088);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e70152;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71543 = state_70088;\nstate_70088 = G__71543;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_70088){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_70088);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__60041__auto__ = (function (){var statearr_70155 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_70155[(6)] = c__60039__auto__);\n\nreturn statearr_70155;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__60039__auto__;\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_,error){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,716,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ring-req->server-ch-resp error: %s (%s)\",error,uid,sch_uuid], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-326995842);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n], null));\n\n}\n}\n});})(packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__69656,map__69659,map__69659__$1,ws_kalive_ms,send_buf_ms_ws,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n], null);\n});\n\ntaoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ntaoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = (function (seq69653){\nvar G__69654 = cljs.core.first(seq69653);\nvar seq69653__$1 = cljs.core.next(seq69653);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__69654,seq69653__$1);\n});\n\n/**\n * Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_,uid,buffered_evs_pstr,upd_conn_BANG_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,722,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ws-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,355950406);\n\nvar seq__70157 = cljs.core.seq(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid], null)));\nvar chunk__70158 = null;\nvar count__70159 = (0);\nvar i__70160 = (0);\nwhile(true){\nif((i__70160 < count__70159)){\nvar vec__70202 = chunk__70158.cljs$core$IIndexed$_nth$arity$2(null,i__70160);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70202,(0),null);\nvar vec__70205 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70202,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70205,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70205,(1),null);\nvar temp__5735__auto___71547 = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto___71547)){\nvar sch_71548 = temp__5735__auto___71547;\nvar G__70211_71549 = new cljs.core.Keyword(null,\"ws\",\"ws\",86841443);\nvar G__70212_71550 = uid;\nvar G__70213_71551 = client_id;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(G__70211_71549,G__70212_71550,G__70213_71551) : upd_conn_BANG_.call(null,G__70211_71549,G__70212_71550,G__70213_71551));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_71548,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__71552 = seq__70157;\nvar G__71553 = chunk__70158;\nvar G__71554 = count__70159;\nvar G__71555 = (i__70160 + (1));\nseq__70157 = G__71552;\nchunk__70158 = G__71553;\ncount__70159 = G__71554;\ni__70160 = G__71555;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__70157);\nif(temp__5735__auto__){\nvar seq__70157__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__70157__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__70157__$1);\nvar G__71556 = cljs.core.chunk_rest(seq__70157__$1);\nvar G__71557 = c__4550__auto__;\nvar G__71558 = cljs.core.count(c__4550__auto__);\nvar G__71559 = (0);\nseq__70157 = G__71556;\nchunk__70158 = G__71557;\ncount__70159 = G__71558;\ni__70160 = G__71559;\ncontinue;\n} else {\nvar vec__70226 = cljs.core.first(seq__70157__$1);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70226,(0),null);\nvar vec__70229 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70226,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70229,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70229,(1),null);\nvar temp__5735__auto___71560__$1 = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto___71560__$1)){\nvar sch_71561 = temp__5735__auto___71560__$1;\nvar G__70232_71562 = new cljs.core.Keyword(null,\"ws\",\"ws\",86841443);\nvar G__70233_71563 = uid;\nvar G__70234_71564 = client_id;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(G__70232_71562,G__70233_71563,G__70234_71564) : upd_conn_BANG_.call(null,G__70232_71562,G__70233_71563,G__70234_71564));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_71561,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__71565 = cljs.core.next(seq__70157__$1);\nvar G__71566 = null;\nvar G__71567 = (0);\nvar G__71568 = (0);\nseq__70157 = G__71565;\nchunk__70158 = G__71566;\ncount__70159 = G__71567;\ni__70160 = G__71568;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n *   Allows some time for possible Ajax poller reconnects.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_,uid,buffered_evs_pstr){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,732,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ajax-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,-1003464603);\n\nvar ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(180),(360),(720),(1440)], null);\nvar client_ids_unsatisfied = cljs.core.keys(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid], null)));\nif(cljs.core.empty_QMARK_(client_ids_unsatisfied)){\nreturn null;\n} else {\nvar c__60039__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (state_70339){\nvar state_val_70340 = (state_70339[(1)]);\nif((state_val_70340 === (7))){\nvar inst_70291 = (state_70339[(7)]);\nvar inst_70283 = (state_70339[(8)]);\nvar inst_70282 = (state_70339[(9)]);\nvar inst_70311 = (function (){var n = inst_70282;\nvar client_ids_satisfied = inst_70283;\nvar _QMARK_pulled = inst_70291;\nreturn ((function (n,client_ids_satisfied,_QMARK_pulled,inst_70291,inst_70283,inst_70282,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (s,client_id,p__70310){\nvar vec__70343 = p__70310;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70343,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70343,(1),null);\nvar sent_QMARK_ = (function (){var temp__5735__auto__ = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar sch = temp__5735__auto__;\nreturn taoensso.sente.interfaces.sch_send_BANG_(_QMARK_sch,cljs.core.not(new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101)),buffered_evs_pstr);\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(sent_QMARK_)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,client_id);\n} else {\nreturn s;\n}\n});\n;})(n,client_ids_satisfied,_QMARK_pulled,inst_70291,inst_70283,inst_70282,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar inst_70312 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_70313 = cljs.core.reduce_kv(inst_70311,inst_70312,inst_70291);\nvar state_70339__$1 = state_70339;\nvar statearr_70363_71569 = state_70339__$1;\n(statearr_70363_71569[(2)] = inst_70313);\n\n(statearr_70363_71569[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (1))){\nvar inst_70281 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_70282 = (0);\nvar inst_70283 = inst_70281;\nvar state_70339__$1 = (function (){var statearr_70379 = state_70339;\n(statearr_70379[(8)] = inst_70283);\n\n(statearr_70379[(9)] = inst_70282);\n\nreturn statearr_70379;\n})();\nvar statearr_70380_71570 = state_70339__$1;\n(statearr_70380_71570[(2)] = null);\n\n(statearr_70380_71570[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (4))){\nvar state_70339__$1 = state_70339;\nvar statearr_70381_71571 = state_70339__$1;\n(statearr_70381_71571[(2)] = true);\n\n(statearr_70381_71571[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (15))){\nvar inst_70332 = (state_70339[(2)]);\nvar state_70339__$1 = state_70339;\nvar statearr_70382_71572 = state_70339__$1;\n(statearr_70382_71572[(2)] = inst_70332);\n\n(statearr_70382_71572[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (13))){\nvar inst_70318 = (state_70339[(10)]);\nvar inst_70323 = cljs.core.rand_int(inst_70318);\nvar inst_70324 = (inst_70318 + inst_70323);\nvar inst_70325 = cljs.core.async.timeout(inst_70324);\nvar state_70339__$1 = state_70339;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_70339__$1,(16),inst_70325);\n} else {\nif((state_val_70340 === (6))){\nvar inst_70291 = (state_70339[(7)]);\nvar inst_70308 = (state_70339[(2)]);\nvar state_70339__$1 = (function (){var statearr_70385 = state_70339;\n(statearr_70385[(11)] = inst_70308);\n\nreturn statearr_70385;\n})();\nif(cljs.core.truth_(inst_70291)){\nvar statearr_70386_71573 = state_70339__$1;\n(statearr_70386_71573[(1)] = (7));\n\n} else {\nvar statearr_70387_71574 = state_70339__$1;\n(statearr_70387_71574[(1)] = (8));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (3))){\nvar inst_70337 = (state_70339[(2)]);\nvar state_70339__$1 = state_70339;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_70339__$1,inst_70337);\n} else {\nif((state_val_70340 === (12))){\nvar inst_70335 = (state_70339[(2)]);\nvar state_70339__$1 = state_70339;\nvar statearr_70389_71575 = state_70339__$1;\n(statearr_70389_71575[(2)] = inst_70335);\n\n(statearr_70389_71575[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (2))){\nvar inst_70291 = (state_70339[(7)]);\nvar inst_70283 = (state_70339[(8)]);\nvar inst_70282 = (state_70339[(9)]);\nvar inst_70287 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_70288 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid];\nvar inst_70289 = (new cljs.core.PersistentVector(null,2,(5),inst_70287,inst_70288,null));\nvar inst_70290 = (function (){var n = inst_70282;\nvar client_ids_satisfied = inst_70283;\nreturn ((function (n,client_ids_satisfied,inst_70291,inst_70283,inst_70282,inst_70287,inst_70288,inst_70289,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (m){\nvar ks_to_pull = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(client_ids_satisfied,cljs.core.keys(m));\nif(cljs.core.empty_QMARK_(ks_to_pull)){\nreturn taoensso.encore.swapped(m,null);\n} else {\nreturn taoensso.encore.swapped(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (ks_to_pull,n,client_ids_satisfied,inst_70291,inst_70283,inst_70282,inst_70287,inst_70288,inst_70289,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (m__$1,k){\nvar vec__70390 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70390,(0),null);\nvar udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70390,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,udt], null));\n});})(ks_to_pull,n,client_ids_satisfied,inst_70291,inst_70283,inst_70282,inst_70287,inst_70288,inst_70289,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied))\n,m,ks_to_pull),cljs.core.select_keys(m,ks_to_pull));\n}\n});\n;})(n,client_ids_satisfied,inst_70291,inst_70283,inst_70282,inst_70287,inst_70288,inst_70289,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar inst_70291__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_70289,inst_70290);\nvar inst_70300 = (function (){var n = inst_70282;\nvar client_ids_satisfied = inst_70283;\nvar _QMARK_pulled = inst_70291__$1;\nreturn ((function (n,client_ids_satisfied,_QMARK_pulled,inst_70291,inst_70283,inst_70282,inst_70287,inst_70288,inst_70289,inst_70290,inst_70291__$1,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (x){\nvar or__4131__auto__ = (x == null);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar fexpr__70400 = taoensso.truss.impl.non_throwing(cljs.core.map_QMARK_);\nreturn (fexpr__70400.cljs$core$IFn$_invoke$arity$1 ? fexpr__70400.cljs$core$IFn$_invoke$arity$1(x) : fexpr__70400.call(null,x));\n}\n});\n;})(n,client_ids_satisfied,_QMARK_pulled,inst_70291,inst_70283,inst_70282,inst_70287,inst_70288,inst_70289,inst_70290,inst_70291__$1,state_val_70340,c__60039__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar inst_70301 = (inst_70300.cljs$core$IFn$_invoke$arity$1 ? inst_70300.cljs$core$IFn$_invoke$arity$1(inst_70291__$1) : inst_70300.call(null,inst_70291__$1));\nvar state_70339__$1 = (function (){var statearr_70401 = state_70339;\n(statearr_70401[(7)] = inst_70291__$1);\n\nreturn statearr_70401;\n})();\nif(cljs.core.truth_(inst_70301)){\nvar statearr_70402_71583 = state_70339__$1;\n(statearr_70402_71583[(1)] = (4));\n\n} else {\nvar statearr_70404_71584 = state_70339__$1;\n(statearr_70404_71584[(1)] = (5));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (11))){\nvar state_70339__$1 = state_70339;\nvar statearr_70408_71585 = state_70339__$1;\n(statearr_70408_71585[(2)] = null);\n\n(statearr_70408_71585[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (9))){\nvar inst_70318 = (state_70339[(10)]);\nvar inst_70283 = (state_70339[(8)]);\nvar inst_70282 = (state_70339[(9)]);\nvar inst_70316 = (state_70339[(2)]);\nvar inst_70317 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(inst_70283,inst_70316);\nvar inst_70318__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ms_backoffs,inst_70282);\nvar state_70339__$1 = (function (){var statearr_70409 = state_70339;\n(statearr_70409[(10)] = inst_70318__$1);\n\n(statearr_70409[(12)] = inst_70317);\n\nreturn statearr_70409;\n})();\nif(cljs.core.truth_(inst_70318__$1)){\nvar statearr_70410_71606 = state_70339__$1;\n(statearr_70410_71606[(1)] = (10));\n\n} else {\nvar statearr_70411_71607 = state_70339__$1;\n(statearr_70411_71607[(1)] = (11));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (5))){\nvar inst_70291 = (state_70339[(7)]);\nvar inst_70306 = taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",759,\"([:or nil? map?] ?pulled)\",inst_70291,null,null);\nvar state_70339__$1 = state_70339;\nvar statearr_70412_71608 = state_70339__$1;\n(statearr_70412_71608[(2)] = inst_70306);\n\n(statearr_70412_71608[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (14))){\nvar state_70339__$1 = state_70339;\nvar statearr_70413_71612 = state_70339__$1;\n(statearr_70413_71612[(2)] = null);\n\n(statearr_70413_71612[(1)] = (15));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (16))){\nvar inst_70282 = (state_70339[(9)]);\nvar inst_70317 = (state_70339[(12)]);\nvar inst_70327 = (state_70339[(2)]);\nvar inst_70328 = (inst_70282 + (1));\nvar inst_70282__$1 = inst_70328;\nvar inst_70283 = inst_70317;\nvar state_70339__$1 = (function (){var statearr_70414 = state_70339;\n(statearr_70414[(8)] = inst_70283);\n\n(statearr_70414[(9)] = inst_70282__$1);\n\n(statearr_70414[(13)] = inst_70327);\n\nreturn statearr_70414;\n})();\nvar statearr_70415_71613 = state_70339__$1;\n(statearr_70415_71613[(2)] = null);\n\n(statearr_70415_71613[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (10))){\nvar inst_70317 = (state_70339[(12)]);\nvar inst_70320 = cljs.core.complement(inst_70317);\nvar inst_70321 = taoensso.encore.rsome(inst_70320,client_ids_unsatisfied);\nvar state_70339__$1 = state_70339;\nif(cljs.core.truth_(inst_70321)){\nvar statearr_70418_71614 = state_70339__$1;\n(statearr_70418_71614[(1)] = (13));\n\n} else {\nvar statearr_70419_71617 = state_70339__$1;\n(statearr_70419_71617[(1)] = (14));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70340 === (8))){\nvar state_70339__$1 = state_70339;\nvar statearr_70420_71618 = state_70339__$1;\n(statearr_70420_71618[(2)] = null);\n\n(statearr_70420_71618[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__60039__auto__,ms_backoffs,client_ids_unsatisfied))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function() {\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto__ = null;\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto____0 = (function (){\nvar statearr_70422 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_70422[(0)] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto__);\n\n(statearr_70422[(1)] = (1));\n\nreturn statearr_70422;\n});\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto____1 = (function (state_70339){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_70339);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e70425){if((e70425 instanceof Object)){\nvar ex__59760__auto__ = e70425;\nvar statearr_70426_71621 = state_70339;\n(statearr_70426_71621[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_70339);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e70425;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71622 = state_70339;\nstate_70339 = G__71622;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto__ = function(state_70339){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto____1.call(this,state_70339);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto____0;\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto____1;\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar state__60041__auto__ = (function (){var statearr_70427 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_70427[(6)] = c__60039__auto__);\n\nreturn statearr_70427;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto__,ms_backoffs,client_ids_unsatisfied))\n);\n\nreturn c__60039__auto__;\n}\n});\n/**\n * Alias of `taoensso.encore/ajax-lite`\n */\ntaoensso.sente.ajax_lite = taoensso.encore.ajax_lite;\n\n/**\n * @interface\n */\ntaoensso.sente.IChSocket = function(){};\n\ntaoensso.sente._chsk_connect_BANG_ = (function taoensso$sente$_chsk_connect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4434__auto__.call(null,chsk));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_connect_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4431__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-connect!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente._chsk_disconnect_BANG_ = (function taoensso$sente$_chsk_disconnect_BANG_(chsk,reason){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk,reason);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4434__auto__.call(null,chsk,reason));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_disconnect_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4431__auto__.call(null,chsk,reason));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-disconnect!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente._chsk_reconnect_BANG_ = (function taoensso$sente$_chsk_reconnect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4434__auto__.call(null,chsk));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_reconnect_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4431__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-reconnect!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente._chsk_send_BANG_ = (function taoensso$sente$_chsk_send_BANG_(chsk,ev,opts){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk,ev,opts);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_send_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4434__auto__.call(null,chsk,ev,opts));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_send_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4431__auto__.call(null,chsk,ev,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-send!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente.chsk_connect_BANG_ = (function taoensso$sente$chsk_connect_BANG_(chsk){\nreturn taoensso.sente._chsk_connect_BANG_(chsk);\n});\n\ntaoensso.sente.chsk_disconnect_BANG_ = (function taoensso$sente$chsk_disconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_disconnect_BANG_(chsk,new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641));\n});\n\n/**\n * Useful for reauthenticating after login/logout, etc.\n */\ntaoensso.sente.chsk_reconnect_BANG_ = (function taoensso$sente$chsk_reconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_reconnect_BANG_(chsk);\n});\n\n/**\n * Deprecated\n */\ntaoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;\n/**\n * Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\n */\ntaoensso.sente.chsk_send_BANG_ = (function taoensso$sente$chsk_send_BANG_(var_args){\nvar G__70477 = arguments.length;\nswitch (G__70477) {\ncase 2:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (chsk,ev){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,cljs.core.PersistentArrayMap.EMPTY);\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (chsk,ev,_QMARK_timeout_ms,_QMARK_cb){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),_QMARK_timeout_ms,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),_QMARK_cb], null));\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (chsk,ev,opts){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,809,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (%s) %s\",cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),cljs.core.boolean$(new cljs.core.Keyword(null,\"cb\",\"cb\",589947841).cljs$core$IFn$_invoke$arity$1(opts))),ev], null);\n}),null)),null,-1241503493);\n\nreturn taoensso.sente._chsk_send_BANG_(chsk,ev,opts);\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4;\n\ntaoensso.sente.chsk_send__GT_closed_BANG_ = (function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,814,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send against closed chsk.\"], null);\n}),null)),null,-1581996146);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nvar G__70506_71673 = new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264);\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(G__70506_71673) : _QMARK_cb_fn.call(null,G__70506_71673));\n} else {\n}\n\nreturn false;\n});\ntaoensso.sente.assert_send_args = (function taoensso$sente$assert_send_args(x,_QMARK_timeout_ms,_QMARK_cb){\ntaoensso.sente.assert_event(x);\n\nif((((((_QMARK_timeout_ms == null)) && ((_QMARK_cb == null)))) || (taoensso.encore.nat_int_QMARK_(_QMARK_timeout_ms)))){\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb requires a timeout; timeout-ms should be a +ive integer: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(_QMARK_timeout_ms)].join(''),\"\\n\",\"(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))\"].join('')));\n}\n\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)) || (taoensso.encore.chan_QMARK_(_QMARK_cb)))){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb should be nil, an ifn, or a channel: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(_QMARK_cb))].join(''),\"\\n\",\"(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\"].join('')));\n}\n});\ntaoensso.sente.pull_unused_cb_fn_BANG_ = (function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_,_QMARK_cb_uuid){\nvar temp__5735__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar cb_uuid = temp__5735__auto__;\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null),((function (cb_uuid,temp__5735__auto__){\nreturn (function (_QMARK_f){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),_QMARK_f);\n});})(cb_uuid,temp__5735__auto__))\n);\n} else {\nreturn null;\n}\n});\n/**\n * Atomically swaps the value of chk's :state_ atom.\n */\ntaoensso.sente.swap_chsk_state_BANG_ = (function taoensso$sente$swap_chsk_state_BANG_(chsk,f){\nvar vec__70512 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk),(function (old_state){\nvar new_state = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(old_state) : f.call(null,old_state));\nvar new_state__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530).cljs$core$IFn$_invoke$arity$1(old_state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),false):new_state);\nvar new_state__$2 = (cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(new_state__$1))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new_state__$1,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)):new_state__$1);\nreturn taoensso.encore.swapped(new_state__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state__$2], null));\n}));\nvar old_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70512,(0),null);\nvar new_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70512,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_state,new_state)){\nvar output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state], null);\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(chsk,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"state\",\"chsk/state\",-1991397620),output], null));\n\nreturn output;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.chsk_state__GT_closed = (function taoensso$sente$chsk_state__GT_closed(state,reason){\nvar e_71680 = (function (){try{if(cljs.core.map_QMARK_(state)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e70522){if((e70522 instanceof Error)){\nvar e = e70522;\nreturn e;\n} else {\nthrow e70522;\n\n}\n}})();\nif((e_71680 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",861,\"(map? state)\",state,e_71680,null);\n}\n\nvar e_71681 = (function (){try{if((function (){var fexpr__70530 = (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__70531 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641),null,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720),null,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424),null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__70531) : taoensso.truss.impl.set_STAR_.call(null,G__70531));\n})(),x);\n});\nreturn fexpr__70530(reason);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e70528){if((e70528 instanceof Error)){\nvar e = e70528;\nreturn e;\n} else {\nthrow e70528;\n\n}\n}})();\nif((e_71681 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",862,\"([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)\",reason,e_71681,null);\n}\n\nif(cljs.core.truth_((function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(state);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(reason,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}\n})())){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"last-close\",\"last-close\",-2054255782),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null)], 0));\n} else {\nreturn state;\n}\n});\n/**\n * Experimental, undocumented. Allows a core.async channel to be provided\n *   instead of a cb-fn. The channel will receive values of form\n *   [<event-id>.cb <reply>].\n */\ntaoensso.sente.cb_chan_as_fn = (function taoensso$sente$cb_chan_as_fn(_QMARK_cb,ev){\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)))){\nreturn _QMARK_cb;\n} else {\nvar e_71688 = (function (){try{if(taoensso.encore.chan_QMARK_(_QMARK_cb)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e70536){if((e70536 instanceof Error)){\nvar e = e70536;\nreturn e;\n} else {\nthrow e70536;\n\n}\n}})();\nif((e_71688 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",883,\"(enc/chan? ?cb)\",_QMARK_cb,e_71688,null);\n}\n\ntaoensso.sente.assert_event(ev);\n\nvar vec__70541 = ev;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70541,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70541,(1),null);\nvar cb_ch = _QMARK_cb;\nreturn ((function (vec__70541,ev_id,_,cb_ch){\nreturn (function (reply){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cb_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([taoensso.encore.as_qname(ev_id),\".cb\"].join('')),reply], null));\n});\n;})(vec__70541,ev_id,_,cb_ch))\n}\n});\ntaoensso.sente.receive_buffered_evs_BANG_ = (function taoensso$sente$receive_buffered_evs_BANG_(chs,clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,894,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-buffered-evs!: %s\",clj], null);\n}),null)),null,-1906030542);\n\nvar buffered_evs = ((cljs.core.vector_QMARK_(clj))?clj:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",895,\"(vector? clj)\",clj,null,null));\nvar seq__70551 = cljs.core.seq(buffered_evs);\nvar chunk__70552 = null;\nvar count__70553 = (0);\nvar i__70554 = (0);\nwhile(true){\nif((i__70554 < count__70553)){\nvar ev = chunk__70552.cljs$core$IIndexed$_nth$arity$2(null,i__70554);\ntaoensso.sente.assert_event(ev);\n\nvar vec__70572_71744 = ev;\nvar id_71745 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70572_71744,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_71745),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__71748 = seq__70551;\nvar G__71749 = chunk__70552;\nvar G__71750 = count__70553;\nvar G__71751 = (i__70554 + (1));\nseq__70551 = G__71748;\nchunk__70552 = G__71749;\ncount__70553 = G__71750;\ni__70554 = G__71751;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__70551);\nif(temp__5735__auto__){\nvar seq__70551__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__70551__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__70551__$1);\nvar G__71757 = cljs.core.chunk_rest(seq__70551__$1);\nvar G__71758 = c__4550__auto__;\nvar G__71759 = cljs.core.count(c__4550__auto__);\nvar G__71760 = (0);\nseq__70551 = G__71757;\nchunk__70552 = G__71758;\ncount__70553 = G__71759;\ni__70554 = G__71760;\ncontinue;\n} else {\nvar ev = cljs.core.first(seq__70551__$1);\ntaoensso.sente.assert_event(ev);\n\nvar vec__70576_71770 = ev;\nvar id_71771 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70576_71770,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_71771),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__71777 = cljs.core.next(seq__70551__$1);\nvar G__71778 = null;\nvar G__71779 = (0);\nvar G__71780 = (0);\nseq__70551 = G__71777;\nchunk__70552 = G__71778;\ncount__70553 = G__71779;\ni__70554 = G__71780;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ntaoensso.sente.handshake_QMARK_ = (function taoensso$sente$handshake_QMARK_(x){\nvar and__4120__auto__ = cljs.core.vector_QMARK_(x);\nif(and__4120__auto__){\nvar vec__70585 = x;\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70585,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x1,new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686));\n} else {\nreturn and__4120__auto__;\n}\n});\ntaoensso.sente.receive_handshake_BANG_ = (function taoensso$sente$receive_handshake_BANG_(chsk_type,chsk,clj){\nvar e_71785 = (function (){try{if((function (){var fexpr__70599 = (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__70600 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__70600) : taoensso.truss.impl.set_STAR_.call(null,G__70600));\n})(),x);\n});\nreturn fexpr__70599(chsk_type);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e70594){if((e70594 instanceof Error)){\nvar e = e70594;\nreturn e;\n} else {\nthrow e70594;\n\n}\n}})();\nif((e_71785 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",909,\"([:el #{:ws :ajax}] chsk-type)\",chsk_type,e_71785,null);\n}\n\nvar e_71788 = (function (){try{if(taoensso.sente.handshake_QMARK_(clj)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e70601){if((e70601 instanceof Error)){\nvar e = e70601;\nreturn e;\n} else {\nthrow e70601;\n\n}\n}})();\nif((e_71788 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",910,\"(handshake? clj)\",clj,e_71788,null);\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,911,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-handshake! (%s): %s\",chsk_type,clj], null);\n}),null)),null,1887119093);\n\nvar vec__70606 = clj;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70606,(0),null);\nvar vec__70609 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70606,(1),null);\nvar _QMARK_uid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70609,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70609,(1),null);\nvar _QMARK_handshake_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70609,(2),null);\nvar map__70612 = chsk;\nvar map__70612__$1 = (((((!((map__70612 == null))))?(((((map__70612.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__70612.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__70612):map__70612);\nvar chs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70612__$1,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120));\nvar ever_opened_QMARK__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70612__$1,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913));\nvar first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_(ever_opened_QMARK__,false,true);\nvar new_state = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),chsk_type,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),true,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),_QMARK_uid,new cljs.core.Keyword(null,\"handshake-data\",\"handshake-data\",-278378864),_QMARK_handshake_data,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),first_handshake_QMARK_], null);\nvar handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid,null,_QMARK_handshake_data,first_handshake_QMARK_], null)], null);\ntaoensso.sente.assert_event(handshake_ev);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk,((function (vec__70606,_,vec__70609,_QMARK_uid,___$1,_QMARK_handshake_data,map__70612,map__70612__$1,chs,ever_opened_QMARK__,first_handshake_QMARK_,new_state,handshake_ev){\nreturn (function (p1__70588_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__70588_SHARP_,new_state], 0));\n});})(vec__70606,_,vec__70609,_QMARK_uid,___$1,_QMARK_handshake_data,map__70612,map__70612__$1,chs,ever_opened_QMARK__,first_handshake_QMARK_,new_state,handshake_ev))\n);\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(chs),handshake_ev);\n\nreturn new cljs.core.Keyword(null,\"handled\",\"handled\",1889700151);\n});\n/**\n * nnil iff the websocket npm library[1] is available.\n *   Easiest way to install:\n *     1. Add the lein-npm[2] plugin to your `project.clj`,\n *     2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n * \n *   [1] Ref. https://www.npmjs.com/package/websocket\n *   [2] Ref. https://github.com/RyanMcG/lein-npm\n */\ntaoensso.sente._QMARK_node_npm_websocket_ = (new cljs.core.Delay((function (){\nif(((taoensso.sente.node_target_QMARK_) && ((typeof require !== 'undefined')))){\ntry{return require(\"websocket\");\n}catch (e70622){var e = e70622;\nreturn null;\n}} else {\nreturn null;\n}\n}),null));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChWebSocket = (function (client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.ws_kalive_ms = ws_kalive_ms;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.retry_count_ = retry_count_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.cbs_waiting_ = cbs_waiting_;\nthis.socket_ = socket_;\nthis.udt_last_comms_ = udt_last_comms_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k70636,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__70641 = k70636;\nvar G__70641__$1 = (((G__70641 instanceof cljs.core.Keyword))?G__70641.fqn:null);\nswitch (G__70641__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"ws-kalive-ms\":\nreturn self__.ws_kalive_ms;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"retry-count_\":\nreturn self__.retry_count_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"cbs-waiting_\":\nreturn self__.cbs_waiting_;\n\nbreak;\ncase \"socket_\":\nreturn self__.socket_;\n\nbreak;\ncase \"udt-last-comms_\":\nreturn self__.udt_last_comms_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k70636,else__4388__auto__);\n\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__70644){\nvar vec__70647 = p__70644;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70647,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70647,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#taoensso.sente.ChWebSocket{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_],null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__70635){\nvar self__ = this;\nvar G__70635__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__70635__$1,14,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (14 + cljs.core.count(self__.__extmap));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__70653 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (1998688700 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__70653(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this70637,other70638){\nvar self__ = this;\nvar this70637__$1 = this;\nreturn (((!((other70638 == null)))) && ((this70637__$1.constructor === other70638.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.client_id,other70638.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.chs,other70638.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.params,other70638.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.packer,other70638.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.url,other70638.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.ws_kalive_ms,other70638.ws_kalive_ms)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.state_,other70638.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.instance_handle_,other70638.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.retry_count_,other70638.retry_count_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.ever_opened_QMARK__,other70638.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.backoff_ms_fn,other70638.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.cbs_waiting_,other70638.cbs_waiting_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.socket_,other70638.socket_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.udt_last_comms_,other70638.udt_last_comms_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70637__$1.__extmap,other70638.__extmap)));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__70635){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__70661 = cljs.core.keyword_identical_QMARK_;\nvar expr__70662 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__70664 = new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140);\nvar G__70665 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70664,G__70665) : pred__70661.call(null,G__70664,G__70665));\n})())){\nreturn (new taoensso.sente.ChWebSocket(G__70635,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70668 = new cljs.core.Keyword(null,\"chs\",\"chs\",376886120);\nvar G__70669 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70668,G__70669) : pred__70661.call(null,G__70668,G__70669));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,G__70635,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70678 = new cljs.core.Keyword(null,\"params\",\"params\",710516235);\nvar G__70679 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70678,G__70679) : pred__70661.call(null,G__70678,G__70679));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,G__70635,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70680 = new cljs.core.Keyword(null,\"packer\",\"packer\",66077544);\nvar G__70681 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70680,G__70681) : pred__70661.call(null,G__70680,G__70681));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,G__70635,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70684 = new cljs.core.Keyword(null,\"url\",\"url\",276297046);\nvar G__70685 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70684,G__70685) : pred__70661.call(null,G__70684,G__70685));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__70635,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70686 = new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968);\nvar G__70687 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70686,G__70687) : pred__70661.call(null,G__70686,G__70687));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__70635,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70689 = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102);\nvar G__70690 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70689,G__70690) : pred__70661.call(null,G__70689,G__70690));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,G__70635,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70691 = new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457);\nvar G__70692 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70691,G__70692) : pred__70661.call(null,G__70691,G__70692));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,G__70635,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70693 = new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093);\nvar G__70694 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70693,G__70694) : pred__70661.call(null,G__70693,G__70694));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,G__70635,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70695 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913);\nvar G__70696 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70695,G__70696) : pred__70661.call(null,G__70695,G__70696));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,G__70635,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70697 = new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955);\nvar G__70698 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70697,G__70698) : pred__70661.call(null,G__70697,G__70698));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,G__70635,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70702 = new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061);\nvar G__70703 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70702,G__70703) : pred__70661.call(null,G__70702,G__70703));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__70635,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70704 = new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908);\nvar G__70705 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70704,G__70705) : pred__70661.call(null,G__70704,G__70705));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,G__70635,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70706 = new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639);\nvar G__70707 = expr__70662;\nreturn (pred__70661.cljs$core$IFn$_invoke$arity$2 ? pred__70661.cljs$core$IFn$_invoke$arity$2(G__70706,G__70707) : pred__70661.call(null,G__70706,G__70707));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,G__70635,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__70635),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_,null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__70635){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,G__70635,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (chsk__$1){\nreturn (function (p1__70623_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__70623_SHARP_,reason);\n});})(chsk__$1))\n);\n\nvar temp__5735__auto__ = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar s = temp__5735__auto__;\nreturn s.close((1000),\"CLOSE_NORMAL\");\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__70708 = opts;\nvar map__70708__$1 = (((((!((map__70708 == null))))?(((((map__70708.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__70708.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__70708):map__70708);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70708__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70708__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70708__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar _QMARK_cb_uuid = (cljs.core.truth_(_QMARK_cb_fn)?taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6)):null);\nvar ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,_QMARK_cb_uuid);\nvar temp__5735__auto___71920 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto___71920)){\nvar cb_uuid_71921 = temp__5735__auto___71920;\ntaoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_71921], null),(function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e70724){if((e70724 instanceof Error)){\nvar e = e70724;\nreturn e;\n} else {\nthrow e70724;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",996,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n})());\n\nvar temp__5735__auto___71922__$1 = _QMARK_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto___71922__$1)){\nvar timeout_ms_71923 = temp__5735__auto___71922__$1;\nvar c__60039__auto___71924 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto___71924,timeout_ms_71923,temp__5735__auto___71922__$1,cb_uuid_71921,temp__5735__auto___71920,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto___71924,timeout_ms_71923,temp__5735__auto___71922__$1,cb_uuid_71921,temp__5735__auto___71920,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (state_70753){\nvar state_val_70754 = (state_70753[(1)]);\nif((state_val_70754 === (1))){\nvar inst_70739 = cljs.core.async.timeout(timeout_ms_71923);\nvar state_70753__$1 = state_70753;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_70753__$1,(2),inst_70739);\n} else {\nif((state_val_70754 === (2))){\nvar inst_70742 = (state_70753[(7)]);\nvar inst_70741 = (state_70753[(2)]);\nvar inst_70742__$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,_QMARK_cb_uuid);\nvar state_70753__$1 = (function (){var statearr_70756 = state_70753;\n(statearr_70756[(7)] = inst_70742__$1);\n\n(statearr_70756[(8)] = inst_70741);\n\nreturn statearr_70756;\n})();\nif(cljs.core.truth_(inst_70742__$1)){\nvar statearr_70757_71926 = state_70753__$1;\n(statearr_70757_71926[(1)] = (3));\n\n} else {\nvar statearr_70758_71927 = state_70753__$1;\n(statearr_70758_71927[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70754 === (3))){\nvar inst_70742 = (state_70753[(7)]);\nvar inst_70748 = (function (){var G__70759 = new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489);\nreturn (inst_70742.cljs$core$IFn$_invoke$arity$1 ? inst_70742.cljs$core$IFn$_invoke$arity$1(G__70759) : inst_70742.call(null,G__70759));\n})();\nvar state_70753__$1 = state_70753;\nvar statearr_70760_71928 = state_70753__$1;\n(statearr_70760_71928[(2)] = inst_70748);\n\n(statearr_70760_71928[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70754 === (4))){\nvar state_70753__$1 = state_70753;\nvar statearr_70761_71929 = state_70753__$1;\n(statearr_70761_71929[(2)] = null);\n\n(statearr_70761_71929[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70754 === (5))){\nvar inst_70751 = (state_70753[(2)]);\nvar state_70753__$1 = state_70753;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_70753__$1,inst_70751);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});})(c__60039__auto___71924,timeout_ms_71923,temp__5735__auto___71922__$1,cb_uuid_71921,temp__5735__auto___71920,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto___71924,timeout_ms_71923,temp__5735__auto___71922__$1,cb_uuid_71921,temp__5735__auto___71920,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_70762 = [null,null,null,null,null,null,null,null,null];\n(statearr_70762[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_70762[(1)] = (1));\n\nreturn statearr_70762;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_70753){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_70753);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e70763){if((e70763 instanceof Object)){\nvar ex__59760__auto__ = e70763;\nvar statearr_70764_71930 = state_70753;\n(statearr_70764_71930[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_70753);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e70763;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71938 = state_70753;\nstate_70753 = G__71938;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_70753){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_70753);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto___71924,timeout_ms_71923,temp__5735__auto___71922__$1,cb_uuid_71921,temp__5735__auto___71920,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n})();\nvar state__60041__auto__ = (function (){var statearr_70765 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_70765[(6)] = c__60039__auto___71924);\n\nreturn statearr_70765;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto___71924,timeout_ms_71923,temp__5735__auto___71922__$1,cb_uuid_71921,temp__5735__auto___71920,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n);\n\n} else {\n}\n} else {\n}\n\ntry{cljs.core.deref(self__.socket_).send(ppstr);\n\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}catch (e70767){var e = e70767;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1008,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Chsk send error\"], null);\n});})(e,_QMARK_cb_uuid,ppstr,map__70708,map__70708__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n,null)),null,-74815637);\n\nvar temp__5735__auto___71943 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto___71943)){\nvar cb_uuid_71944 = temp__5735__auto___71943;\nvar cb_fn_STAR__71945 = (function (){var or__4131__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid_71944);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar e__$1 = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e70768){if((e70768 instanceof Error)){\nvar e__$1 = e70768;\nreturn e__$1;\n} else {\nthrow e70768;\n\n}\n}})();\nif((e__$1 == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1011,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e__$1,null);\n}\n}\n})();\nvar G__70769_71948 = new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439);\n(cb_fn_STAR__71945.cljs$core$IFn$_invoke$arity$1 ? cb_fn_STAR__71945.cljs$core$IFn$_invoke$arity$1(G__70769_71948) : cb_fn_STAR__71945.call(null,G__70769_71948));\n} else {\n}\n\nreturn false;\n}}\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = (function (){var or__4131__auto__ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"WebSocket\");\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"MozWebSocket\");\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(taoensso.sente._QMARK_node_npm_websocket_),\"w3cwebsocket\");\n}\n}\n})();\nif(cljs.core.truth_(temp__5735__auto__)){\nvar WebSocket = temp__5735__auto__;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = ((function (instance_handle,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});})(instance_handle,WebSocket,temp__5735__auto__,chsk__$1))\n;\nvar connect_fn = ((function (instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function taoensso$sente$connect_fn(){\nif(have_handle_QMARK_()){\nvar retry_fn = ((function (instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.retry_count_,cljs.core.inc);\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1033,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-319817482);\n\ngoog.global.setTimeout(taoensso$sente$connect_fn,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__70625_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__70625_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n;\nvar _QMARK_socket = (function (){try{return (new WebSocket(taoensso.encore.merge_url_with_query_string(self__.url,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0)))));\n}catch (e70773){var e = e70773;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1048,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e,retry_fn,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"WebSocket error\"], null);\n});})(e,retry_fn,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-1179474835);\n\nreturn null;\n}})();\nif(cljs.core.not(_QMARK_socket)){\nreturn retry_fn();\n} else {\nreturn cljs.core.reset_BANG_(self__.socket_,(function (){var G__70774 = _QMARK_socket;\n(G__70774[\"onerror\"] = ((function (G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (ws_ev){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1058,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WebSocket error: %s\",(function (){try{return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(ws_ev);\n}catch (e70775){var _ = e70775;\nreturn ws_ev;\n}})()], null);\n});})(G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,1739155292);\n\nvar last_ws_error = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev], null);\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (last_ws_error,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__70629_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__70629_SHARP_,new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502),last_ws_error);\n});})(last_ws_error,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n});})(G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\n(G__70774[\"onmessage\"] = ((function (G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (ws_ev){\nvar ppstr = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"data\");\nvar vec__70777 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70777,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70777,(1),null);\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nvar or__4131__auto__ = ((taoensso.sente.handshake_QMARK_(clj))?(function (){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),chsk__$1,clj);\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nreturn new cljs.core.Keyword(null,\"handshake\",\"handshake\",68079331);\n})()\n:null);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)))?(function (){\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(self__.chs),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)], null));\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nvar temp__5733__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar cb_uuid = temp__5733__auto__;\nvar temp__5733__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid);\nif(cljs.core.truth_(temp__5733__auto____$1)){\nvar cb_fn = temp__5733__auto____$1;\nreturn (cb_fn.cljs$core$IFn$_invoke$arity$1 ? cb_fn.cljs$core$IFn$_invoke$arity$1(clj) : cb_fn.call(null,clj));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1094,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5733__auto____$1,cb_uuid,temp__5733__auto__,or__4131__auto____$1,or__4131__auto__,ppstr,vec__70777,clj,_QMARK_cb_uuid,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",clj], null);\n});})(temp__5733__auto____$1,cb_uuid,temp__5733__auto__,or__4131__auto____$1,or__4131__auto__,ppstr,vec__70777,clj,_QMARK_cb_uuid,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-1815615110);\n}\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});})(G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\n(G__70774[\"onclose\"] = ((function (G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (ws_ev){\nvar clean_QMARK_ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"wasClean\");\nvar code = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"code\");\nvar reason = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"reason\");\nvar last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev,new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009),clean_QMARK_,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null);\nif(cljs.core.truth_(clean_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,1116,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (clean_QMARK_,code,reason,last_ws_close,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Clean WebSocket close, will not attempt reconnect\"], null);\n});})(clean_QMARK_,code,reason,last_ws_close,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,1570625808);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (clean_QMARK_,code,reason,last_ws_close,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__70633_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__70633_SHARP_,new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n});})(clean_QMARK_,code,reason,last_ws_close,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (clean_QMARK_,code,reason,last_ws_close,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__70634_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(taoensso.sente.chsk_state__GT_closed(p1__70634_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424)),new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n});})(clean_QMARK_,code,reason,last_ws_close,G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\nreturn retry_fn();\n}\n});})(G__70774,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\nreturn G__70774;\n})());\n}\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n;\nvar temp__5735__auto___71966__$1 = self__.ws_kalive_ms;\nif(cljs.core.truth_(temp__5735__auto___71966__$1)){\nvar ms_71967 = temp__5735__auto___71966__$1;\nvar c__60039__auto___71968 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto___71968,ms_71967,temp__5735__auto___71966__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto___71968,ms_71967,temp__5735__auto___71966__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (state_70821){\nvar state_val_70822 = (state_70821[(1)]);\nif((state_val_70822 === (7))){\nvar inst_70817 = (state_70821[(2)]);\nvar state_70821__$1 = state_70821;\nvar statearr_70823_71969 = state_70821__$1;\n(statearr_70823_71969[(2)] = inst_70817);\n\n(statearr_70823_71969[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70822 === (1))){\nvar state_70821__$1 = state_70821;\nvar statearr_70824_71970 = state_70821__$1;\n(statearr_70824_71970[(2)] = null);\n\n(statearr_70824_71970[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70822 === (4))){\nvar inst_70798 = (state_70821[(2)]);\nvar inst_70799 = have_handle_QMARK_();\nvar state_70821__$1 = (function (){var statearr_70825 = state_70821;\n(statearr_70825[(7)] = inst_70798);\n\nreturn statearr_70825;\n})();\nif(inst_70799){\nvar statearr_70826_71971 = state_70821__$1;\n(statearr_70826_71971[(1)] = (5));\n\n} else {\nvar statearr_70827_71972 = state_70821__$1;\n(statearr_70827_71972[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70822 === (6))){\nvar state_70821__$1 = state_70821;\nvar statearr_70830_71974 = state_70821__$1;\n(statearr_70830_71974[(2)] = null);\n\n(statearr_70830_71974[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70822 === (3))){\nvar inst_70819 = (state_70821[(2)]);\nvar state_70821__$1 = state_70821;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_70821__$1,inst_70819);\n} else {\nif((state_val_70822 === (2))){\nvar inst_70795 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_70796 = cljs.core.async.timeout(ms_71967);\nvar state_70821__$1 = (function (){var statearr_70831 = state_70821;\n(statearr_70831[(8)] = inst_70795);\n\nreturn statearr_70831;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_70821__$1,(4),inst_70796);\n} else {\nif((state_val_70822 === (9))){\nvar state_70821__$1 = state_70821;\nvar statearr_70832_71976 = state_70821__$1;\n(statearr_70832_71976[(2)] = null);\n\n(statearr_70832_71976[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70822 === (5))){\nvar inst_70795 = (state_70821[(8)]);\nvar inst_70801 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_70802 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_70795,inst_70801);\nvar state_70821__$1 = state_70821;\nif(inst_70802){\nvar statearr_70834_71977 = state_70821__$1;\n(statearr_70834_71977[(1)] = (8));\n\n} else {\nvar statearr_70835_71978 = state_70821__$1;\n(statearr_70835_71978[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70822 === (10))){\nvar inst_70813 = (state_70821[(2)]);\nvar state_70821__$1 = (function (){var statearr_70836 = state_70821;\n(statearr_70836[(9)] = inst_70813);\n\nreturn statearr_70836;\n})();\nvar statearr_70838_71979 = state_70821__$1;\n(statearr_70838_71979[(2)] = null);\n\n(statearr_70838_71979[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_70822 === (8))){\nvar inst_70804 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_70805 = [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)];\nvar inst_70806 = (new cljs.core.PersistentVector(null,1,(5),inst_70804,inst_70805,null));\nvar inst_70807 = [new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231)];\nvar inst_70808 = [true];\nvar inst_70809 = cljs.core.PersistentHashMap.fromArrays(inst_70807,inst_70808);\nvar inst_70810 = chsk__$1.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(null,inst_70806,inst_70809);\nvar state_70821__$1 = state_70821;\nvar statearr_70841_71980 = state_70821__$1;\n(statearr_70841_71980[(2)] = inst_70810);\n\n(statearr_70841_71980[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__60039__auto___71968,ms_71967,temp__5735__auto___71966__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto___71968,ms_71967,temp__5735__auto___71966__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function() {\nvar taoensso$sente$state_machine__59757__auto__ = null;\nvar taoensso$sente$state_machine__59757__auto____0 = (function (){\nvar statearr_70842 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_70842[(0)] = taoensso$sente$state_machine__59757__auto__);\n\n(statearr_70842[(1)] = (1));\n\nreturn statearr_70842;\n});\nvar taoensso$sente$state_machine__59757__auto____1 = (function (state_70821){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_70821);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e70843){if((e70843 instanceof Object)){\nvar ex__59760__auto__ = e70843;\nvar statearr_70844_71981 = state_70821;\n(statearr_70844_71981[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_70821);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e70843;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__71983 = state_70821;\nstate_70821 = G__71983;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__59757__auto__ = function(state_70821){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__59757__auto____1.call(this,state_70821);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__59757__auto____0;\ntaoensso$sente$state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__59757__auto____1;\nreturn taoensso$sente$state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto___71968,ms_71967,temp__5735__auto___71966__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1))\n})();\nvar state__60041__auto__ = (function (){var statearr_70845 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_70845[(6)] = c__60039__auto___71968);\n\nreturn statearr_70845;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto___71968,ms_71967,temp__5735__auto___71966__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\n} else {\n}\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nconnect_fn();\n\nreturn chsk__$1;\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChWebSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"ws-kalive-ms\",\"ws-kalive-ms\",-1212255801,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"retry-count_\",\"retry-count_\",1660769620,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"cbs-waiting_\",\"cbs-waiting_\",121502466,null),new cljs.core.Symbol(null,\"socket_\",\"socket_\",1279482619,null),new cljs.core.Symbol(null,\"udt-last-comms_\",\"udt-last-comms_\",1494731888,null)], null);\n});\n\ntaoensso.sente.ChWebSocket.cljs$lang$type = true;\n\ntaoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChWebSocket\",null,(1),null));\n});\n\ntaoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"taoensso.sente/ChWebSocket\");\n});\n\n/**\n * Positional factory function for taoensso.sente/ChWebSocket.\n */\ntaoensso.sente.__GT_ChWebSocket = (function taoensso$sente$__GT_ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_){\nreturn (new taoensso.sente.ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChWebSocket = (function taoensso$sente$map__GT_ChWebSocket(G__70639){\nvar extmap__4424__auto__ = (function (){var G__70849 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__70639,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], 0));\nif(cljs.core.record_QMARK_(G__70639)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__70849);\n} else {\nreturn G__70849;\n}\n})();\nreturn (new taoensso.sente.ChWebSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908).cljs$core$IFn$_invoke$arity$1(G__70639),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639).cljs$core$IFn$_invoke$arity$1(G__70639),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\ntaoensso.sente.new_ChWebSocket = (function taoensso$sente$new_ChWebSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChWebSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n/**\n * We must set *some* client-side timeout otherwise an unpredictable (and\n *   probably too short) browser default will be used. Must be > server's\n *   :lp-timeout-ms.\n */\ntaoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(60)], 0));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAjaxSocket = (function (client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.ajax_opts = ajax_opts;\nthis.curr_xhr_ = curr_xhr_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k70861,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__70871 = k70861;\nvar G__70871__$1 = (((G__70871 instanceof cljs.core.Keyword))?G__70871.fqn:null);\nswitch (G__70871__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"ajax-opts\":\nreturn self__.ajax_opts;\n\nbreak;\ncase \"curr-xhr_\":\nreturn self__.curr_xhr_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k70861,else__4388__auto__);\n\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__70874){\nvar vec__70875 = p__70874;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70875,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70875,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#taoensso.sente.ChAjaxSocket{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_],null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__70860){\nvar self__ = this;\nvar G__70860__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__70860__$1,11,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (11 + cljs.core.count(self__.__extmap));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__70880 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (-266770752 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__70880(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this70862,other70863){\nvar self__ = this;\nvar this70862__$1 = this;\nreturn (((!((other70863 == null)))) && ((this70862__$1.constructor === other70863.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.client_id,other70863.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.chs,other70863.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.params,other70863.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.packer,other70863.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.url,other70863.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.state_,other70863.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.instance_handle_,other70863.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.ever_opened_QMARK__,other70863.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.backoff_ms_fn,other70863.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.ajax_opts,other70863.ajax_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.curr_xhr_,other70863.curr_xhr_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70862__$1.__extmap,other70863.__extmap)));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__70860){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__70882 = cljs.core.keyword_identical_QMARK_;\nvar expr__70883 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__70886 = new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140);\nvar G__70887 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70886,G__70887) : pred__70882.call(null,G__70886,G__70887));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(G__70860,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70888 = new cljs.core.Keyword(null,\"chs\",\"chs\",376886120);\nvar G__70889 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70888,G__70889) : pred__70882.call(null,G__70888,G__70889));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,G__70860,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70890 = new cljs.core.Keyword(null,\"params\",\"params\",710516235);\nvar G__70891 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70890,G__70891) : pred__70882.call(null,G__70890,G__70891));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,G__70860,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70892 = new cljs.core.Keyword(null,\"packer\",\"packer\",66077544);\nvar G__70893 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70892,G__70893) : pred__70882.call(null,G__70892,G__70893));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,G__70860,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70894 = new cljs.core.Keyword(null,\"url\",\"url\",276297046);\nvar G__70895 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70894,G__70895) : pred__70882.call(null,G__70894,G__70895));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__70860,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70896 = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102);\nvar G__70897 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70896,G__70897) : pred__70882.call(null,G__70896,G__70897));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__70860,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70898 = new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457);\nvar G__70899 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70898,G__70899) : pred__70882.call(null,G__70898,G__70899));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,G__70860,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70900 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913);\nvar G__70901 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70900,G__70901) : pred__70882.call(null,G__70900,G__70901));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,G__70860,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70902 = new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955);\nvar G__70903 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70902,G__70903) : pred__70882.call(null,G__70902,G__70903));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,G__70860,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70904 = new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109);\nvar G__70905 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70904,G__70905) : pred__70882.call(null,G__70904,G__70905));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__70860,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70906 = new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696);\nvar G__70907 = expr__70883;\nreturn (pred__70882.cljs$core$IFn$_invoke$arity$2 ? pred__70882.cljs$core$IFn$_invoke$arity$2(G__70906,G__70907) : pred__70882.call(null,G__70906,G__70907));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,G__70860,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__70860),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_,null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__70860){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,G__70860,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (chsk__$1){\nreturn (function (p1__70851_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__70851_SHARP_,reason);\n});})(chsk__$1))\n);\n\nvar temp__5735__auto__ = cljs.core.deref(self__.curr_xhr_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar x = temp__5735__auto__;\nreturn x.abort();\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__70908 = opts;\nvar map__70908__$1 = (((((!((map__70908 == null))))?(((((map__70908.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__70908.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__70908):map__70908);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70908__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70908__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70908__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar csrf_token = new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_));\nvar G__70910_71997 = self__.url;\nvar G__70911_71998 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4131__auto__ = _QMARK_timeout_ms;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),csrf_token], null)], 0)),new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (){var ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,(cljs.core.truth_(_QMARK_cb_fn)?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):null));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252),ppstr], null)], 0));\n})()], null)], 0));\nvar G__70912_71999 = ((function (G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function taoensso$sente$ajax_cb(p__70913){\nvar map__70914 = p__70913;\nvar map__70914__$1 = (((((!((map__70914 == null))))?(((((map__70914.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__70914.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__70914):map__70914);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70914__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70914__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nif(cljs.core.truth_(_QMARK_cb_fn)){\nvar G__70917 = new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489);\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(G__70917) : _QMARK_cb_fn.call(null,G__70917));\n} else {\nreturn null;\n}\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (map__70914,map__70914__$1,_QMARK_error,_QMARK_content,G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (p1__70852_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__70852_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n});})(map__70914,map__70914__$1,_QMARK_error,_QMARK_content,G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nvar G__70918 = new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439);\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(G__70918) : _QMARK_cb_fn.call(null,G__70918));\n} else {\nreturn null;\n}\n}\n} else {\nvar content = _QMARK_content;\nvar resp_ppstr = content;\nvar vec__70919 = taoensso.sente.unpack(self__.packer,resp_ppstr);\nvar resp_clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70919,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70919,(1),null);\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(resp_clj) : _QMARK_cb_fn.call(null,resp_clj));\n} else {\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(resp_clj,new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1237,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (content,resp_ppstr,vec__70919,resp_clj,___$1,map__70914,map__70914__$1,_QMARK_error,_QMARK_content,G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",resp_clj], null);\n});})(content,resp_ppstr,vec__70919,resp_clj,___$1,map__70914,map__70914__$1,_QMARK_error,_QMARK_content,G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n,null)),null,1159203541);\n} else {\n}\n}\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (content,resp_ppstr,vec__70919,resp_clj,___$1,map__70914,map__70914__$1,_QMARK_error,_QMARK_content,G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (p1__70853_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__70853_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n});})(content,resp_ppstr,vec__70919,resp_clj,___$1,map__70914,map__70914__$1,_QMARK_error,_QMARK_content,G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n);\n}\n});})(G__70910_71997,G__70911_71998,csrf_token,map__70908,map__70908__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n;\n(taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__70910_71997,G__70911_71998,G__70912_71999) : taoensso.sente.ajax_lite.call(null,G__70910_71997,G__70911_71998,G__70912_71999));\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = ((function (instance_handle,chsk__$1){\nreturn (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});})(instance_handle,chsk__$1))\n;\nvar poll_fn = ((function (instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function taoensso$sente$poll_fn(retry_count){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1247,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"async-poll-for-update!\"], null);\n});})(instance_handle,have_handle_QMARK_,chsk__$1))\n,null)),null,392189519);\n\nif(have_handle_QMARK_()){\nvar retry_fn = ((function (instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = (retry_count + (1));\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1255,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1))\n,null)),null,1791347615);\n\ngoog.global.setTimeout(((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nreturn taoensso$sente$poll_fn(retry_count_STAR_);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1))\n,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (p1__70855_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__70855_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1))\n);\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,chsk__$1))\n;\nreturn cljs.core.reset_BANG_(self__.curr_xhr_,(function (){var G__70926 = self__.url;\nvar G__70927 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"get\",\"get\",1683182755),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null),(cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093),true], null))], 0)),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0))], null)], 0));\nvar G__70928 = ((function (G__70926,G__70927,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function taoensso$sente$poll_fn_$_ajax_cb(p__70929){\nvar map__70930 = p__70929;\nvar map__70930__$1 = (((((!((map__70930 == null))))?(((((map__70930.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__70930.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__70930):map__70930);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70930__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__70930__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nreturn taoensso$sente$poll_fn((0));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (map__70930,map__70930__$1,_QMARK_error,_QMARK_content,G__70926,G__70927,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (p1__70857_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__70857_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n});})(map__70930,map__70930__$1,_QMARK_error,_QMARK_content,G__70926,G__70927,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1))\n);\n\nreturn retry_fn();\n\n}\n} else {\nvar content = _QMARK_content;\nvar ppstr = content;\nvar vec__70934 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70934,(0),null);\nvar handshake_QMARK_ = taoensso.sente.handshake_QMARK_(clj);\nif(handshake_QMARK_){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),chsk__$1,clj);\n} else {\n}\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (content,ppstr,vec__70934,clj,handshake_QMARK_,map__70930,map__70930__$1,_QMARK_error,_QMARK_content,G__70926,G__70927,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (p1__70859_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__70859_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n});})(content,ppstr,vec__70934,clj,handshake_QMARK_,map__70930,map__70930__$1,_QMARK_error,_QMARK_content,G__70926,G__70927,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1))\n);\n\ntaoensso$sente$poll_fn((0));\n\nif(handshake_QMARK_){\nreturn null;\n} else {\nvar or__4131__auto__ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)))?(function (){\nif(cljs.core.truth_(cljs.core.deref(taoensso.sente.debug_mode_QMARK__))){\ntaoensso.sente.receive_buffered_evs_BANG_(self__.chs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"debug\",\"timeout\",\"debug/timeout\",309499949)], null)], null));\n} else {\n}\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});})(G__70926,G__70927,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1))\n;\nreturn (taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__70926,G__70927,G__70928) : taoensso.sente.ajax_lite.call(null,G__70926,G__70927,G__70928));\n})());\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,chsk__$1))\n;\npoll_fn((0));\n\nreturn chsk__$1;\n});\n\ntaoensso.sente.ChAjaxSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"ajax-opts\",\"ajax-opts\",1122292418,null),new cljs.core.Symbol(null,\"curr-xhr_\",\"curr-xhr_\",321757831,null)], null);\n});\n\ntaoensso.sente.ChAjaxSocket.cljs$lang$type = true;\n\ntaoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAjaxSocket\",null,(1),null));\n});\n\ntaoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"taoensso.sente/ChAjaxSocket\");\n});\n\n/**\n * Positional factory function for taoensso.sente/ChAjaxSocket.\n */\ntaoensso.sente.__GT_ChAjaxSocket = (function taoensso$sente$__GT_ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_){\nreturn (new taoensso.sente.ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAjaxSocket = (function taoensso$sente$map__GT_ChAjaxSocket(G__70866){\nvar extmap__4424__auto__ = (function (){var G__70942 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__70866,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], 0));\nif(cljs.core.record_QMARK_(G__70866)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__70942);\n} else {\nreturn G__70942;\n}\n})();\nreturn (new taoensso.sente.ChAjaxSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109).cljs$core$IFn$_invoke$arity$1(G__70866),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696).cljs$core$IFn$_invoke$arity$1(G__70866),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\ntaoensso.sente.new_ChAjaxSocket = (function taoensso$sente$new_ChAjaxSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAjaxSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAutoSocket = (function (ws_chsk_opts,ajax_chsk_opts,state_,impl_,__meta,__extmap,__hash){\nthis.ws_chsk_opts = ws_chsk_opts;\nthis.ajax_chsk_opts = ajax_chsk_opts;\nthis.state_ = state_;\nthis.impl_ = impl_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k70947,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__70963 = k70947;\nvar G__70963__$1 = (((G__70963 instanceof cljs.core.Keyword))?G__70963.fqn:null);\nswitch (G__70963__$1) {\ncase \"ws-chsk-opts\":\nreturn self__.ws_chsk_opts;\n\nbreak;\ncase \"ajax-chsk-opts\":\nreturn self__.ajax_chsk_opts;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"impl_\":\nreturn self__.impl_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k70947,else__4388__auto__);\n\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__70967){\nvar vec__70968 = p__70967;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70968,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__70968,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#taoensso.sente.ChAutoSocket{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_],null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__70946){\nvar self__ = this;\nvar G__70946__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__70946__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__70980 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (-1193508708 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__70980(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this70948,other70949){\nvar self__ = this;\nvar this70948__$1 = this;\nreturn (((!((other70949 == null)))) && ((this70948__$1.constructor === other70949.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70948__$1.ws_chsk_opts,other70949.ws_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70948__$1.ajax_chsk_opts,other70949.ajax_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70948__$1.state_,other70949.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70948__$1.impl_,other70949.impl_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this70948__$1.__extmap,other70949.__extmap)));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__70946){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__70987 = cljs.core.keyword_identical_QMARK_;\nvar expr__70988 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__70990 = new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104);\nvar G__70991 = expr__70988;\nreturn (pred__70987.cljs$core$IFn$_invoke$arity$2 ? pred__70987.cljs$core$IFn$_invoke$arity$2(G__70990,G__70991) : pred__70987.call(null,G__70990,G__70991));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(G__70946,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70992 = new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327);\nvar G__70993 = expr__70988;\nreturn (pred__70987.cljs$core$IFn$_invoke$arity$2 ? pred__70987.cljs$core$IFn$_invoke$arity$2(G__70992,G__70993) : pred__70987.call(null,G__70992,G__70993));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,G__70946,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70994 = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102);\nvar G__70995 = expr__70988;\nreturn (pred__70987.cljs$core$IFn$_invoke$arity$2 ? pred__70987.cljs$core$IFn$_invoke$arity$2(G__70994,G__70995) : pred__70987.call(null,G__70994,G__70995));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,G__70946,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__70996 = new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179);\nvar G__70997 = expr__70988;\nreturn (pred__70987.cljs$core$IFn$_invoke$arity$2 ? pred__70987.cljs$core$IFn$_invoke$arity$2(G__70996,G__70997) : pred__70987.call(null,G__70996,G__70997));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,G__70946,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__70946),null));\n}\n}\n}\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_,null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__70946){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,G__70946,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\nreturn taoensso.sente._chsk_disconnect_BANG_(impl,reason);\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5733__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar impl = temp__5733__auto__;\nreturn taoensso.sente._chsk_send_BANG_(impl,ev,opts);\n} else {\nvar map__71012 = opts;\nvar map__71012__$1 = (((((!((map__71012 == null))))?(((((map__71012.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__71012.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__71012):map__71012);\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71012__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar ajax_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ajax_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ws_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ws_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ajax_conn_BANG_ = ((function (ajax_chsk_opts__$1,ws_chsk_opts__$1,chsk__$1){\nreturn (function (){\ncljs.core.remove_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080));\n\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});})(ajax_chsk_opts__$1,ws_chsk_opts__$1,chsk__$1))\n;\nvar ws_conn_BANG_ = ((function (ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1){\nreturn (function (){\nvar downgraded_QMARK___72005 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.core.add_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080),((function (downgraded_QMARK___72005,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1){\nreturn (function (_,___$1,old_state,new_state){\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\nvar temp__5735__auto____$1 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(impl);\nif(cljs.core.truth_(temp__5735__auto____$1)){\nvar ever_opened_QMARK__ = temp__5735__auto____$1;\nif(cljs.core.truth_(cljs.core.deref(ever_opened_QMARK__))){\nreturn null;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502).cljs$core$IFn$_invoke$arity$1(new_state))){\nif(cljs.core.compare_and_set_BANG_(downgraded_QMARK___72005,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1388,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (ever_opened_QMARK__,temp__5735__auto____$1,impl,temp__5735__auto__,downgraded_QMARK___72005,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Permanently downgrading :auto chsk -> :ajax\"], null);\n});})(ever_opened_QMARK__,temp__5735__auto____$1,impl,temp__5735__auto__,downgraded_QMARK___72005,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1))\n,null)),null,1887047438);\n\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720));\n\nreturn cljs.core.reset_BANG_(self__.impl_,ajax_conn_BANG_());\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});})(downgraded_QMARK___72005,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1))\n);\n\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});})(ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1))\n;\ncljs.core.reset_BANG_(self__.impl_,(function (){var or__4131__auto__ = ws_conn_BANG_();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn ajax_conn_BANG_();\n}\n})());\n\nreturn chsk__$1;\n});\n\ntaoensso.sente.ChAutoSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-349638577,null),new cljs.core.Symbol(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",-1051844442,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"impl_\",\"impl_\",-1435617590,null)], null);\n});\n\ntaoensso.sente.ChAutoSocket.cljs$lang$type = true;\n\ntaoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAutoSocket\",null,(1),null));\n});\n\ntaoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"taoensso.sente/ChAutoSocket\");\n});\n\n/**\n * Positional factory function for taoensso.sente/ChAutoSocket.\n */\ntaoensso.sente.__GT_ChAutoSocket = (function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_){\nreturn (new taoensso.sente.ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAutoSocket = (function taoensso$sente$map__GT_ChAutoSocket(G__70952){\nvar extmap__4424__auto__ = (function (){var G__71024 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__70952,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], 0));\nif(cljs.core.record_QMARK_(G__70952)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__71024);\n} else {\nreturn G__71024;\n}\n})();\nreturn (new taoensso.sente.ChAutoSocket(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104).cljs$core$IFn$_invoke$arity$1(G__70952),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327).cljs$core$IFn$_invoke$arity$1(G__70952),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__70952),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179).cljs$core$IFn$_invoke$arity$1(G__70952),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\ntaoensso.sente.new_ChAutoSocket = (function taoensso$sente$new_ChAutoSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAutoSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\ntaoensso.sente.get_chsk_url = (function taoensso$sente$get_chsk_url(protocol,host,path,type){\nvar protocol__$1 = (function (){var G__71031 = protocol;\nvar G__71031__$1 = (((G__71031 instanceof cljs.core.Keyword))?G__71031.fqn:null);\nswitch (G__71031__$1) {\ncase \"http\":\nreturn \"http:\";\n\nbreak;\ncase \"https\":\nreturn \"https:\";\n\nbreak;\ndefault:\nreturn protocol;\n\n}\n})();\nvar protocol__$2 = (function (){var e = (function (){try{if((function (){var fexpr__71034 = ((function (protocol__$1){\nreturn (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__71035 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"https:\",null,\"http:\",null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__71035) : taoensso.truss.impl.set_STAR_.call(null,G__71035));\n})(),x);\n});})(protocol__$1))\n;\nreturn fexpr__71034(protocol__$1);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e71032){if((e71032 instanceof Error)){\nvar e = e71032;\nreturn e;\n} else {\nthrow e71032;\n\n}\n}})();\nif((e == null)){\nreturn protocol__$1;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1408,\"([:el #{\\\"https:\\\" \\\"http:\\\"}] protocol)\",protocol__$1,e,null);\n}\n})();\nvar protocol__$3 = (function (){var G__71036 = type;\nvar G__71036__$1 = (((G__71036 instanceof cljs.core.Keyword))?G__71036.fqn:null);\nswitch (G__71036__$1) {\ncase \"ajax\":\nreturn protocol__$2;\n\nbreak;\ncase \"ws\":\nvar G__71037 = protocol__$2;\nswitch (G__71037) {\ncase \"https:\":\nreturn \"wss:\";\n\nbreak;\ncase \"http:\":\nreturn \"ws:\";\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71037)].join('')));\n\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71036__$1)].join('')));\n\n}\n})();\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$3),\"//\",taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([host,path], 0))].join('');\n});\n/**\n * Returns nil on failure, or a map with keys:\n *     :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n *              ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n *     :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n *     :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n *     :chsk    ; IChSocket implementer. You can usu. ignore this.\n * \n *   Common options:\n *     :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n *     :protocol       ; Server protocol, e/o #{:http :https}.\n *     :host           ; Server host (defaults to current page's host).\n *     :params         ; Map of any params to incl. in chsk Ring requests (handy\n *                     ; for application-level auth, etc.).\n *     :packer         ; :edn (default), or an IPacker implementation.\n *     :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n *     :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n *     :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to server's :ws-kalive-ms.\n */\ntaoensso.sente.make_channel_socket_client_BANG_ = (function taoensso$sente$make_channel_socket_client_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___72009 = arguments.length;\nvar i__4731__auto___72010 = (0);\nwhile(true){\nif((i__4731__auto___72010 < len__4730__auto___72009)){\nargs__4736__auto__.push((arguments[i__4731__auto___72010]));\n\nvar G__72011 = (i__4731__auto___72010 + (1));\ni__4731__auto___72010 = G__72011;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (path,_QMARK_csrf_token,p__71049){\nvar vec__71050 = p__71049;\nvar map__71053 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71050,(0),null);\nvar map__71053__$1 = (((((!((map__71053 == null))))?(((((map__71053.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__71053.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__71053):map__71053);\nvar opts = map__71053__$1;\nvar ajax_opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71053__$1,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109));\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__71053__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__71053__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"client-uuid\",\"client-uuid\",-1717531965).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\n}\n})());\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71053__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__71053__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71053__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__71053__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71053__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__71053__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((2048)));\nvar backoff_ms_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__71053__$1,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),taoensso.encore.exp_backoff);\nvar wrap_recv_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__71053__$1,new cljs.core.Keyword(null,\"wrap-recv-evs?\",\"wrap-recv-evs?\",-1996694153),true);\nvar _deprecated_more_opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71050,(1),null);\nvar e_72012 = (function (){try{if((function (){var fexpr__71063 = ((function (vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__71064 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__71064) : taoensso.truss.impl.set_STAR_.call(null,G__71064));\n})(),x);\n});})(vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n;\nreturn fexpr__71063(type);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e71057){if((e71057 instanceof Error)){\nvar e = e71057;\nreturn e;\n} else {\nthrow e71057;\n\n}\n}})();\nif((e_72012 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1450,\"([:in #{:ws :ajax :auto}] type)\",type,e_72012,null);\n}\n\nvar e_72013 = (function (){try{if(taoensso.encore.nblank_str_QMARK_(client_id)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e71065){if((e71065 instanceof Error)){\nvar e = e71065;\nreturn e;\n} else {\nthrow e71065;\n\n}\n}})();\nif((e_72013 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1451,\"(enc/nblank-str? client-id)\",client_id,e_72013,null);\n}\n\nif((!((_deprecated_more_opts == null)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1453,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"], null);\n});})(vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,51728422);\n} else {\n}\n\nif(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"lp-timeout\",\"lp-timeout\",1149461302))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1454,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"], null);\n});})(vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,-1287082109);\n} else {\n}\n\nif((((!(typeof _QMARK_csrf_token === 'string'))) || (clojure.string.blank_QMARK_(_QMARK_csrf_token)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1457,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"], null);\n});})(vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,-102471400);\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar vec__71066 = (function (){var win_loc = taoensso.encore.get_win_loc();\nvar path__$1 = (function (){var or__4131__auto__ = path;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n})();\nvar temp__5733__auto__ = new cljs.core.Keyword(null,\"chsk-url-fn\",\"chsk-url-fn\",1968894294).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar f = temp__5733__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__71069 = path__$1;\nvar G__71070 = win_loc;\nvar G__71071 = new cljs.core.Keyword(null,\"ws\",\"ws\",86841443);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__71069,G__71070,G__71071) : f.call(null,G__71069,G__71070,G__71071));\n})(),(function (){var G__71072 = path__$1;\nvar G__71073 = win_loc;\nvar G__71074 = new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__71072,G__71073,G__71074) : f.call(null,G__71072,G__71073,G__71074));\n})()], null);\n} else {\nvar protocol__$1 = (function (){var or__4131__auto__ = protocol;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(win_loc);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"http\",\"http\",382524695);\n}\n}\n})();\nvar host__$1 = (function (){var or__4131__auto__ = host;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"host\",\"host\",-1558485167).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)),taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549))], null);\n}\n})();\nvar ws_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71066,(0),null);\nvar ajax_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71066,(1),null);\nvar private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((128))),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((10))),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537),(function (){var buf = cljs.core.async.sliding_buffer((512));\nif(cljs.core.truth_(wrap_recv_evs_QMARK_)){\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(buf,cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (buf,packer__$1,vec__71066,ws_url,ajax_url,vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (ev){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"recv\",\"chsk/recv\",561097091),ev], null);\n});})(buf,packer__$1,vec__71066,ws_url,ajax_url,vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n));\n} else {\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf);\n}\n})()], null);\nvar common_chsk_opts = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),private_chs,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),packer__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),ws_kalive_ms], null);\nvar ws_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ws_url,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar ajax_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ajax_url,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),ajax_opts,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),ws_chsk_opts,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),ajax_chsk_opts], null);\nvar _QMARK_chsk = taoensso.sente._chsk_connect_BANG_((function (){var G__71078 = type;\nvar G__71078__$1 = (((G__71078 instanceof cljs.core.Keyword))?G__71078.fqn:null);\nswitch (G__71078__$1) {\ncase \"ws\":\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"ajax\":\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"auto\":\nreturn taoensso.sente.new_ChAutoSocket(auto_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__71078__$1)].join('')));\n\n}\n})());\nvar temp__5733__auto__ = _QMARK_chsk;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar chsk = temp__5733__auto__;\nvar chsk_state_ = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk);\nvar internal_ch = new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs);\nvar send_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(taoensso.sente.chsk_send_BANG_,chsk);\nvar ev_ch = cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(private_chs)], null),recv_buf_or_n);\nvar ev_msg_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2((1),cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (chsk_state_,internal_ch,send_fn,ev_ch,chsk,temp__5733__auto__,packer__$1,vec__71066,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (ev){\nvar vec__71079 = taoensso.sente.as_event(ev);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71079,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71079,(1),null);\nvar ev__$1 = vec__71079;\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),internal_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),chsk_state_,new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null);\n});})(chsk_state_,internal_ch,send_fn,ev_ch,chsk,temp__5733__auto__,packer__$1,vec__71066,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n));\ncljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(ev_ch,ev_msg_ch);\n\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"chsk\",\"chsk\",-863703081),chsk,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ev_msg_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk)], null);\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1545,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5733__auto__,packer__$1,vec__71066,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to create channel socket\"], null);\n});})(temp__5733__auto__,packer__$1,vec__71066,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__71050,map__71053,map__71053__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,763359840);\n}\n});\n\ntaoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ntaoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = (function (seq71046){\nvar G__71047 = cljs.core.first(seq71046);\nvar seq71046__$1 = cljs.core.next(seq71046);\nvar G__71048 = cljs.core.first(seq71046__$1);\nvar seq71046__$2 = cljs.core.next(seq71046__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__71047,G__71048,seq71046__$2);\n});\n\ntaoensso.sente._start_chsk_router_BANG_ = (function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_,ch_recv,event_msg_handler,opts){\nvar map__71085 = opts;\nvar map__71085__$1 = (((((!((map__71085 == null))))?(((((map__71085.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__71085.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__71085):map__71085);\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71085__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71085__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71085__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nvar ch_ctrl = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar execute1 = ((function (map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl){\nreturn (function (f){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});})(map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl))\n;\nvar c__60039__auto___72015 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nvar f__60040__auto__ = (function (){var switch__59756__auto__ = ((function (c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (state_71142){\nvar state_val_71143 = (state_71142[(1)]);\nif((state_val_71143 === (7))){\nvar inst_71137 = (state_71142[(2)]);\nvar state_71142__$1 = state_71142;\nvar statearr_71144_72016 = state_71142__$1;\n(statearr_71144_72016[(2)] = inst_71137);\n\n(statearr_71144_72016[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (1))){\nvar state_71142__$1 = state_71142;\nvar statearr_71145_72017 = state_71142__$1;\n(statearr_71145_72017[(2)] = null);\n\n(statearr_71145_72017[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (4))){\nvar inst_71100 = (state_71142[(7)]);\nvar inst_71102 = (state_71142[(8)]);\nvar inst_71105 = (state_71142[(9)]);\nvar inst_71101 = (state_71142[(10)]);\nvar inst_71100__$1 = (state_71142[(2)]);\nvar inst_71101__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_71100__$1,(0),null);\nvar inst_71102__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_71100__$1,(1),null);\nvar inst_71103 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_71102__$1,ch_ctrl);\nvar inst_71104 = (inst_71101__$1 == null);\nvar inst_71105__$1 = ((inst_71103) || (inst_71104));\nvar state_71142__$1 = (function (){var statearr_71146 = state_71142;\n(statearr_71146[(7)] = inst_71100__$1);\n\n(statearr_71146[(8)] = inst_71102__$1);\n\n(statearr_71146[(9)] = inst_71105__$1);\n\n(statearr_71146[(10)] = inst_71101__$1);\n\nreturn statearr_71146;\n})();\nif(cljs.core.truth_(inst_71105__$1)){\nvar statearr_71148_72018 = state_71142__$1;\n(statearr_71148_72018[(1)] = (5));\n\n} else {\nvar statearr_71150_72019 = state_71142__$1;\n(statearr_71150_72019[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (15))){\nvar inst_71101 = (state_71142[(10)]);\nvar state_71142__$1 = state_71142;\nvar statearr_71153_72020 = state_71142__$1;\n(statearr_71153_72020[(2)] = inst_71101);\n\n(statearr_71153_72020[(1)] = (16));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (13))){\nvar inst_71121 = (state_71142[(2)]);\nvar state_71142__$1 = state_71142;\nvar statearr_71154_72021 = state_71142__$1;\n(statearr_71154_72021[(2)] = inst_71121);\n\n(statearr_71154_72021[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (6))){\nvar inst_71101 = (state_71142[(10)]);\nvar inst_71110 = (inst_71101 == null);\nvar inst_71111 = cljs.core.not(inst_71110);\nvar state_71142__$1 = state_71142;\nif(inst_71111){\nvar statearr_71155_72022 = state_71142__$1;\n(statearr_71155_72022[(1)] = (8));\n\n} else {\nvar statearr_71159_72023 = state_71142__$1;\n(statearr_71159_72023[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (3))){\nvar inst_71139 = (state_71142[(2)]);\nvar state_71142__$1 = state_71142;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_71142__$1,inst_71139);\n} else {\nif((state_val_71143 === (12))){\nvar state_71142__$1 = state_71142;\nvar statearr_71163_72024 = state_71142__$1;\n(statearr_71163_72024[(2)] = false);\n\n(statearr_71163_72024[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (2))){\nvar inst_71096 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_71097 = [ch_recv,ch_ctrl];\nvar inst_71098 = (new cljs.core.PersistentVector(null,2,(5),inst_71096,inst_71097,null));\nvar state_71142__$1 = state_71142;\nreturn cljs.core.async.ioc_alts_BANG_(state_71142__$1,(4),inst_71098);\n} else {\nif((state_val_71143 === (11))){\nvar state_71142__$1 = state_71142;\nvar statearr_71164_72025 = state_71142__$1;\n(statearr_71164_72025[(2)] = true);\n\n(statearr_71164_72025[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (9))){\nvar state_71142__$1 = state_71142;\nvar statearr_71165_72026 = state_71142__$1;\n(statearr_71165_72026[(2)] = false);\n\n(statearr_71165_72026[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (5))){\nvar state_71142__$1 = state_71142;\nvar statearr_71166_72027 = state_71142__$1;\n(statearr_71166_72027[(2)] = null);\n\n(statearr_71166_72027[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (14))){\nvar inst_71101 = (state_71142[(10)]);\nvar inst_71126 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,inst_71101);\nvar state_71142__$1 = state_71142;\nvar statearr_71168_72028 = state_71142__$1;\n(statearr_71168_72028[(2)] = inst_71126);\n\n(statearr_71168_72028[(1)] = (16));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (16))){\nvar inst_71100 = (state_71142[(7)]);\nvar inst_71102 = (state_71142[(8)]);\nvar inst_71105 = (state_71142[(9)]);\nvar inst_71101 = (state_71142[(10)]);\nvar inst_71129 = (state_71142[(2)]);\nvar inst_71130 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_71129,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar inst_71133 = (function (){var vec__71093 = inst_71100;\nvar v = inst_71101;\nvar p = inst_71102;\nvar stop_QMARK_ = inst_71105;\nvar map__71108 = inst_71129;\nvar event_msg = inst_71129;\nvar event = inst_71130;\nreturn ((function (vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\ntry{if(cljs.core.truth_(trace_evs_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1572,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pre-handler event: %s\",event], null);\n});})(vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n,null)),null,766581410);\n} else {\n}\n\nvar G__71174 = (cljs.core.truth_(server_QMARK_)?(function (){var e = (function (){try{if(taoensso.sente.server_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e71175){if((e71175 instanceof Error)){\nvar e = e71175;\nreturn e;\n} else {\nthrow e71175;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1575,\"(server-event-msg? event-msg)\",event_msg,e,null);\n}\n})():(function (){var e = (function (){try{if(taoensso.sente.client_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e71176){if((e71176 instanceof Error)){\nvar e = e71176;\nreturn e;\n} else {\nthrow e71176;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1576,\"(client-event-msg? event-msg)\",event_msg,e,null);\n}\n})());\nreturn (event_msg_handler.cljs$core$IFn$_invoke$arity$1 ? event_msg_handler.cljs$core$IFn$_invoke$arity$1(G__71174) : event_msg_handler.call(null,G__71174));\n}catch (e71172){if((e71172 instanceof Error)){\nvar e1 = e71172;\ntry{var temp__5733__auto__ = error_handler;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar eh = temp__5733__auto__;\nreturn (error_handler.cljs$core$IFn$_invoke$arity$2 ? error_handler.cljs$core$IFn$_invoke$arity$2(e1,event_msg) : error_handler.call(null,e1,event_msg));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1581,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5733__auto__,e1,vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1,\"Chsk router `event-msg-handler` error: %s\",event], null);\n});})(temp__5733__auto__,e1,vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n,null)),null,2015640576);\n}\n}catch (e71173){if((e71173 instanceof Error)){\nvar e2 = e71173;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1582,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e2,e1,vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2,\"Chsk router `error-handler` error: %s\",event], null);\n});})(e2,e1,vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n,null)),null,953096595);\n} else {\nthrow e71173;\n\n}\n}} else {\nthrow e71172;\n\n}\n}});\n;})(vec__71093,v,p,stop_QMARK_,map__71108,event_msg,event,inst_71100,inst_71102,inst_71105,inst_71101,inst_71129,inst_71130,state_val_71143,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n})();\nvar inst_71134 = execute1(inst_71133);\nvar state_71142__$1 = (function (){var statearr_71177 = state_71142;\n(statearr_71177[(11)] = inst_71134);\n\nreturn statearr_71177;\n})();\nvar statearr_71178_72029 = state_71142__$1;\n(statearr_71178_72029[(2)] = null);\n\n(statearr_71178_72029[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (10))){\nvar inst_71124 = (state_71142[(2)]);\nvar state_71142__$1 = state_71142;\nif(cljs.core.truth_(inst_71124)){\nvar statearr_71179_72030 = state_71142__$1;\n(statearr_71179_72030[(1)] = (14));\n\n} else {\nvar statearr_71181_72031 = state_71142__$1;\n(statearr_71181_72031[(1)] = (15));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_71143 === (8))){\nvar inst_71101 = (state_71142[(10)]);\nvar inst_71113 = inst_71101.cljs$lang$protocol_mask$partition0$;\nvar inst_71114 = (inst_71113 & (64));\nvar inst_71115 = inst_71101.cljs$core$ISeq$;\nvar inst_71116 = (cljs.core.PROTOCOL_SENTINEL === inst_71115);\nvar inst_71117 = ((inst_71114) || (inst_71116));\nvar state_71142__$1 = state_71142;\nif(cljs.core.truth_(inst_71117)){\nvar statearr_71183_72032 = state_71142__$1;\n(statearr_71183_72032[(1)] = (11));\n\n} else {\nvar statearr_71184_72033 = state_71142__$1;\n(statearr_71184_72033[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n;\nreturn ((function (switch__59756__auto__,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function() {\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto__ = null;\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto____0 = (function (){\nvar statearr_71185 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_71185[(0)] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto__);\n\n(statearr_71185[(1)] = (1));\n\nreturn statearr_71185;\n});\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto____1 = (function (state_71142){\nwhile(true){\nvar ret_value__59758__auto__ = (function (){try{while(true){\nvar result__59759__auto__ = switch__59756__auto__(state_71142);\nif(cljs.core.keyword_identical_QMARK_(result__59759__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__59759__auto__;\n}\nbreak;\n}\n}catch (e71186){if((e71186 instanceof Object)){\nvar ex__59760__auto__ = e71186;\nvar statearr_71187_72034 = state_71142;\n(statearr_71187_72034[(5)] = ex__59760__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_71142);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e71186;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__59758__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__72035 = state_71142;\nstate_71142 = G__72035;\ncontinue;\n} else {\nreturn ret_value__59758__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto__ = function(state_71142){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto____1.call(this,state_71142);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto____0;\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto____1;\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__59757__auto__;\n})()\n;})(switch__59756__auto__,c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n})();\nvar state__60041__auto__ = (function (){var statearr_71189 = (f__60040__auto__.cljs$core$IFn$_invoke$arity$0 ? f__60040__auto__.cljs$core$IFn$_invoke$arity$0() : f__60040__auto__.call(null));\n(statearr_71189[(6)] = c__60039__auto___72015);\n\nreturn statearr_71189;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__60041__auto__);\n});})(c__60039__auto___72015,map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n);\n\n\nreturn ((function (map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_(){\nreturn cljs.core.async.close_BANG_(ch_ctrl);\n});\n;})(map__71085,map__71085__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n});\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n * \n *   Or for simple automatic future-based threading of every request, enable\n *   the `:simple-auto-threading?` opt (disabled by default).\n */\ntaoensso.sente.start_server_chsk_router_BANG_ = (function taoensso$sente$start_server_chsk_router_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___72036 = arguments.length;\nvar i__4731__auto___72037 = (0);\nwhile(true){\nif((i__4731__auto___72037 < len__4730__auto___72036)){\nargs__4736__auto__.push((arguments[i__4731__auto___72037]));\n\nvar G__72038 = (i__4731__auto___72037 + (1));\ni__4731__auto___72037 = G__72038;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__71196){\nvar vec__71198 = p__71196;\nvar map__71201 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71198,(0),null);\nvar map__71201__$1 = (((((!((map__71201 == null))))?(((((map__71201.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__71201.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__71201):map__71201);\nvar opts = map__71201__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71201__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71201__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71201__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nreturn taoensso.sente._start_chsk_router_BANG_(new cljs.core.Keyword(null,\"server\",\"server\",1499190120),ch_recv,event_msg_handler,opts);\n});\n\ntaoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ntaoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = (function (seq71190){\nvar G__71191 = cljs.core.first(seq71190);\nvar seq71190__$1 = cljs.core.next(seq71190);\nvar G__71192 = cljs.core.first(seq71190__$1);\nvar seq71190__$2 = cljs.core.next(seq71190__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__71191,G__71192,seq71190__$2);\n});\n\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n */\ntaoensso.sente.start_client_chsk_router_BANG_ = (function taoensso$sente$start_client_chsk_router_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___72039 = arguments.length;\nvar i__4731__auto___72040 = (0);\nwhile(true){\nif((i__4731__auto___72040 < len__4730__auto___72039)){\nargs__4736__auto__.push((arguments[i__4731__auto___72040]));\n\nvar G__72041 = (i__4731__auto___72040 + (1));\ni__4731__auto___72040 = G__72041;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__71206){\nvar vec__71207 = p__71206;\nvar map__71210 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__71207,(0),null);\nvar map__71210__$1 = (((((!((map__71210 == null))))?(((((map__71210.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__71210.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__71210):map__71210);\nvar opts = map__71210__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71210__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71210__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nreturn taoensso.sente._start_chsk_router_BANG_(cljs.core.not(new cljs.core.Keyword(null,\"server\",\"server\",1499190120)),ch_recv,event_msg_handler,opts);\n});\n\ntaoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ntaoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = (function (seq71203){\nvar G__71204 = cljs.core.first(seq71203);\nvar seq71203__$1 = cljs.core.next(seq71203);\nvar G__71205 = cljs.core.first(seq71203__$1);\nvar seq71203__$2 = cljs.core.next(seq71203__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__71204,G__71205,seq71203__$2);\n});\n\ntaoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;\n/**\n * Platform-specific alias for `make-channel-socket-server!` or\n *   `make-channel-socket-client!`. Please see the appropriate aliased fn\n * docstring for details.\n */\ntaoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;\n/**\n * Platform-specific alias for `start-server-chsk-router!` or\n *   `start-client-chsk-router!`. Please see the appropriate aliased fn\n *   docstring for details.\n */\ntaoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;\n/**\n * DEPRECATED: Please use `start-chsk-router!` instead\n */\ntaoensso.sente.start_chsk_router_loop_BANG_ = (function taoensso$sente$start_chsk_router_loop_BANG_(event_handler,ch_recv){\nreturn taoensso.sente.start_client_chsk_router_BANG_(ch_recv,(function (ev_msg){\nvar G__71222 = new cljs.core.Keyword(null,\"event\",\"event\",301435442).cljs$core$IFn$_invoke$arity$1(ev_msg);\nvar G__71223 = new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861).cljs$core$IFn$_invoke$arity$1(ev_msg);\nreturn (event_handler.cljs$core$IFn$_invoke$arity$2 ? event_handler.cljs$core$IFn$_invoke$arity$2(G__71222,G__71223) : event_handler.call(null,G__71222,G__71223));\n}));\n});\n\n/**\n * DEPRECATED. Please use `timbre/set-level!` instead\n */\ntaoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;\n\n/**\n * DEPRECATED: Please use `ajax-lite` instead\n */\ntaoensso.sente.ajax_call = taoensso.encore.ajax_lite;\n\n/**\n * DEPRECATED\n */\ntaoensso.sente.default_chsk_url_fn = (function taoensso$sente$default_chsk_url_fn(path,p__71225,websocket_QMARK_){\nvar map__71226 = p__71225;\nvar map__71226__$1 = (((((!((map__71226 == null))))?(((((map__71226.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__71226.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__71226):map__71226);\nvar location = map__71226__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71226__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71226__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar pathname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__71226__$1,new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528));\nvar protocol__$1 = (cljs.core.truth_(websocket_QMARK_)?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol,\"https:\"))?\"wss:\":\"ws:\"):protocol);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$1),\"//\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4131__auto__ = path;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn pathname;\n}\n})())].join('');\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","~:file","taoensso/sente.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flatpickr","~$module$node_modules$react_flatpickr$build$index","~$react-slider","~$module$node_modules$react_slider$lib$components$ReactSlider$ReactSlider","~$react-beautiful-dnd","~$module$node_modules$react_beautiful_dnd$dist$react_beautiful_dnd_cjs"],"~:use-macros",["^ ","~$elide-require","~$taoensso.sente","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^P","~$have!","^R","~$have?","^R","~$debugf","^N","~$tracef","^N","~$infof","^N","~$errorf","^N"],"~:excludes",["~#set",[]],"~:macros",["^ "],"~:name","^L","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$timbre","^N","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","~$cljs.core","^1;","~$goog","^1<","^18","^18","^1:","^1:","~$enc","^R","^N","^N","~$str","~$clojure.string","^1?","^1?","^R","^R"],"~:seen",["^[",["~:require","~:require-macros"]],"~:uses",["^ ","~$<!","^1:","~$>!","^1:","~$put!","^1:","~$chan","^1:","~$format","^R","~$swap-in!","^R","~$reset-in!","^R","~$swapped","^R"],"^1B",["^ ","^P","^P","^16","^N","^19","^1:","^1;","^1;","^1:","^1:","^L","^L","^1=","^R","^N","^N","~$asyncm","^P","^R","^R","~$sente-macros","^L"],"~:form",["~#list",["~$ns","^L","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^1O",["^1A",["^1?","~:as","^1>"],["^1:","^1Q","^19","~:refer",["^1O",["^1D","^1E","^1F","^1G"]]],["^R","^1Q","^1=","^1R",["^1O",["^1H","^1I","^1J","^1K"]],"~:refer-macros",["^1O",["^Q","^T","^U"]]],["^N","^1Q","^16","^1S",["^1O",["^W","^V","^X","^M","^Y"]]],["^18","^1Q","^17"]]],["^1O",["^1B",["^P","^1Q","^1L","^1R",["^1O",["^O","^S"]]],["^L","^1Q","^1M","^1R",["^1O",["^K"]]]]]]],"~:flags",["^ ","^1A",["^[",[]],"^1B",["^[",[]]],"~:js-deps",["^ "],"~:deps",["^1<","^1;","^1?","^1:","^R","^N","^18"]],"^13","^L","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente.cljc"],"~:compiled-at",1578749475519,"~:resource-name","taoensso/sente.cljc","~:warnings",[],"~:source","(ns taoensso.sente\n  \"Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \\\"socket\\\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.\"\n\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n\n  #?(:clj\n     (:require\n      [clojure.string :as str]\n      [clojure.core.async :as async :refer (<! <!! >! >!! put! chan go go-loop)]\n      [taoensso.encore :as enc :refer (swap-in! reset-in! swapped have have! have?)]\n      [taoensso.timbre :as timbre :refer (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require\n      [clojure.string :as str]\n      [cljs.core.async :as async :refer (<! >! put! chan)]\n      [taoensso.encore :as enc :refer (format swap-in! reset-in! swapped)\n       :refer-macros (have have! have?)]\n      [taoensso.timbre :as timbre :refer-macros (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require-macros\n      [cljs.core.async.macros :as asyncm :refer (go go-loop)]\n      [taoensso.sente :as sente-macros :refer (elide-require)])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 105 0])\n  (enc/assert-min-encore-version  2.105))\n\n(def sente-version \"Useful for identifying client/server mismatch\"\n  [1 11 0])\n\n#?(:cljs (def ^:private node-target? (= *target* \"nodejs\")))\n\n;; (timbre/set-level! :trace) ; Uncomment for debugging\n(defonce debug-mode?_ (atom false))\n\n;;;; Events\n;; Clients & server both send `event`s and receive (i.e. route) `event-msg`s:\n;;   - `event`s have the same form client+server side,\n;;   - `event-msg`s have a similar but not identical form\n\n(defn- expected [expected x] {:expected expected :actual {:type (type x) :value x}})\n(defn validate-event\n  \"Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\"\n  [x]\n  (cond\n    (not (vector? x))        {:wrong-type   (expected :vector x)}\n    (not (#{1 2} (count x))) {:wrong-length (expected #{1 2}  x)}\n    :else\n    (let [[ev-id _] x]\n      (cond\n        (not (keyword? ev-id))  {:wrong-id-type   (expected :keyword            ev-id)}\n        (not (namespace ev-id)) {:unnamespaced-id (expected :namespaced-keyword ev-id)}\n        :else nil))))\n\n(defn assert-event\n  \"Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception.\"\n  [x]\n  (when-let [errs (validate-event x)]\n    (throw (ex-info \"Invalid event\" {:given x :errors errs}))))\n\n(defn event? \"Valid [ev-id ?ev-data] form?\" [x] (nil? (validate-event x)))\n(defn as-event [x]\n  (if-let [errs (validate-event x)]\n    ;; [:chsk/bad-event {:given x :errors errs}] ; Breaking change\n    [:chsk/bad-event x]\n    x))\n\n(defn client-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks= #{:ch-recv :send-fn :state :event :id :?data} x)\n    (let [{:keys [ch-recv send-fn state event]} x]\n      (and\n        (enc/chan? ch-recv)\n        (ifn?      send-fn)\n        (enc/atom? state)\n        (event?    event)))))\n\n(defn server-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks= #{:ch-recv :send-fn :connected-uids\n               :ring-req :client-id\n               :event :id :?data :?reply-fn :uid} x)\n    (let [{:keys [ch-recv send-fn connected-uids\n                  ring-req client-id event ?reply-fn]} x]\n      (and\n        (enc/chan?       ch-recv)\n        (ifn?            send-fn)\n        (enc/atom?       connected-uids)\n        (map?            ring-req)\n        (enc/nblank-str? client-id)\n        (event?          event)\n        (or (nil? ?reply-fn)\n            (ifn? ?reply-fn))))))\n\n(defn- put-server-event-msg>ch-recv!\n  \"All server `event-msg`s go through this\"\n  [ch-recv {:as ev-msg :keys [event ?reply-fn]}]\n  (let [[ev-id ev-?data :as valid-event] (as-event event)\n        ev-msg* (merge ev-msg {:event     valid-event\n                               :?reply-fn ?reply-fn\n                               :id        ev-id\n                               :?data     ev-?data})]\n    (if-not (server-event-msg? ev-msg*)\n      (warnf \"Bad ev-msg: %s\" ev-msg) ; Log 'n drop\n      (put! ch-recv ev-msg*))))\n\n;;; Note that cb replys need _not_ be `event` form!\n#?(:cljs (defn cb-error? [cb-reply-clj] (#{:chsk/closed :chsk/timeout :chsk/error} cb-reply-clj)))\n#?(:cljs (defn cb-success? [cb-reply-clj] (not (cb-error? cb-reply-clj))))\n\n;;;; Packing\n;; * Client<->server payloads are arbitrary Clojure vals (cb replies or events).\n;; * Payloads are packed for client<->server transit.\n;; * Packing includes ->str encoding, and may incl. wrapping to carry cb info.\n\n(defn- unpack \"prefixed-pstr->[clj ?cb-uuid]\"\n  [packer prefixed-pstr]\n  (have? string? prefixed-pstr)\n  (let [wrapped? (enc/str-starts-with? prefixed-pstr \"+\")\n        pstr     (subs prefixed-pstr 1)\n        clj\n        (try\n          (interfaces/unpack packer pstr)\n          (catch #?(:clj Throwable :cljs :default) t\n            (debugf \"Bad package: %s (%s)\" pstr t)\n            [:chsk/bad-package pstr]))\n\n        [clj ?cb-uuid] (if wrapped? clj [clj nil])\n        ?cb-uuid (if (= 0 ?cb-uuid) :ajax-cb ?cb-uuid)]\n\n    (tracef \"Unpacking: %s -> %s\" prefixed-pstr [clj ?cb-uuid])\n    [clj ?cb-uuid]))\n\n(defn- pack \"clj->prefixed-pstr\"\n  ([packer clj]\n   (let [;; \"-\" prefix => Unwrapped (has no callback)\n         pstr (str \"-\" (interfaces/pack packer clj))]\n     (tracef \"Packing (unwrapped): %s -> %s\" clj pstr)\n     pstr))\n\n  ([packer clj ?cb-uuid]\n   (let [;;; Keep wrapping as light as possible:\n         ?cb-uuid    (if (= ?cb-uuid :ajax-cb) 0 ?cb-uuid)\n         wrapped-clj (if ?cb-uuid [clj ?cb-uuid] [clj])\n         ;; \"+\" prefix => Wrapped (has callback)\n         pstr (str \"+\" (interfaces/pack packer wrapped-clj))]\n     (tracef \"Packing (wrapped): %s -> %s\" wrapped-clj pstr)\n     pstr)))\n\n(deftype EdnPacker []\n  interfaces/IPacker\n  (pack   [_ x] (enc/pr-edn   x))\n  (unpack [_ s] (enc/read-edn s)))\n\n(def ^:private default-edn-packer (EdnPacker.))\n\n(defn- coerce-packer [x]\n  (if (= x :edn)\n    default-edn-packer\n    (have #(satisfies? interfaces/IPacker %) x)))\n\n(comment\n  (do\n    (require '[taoensso.sente.packers.transit :as transit])\n    (def ^:private default-transit-json-packer (transit/get-transit-packer)))\n\n  (let [pack   interfaces/pack\n        unpack interfaces/unpack\n        data   {:a :A :b :B :c \"hello world\"}]\n\n    (enc/qb 10000\n      (let [pk default-edn-packer]          (unpack pk (pack pk data)))\n      (let [pk default-transit-json-packer] (unpack pk (pack pk data))))))\n\n;;;; Server API\n\n(def ^:private next-idx! (enc/idx-fn))\n\n(declare\n  ^:private send-buffered-server-evs>ws-clients!\n  ^:private send-buffered-server-evs>ajax-clients!\n  ^:private default-client-side-ajax-timeout-ms)\n\n(defn make-channel-socket-server!\n  \"Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                    CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).\"\n\n  [web-server-ch-adapter\n   & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms\n              send-buf-ms-ajax send-buf-ms-ws\n              user-id-fn bad-csrf-fn csrf-token-fn handshake-data-fn packer]\n       :or   {recv-buf-or-n    (async/sliding-buffer 1000)\n              ws-kalive-ms     (enc/ms :secs 25) ; < Heroku 55s timeout\n              lp-timeout-ms    (enc/ms :secs 20) ; < Heroku 30s timeout\n              send-buf-ms-ajax 100\n              send-buf-ms-ws   30\n              user-id-fn    (fn [ring-req] (get-in ring-req [:session :uid]))\n              bad-csrf-fn   (fn [ring-req] {:status 403 :body \"Bad CSRF token\"})\n              csrf-token-fn (fn [ring-req]\n                              (or (:anti-forgery-token ring-req)\n                                  (get-in ring-req [:session :csrf-token])\n                                  (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token])\n                                  (get-in ring-req [:session \"__anti-forgery-token\"])\n                                  #_:sente/no-reference-csrf-token\n                                  ))\n              handshake-data-fn (fn [ring-req] nil)\n              packer :edn}}]]\n\n  (have? enc/pos-int? send-buf-ms-ajax send-buf-ms-ws)\n  (have? #(satisfies? interfaces/IServerChanAdapter %) web-server-ch-adapter)\n\n  (let [max-ms default-client-side-ajax-timeout-ms]\n   (when (>= lp-timeout-ms max-ms)\n     (throw\n       (ex-info (str \":lp-timeout-ms must be < \" max-ms)\n         {:lp-timeout-ms lp-timeout-ms\n          :default-client-side-ajax-timeout-ms max-ms}))))\n\n  (let [packer  (coerce-packer packer)\n        ch-recv (chan recv-buf-or-n)\n\n        user-id-fn\n        (fn [ring-req client-id]\n          ;; Allow uid to depend (in part or whole) on client-id. Be cautious\n          ;; of security implications.\n          (or (user-id-fn (assoc ring-req :client-id client-id)) ::nil-uid))\n\n        ;; :ws udts used for ws-kalive (to check for activity in window period)\n        ;; :ajax udts used for lp-timeout (as a way to check active conn identity)\n        conns_          (atom {:ws  {} :ajax  {}}) ; {<uid> {<client-id> [<?sch> <udt>]}}\n        send-buffers_   (atom {:ws  {} :ajax  {}}) ; {<uid> [<buffered-evs> <#{ev-uuids}>]}\n        connected-uids_ (atom {:ws #{} :ajax #{} :any #{}}) ; Public\n\n        upd-conn!\n        (fn\n          ([conn-type uid client-id] ; Update udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [[?sch _udt] ?v\n                     new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch ?sch})))))\n\n          ([conn-type uid client-id new-?sch] ; Update sch + udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [new-?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch new-?sch}))))))\n\n        connect-uid!\n        (fn [conn-type uid] {:pre [(have? uid)]}\n          (let [newly-connected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [new-m\n                          (case conn-type\n                            :ws   {:ws (conj ws uid) :ajax ajax            :any (conj any uid)}\n                            :ajax {:ws ws            :ajax (conj ajax uid) :any (conj any uid)})]\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and (not (contains? old-any uid))\n                                          (contains? new-any uid))\n                            :newly-connected))))))]\n            newly-connected?))\n\n        upd-connected-uid!\n        (fn [uid] {:pre [(have? uid)]}\n          (let [newly-disconnected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [conns' @conns_\n                          any-ws-clients?   (contains? (:ws   conns') uid)\n                          any-ajax-clients? (contains? (:ajax conns') uid)\n                          any-clients?      (or any-ws-clients?\n                                                any-ajax-clients?)\n                          new-m\n                          {:ws   (if any-ws-clients?   (conj ws   uid) (disj ws   uid))\n                           :ajax (if any-ajax-clients? (conj ajax uid) (disj ajax uid))\n                           :any  (if any-clients?      (conj any  uid) (disj any  uid))}]\n\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and      (contains? old-any uid)\n                                     (not (contains? new-any uid)))\n                            :newly-disconnected))))))]\n\n            newly-disconnected?))\n\n        send-fn ; server>user (by uid) push\n        (fn [user-id ev & [{:as opts :keys [flush?]}]]\n          (let [uid (if (= user-id :sente/all-users-without-uid) ::nil-uid user-id)\n                _   (tracef \"Chsk send: (->uid %s) %s\" uid ev)\n                _   (assert uid\n                    (str \"Support for sending to `nil` user-ids has been REMOVED. \"\n                         \"Please send to `:sente/all-users-without-uid` instead.\"))\n                _   (assert-event ev)\n\n                ev-uuid (enc/uuid-str)\n\n                flush-buffer!\n                (fn [conn-type]\n                  (when-let\n                      [pulled\n                       (swap-in! send-buffers_ [conn-type]\n                         (fn [m]\n                           ;; Don't actually flush unless the event buffered\n                           ;; with _this_ send call is still buffered (awaiting\n                           ;; flush). This means that we'll have many (go\n                           ;; block) buffer flush calls that'll noop. They're\n                           ;; cheap, and this approach is preferable to\n                           ;; alternatives like flush workers.\n                           (let [[_ ev-uuids] (get m uid)]\n                             (if (contains? ev-uuids ev-uuid)\n                               (swapped (dissoc m uid)\n                                        (get    m uid))\n                               (swapped m nil)))))]\n\n                    (let [[buffered-evs ev-uuids] pulled]\n                      (have? vector? buffered-evs)\n                      (have? set?    ev-uuids)\n\n                      (let [buffered-evs-ppstr (pack packer buffered-evs)]\n                        (tracef \"buffered-evs-ppstr: %s\" buffered-evs-ppstr)\n                        (case conn-type\n                          :ws   (send-buffered-server-evs>ws-clients! conns_\n                                  uid buffered-evs-ppstr upd-conn!)\n                          :ajax (send-buffered-server-evs>ajax-clients! conns_\n                                  uid buffered-evs-ppstr))))))]\n\n            (if (= ev [:chsk/close]) ; Currently undocumented\n              (do\n                (debugf \"Chsk closing (client may reconnect): %s\" uid)\n                (when flush?\n                  (flush-buffer! :ws)\n                  (flush-buffer! :ajax))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ws uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch)))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ajax uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch))))\n\n              (do\n                ;; Buffer event\n                (doseq [conn-type [:ws :ajax]]\n                  (swap-in! send-buffers_ [conn-type uid]\n                    (fn [?v]\n                      (if-not ?v\n                        [[ev] #{ev-uuid}]\n                        (let [[buffered-evs ev-uuids] ?v]\n                          [(conj buffered-evs ev)\n                           (conj ev-uuids     ev-uuid)])))))\n\n                ;;; Flush event buffers after relevant timeouts:\n                ;; * May actually flush earlier due to another timeout.\n                ;; * We send to _all_ of a uid's connections.\n                ;; * Broadcasting is possible but I'd suggest doing it rarely,\n                ;;   and only to users we know/expect are actually online.\n                ;;\n                (if flush?\n                  (do\n                    (flush-buffer! :ws)\n                    (flush-buffer! :ajax))\n                  (let [ws-timeout   (async/timeout send-buf-ms-ws)\n                        ajax-timeout (async/timeout send-buf-ms-ajax)]\n                    (go\n                      (<! ws-timeout)\n                      (flush-buffer! :ws))\n                    (go\n                      (<! ajax-timeout)\n                      (flush-buffer! :ajax)))))))\n\n          ;; Server-side send is async so nothing useful to return (currently\n          ;; undefined):\n          nil)\n\n        bad-csrf?\n        (fn [ring-req]\n          (if (nil? csrf-token-fn) ; Provides a way to disable CSRF check\n            false\n            (if-let [reference-csrf-token (csrf-token-fn ring-req)]\n              (let [csrf-token-from-client\n                    (or\n                      (get-in ring-req [:params    :csrf-token])\n                      (get-in ring-req [:headers \"x-csrf-token\"])\n                      (get-in ring-req [:headers \"x-xsrf-token\"]))]\n\n                (not\n                  (enc/const-str=\n                    reference-csrf-token\n                    csrf-token-from-client)))\n\n              true ; By default fail if no CSRF token\n              )))\n\n\n        ev-msg-const\n        {:ch-recv        ch-recv\n         :send-fn        send-fn\n         :connected-uids connected-uids_}]\n\n    {:ch-recv        ch-recv\n     :send-fn        send-fn\n     :connected-uids connected-uids_\n\n     ;; Does not participate in `conns_` (has specific req->resp)\n     :ajax-post-fn\n     (fn [ring-req]\n       (cond\n         (bad-csrf?   ring-req)\n         (bad-csrf-fn ring-req)\n\n         :else\n         (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n           {:on-open\n            (fn [server-ch websocket?]\n              (assert (not websocket?))\n              (let [params        (get ring-req :params)\n                    ppstr         (get params   :ppstr)\n                    client-id     (get params   :client-id)\n                    [clj has-cb?] (unpack packer ppstr)\n                    reply-fn\n                    (let [replied?_ (atom false)]\n                      (fn [resp-clj] ; Any clj form\n                        (when (compare-and-set! replied?_ false true)\n                          (tracef \"Chsk send (ajax post reply): %s\" resp-clj)\n                          (interfaces/sch-send! server-ch websocket?\n                            (pack packer resp-clj)))))]\n\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {;; Note that the client-id is provided here just for the\n                     ;; user's convenience. non-lp-POSTs don't actually need a\n                     ;; client-id for Sente's own implementation:\n                     :client-id client-id #_\"unnecessary-for-non-lp-POSTs\"\n                     :ring-req  ring-req\n                     :event     clj\n                     :uid       (user-id-fn ring-req client-id)\n                     :?reply-fn (when has-cb? reply-fn)}))\n\n                (if has-cb?\n                  (when-let [ms lp-timeout-ms]\n                    (go\n                      (<! (async/timeout ms))\n                      (reply-fn :chsk/timeout)))\n                  (reply-fn :chsk/dummy-cb-200))))})))\n\n     ;; Ajax handshake/poll, or WebSocket handshake\n     :ajax-get-or-ws-handshake-fn\n     (fn [ring-req]\n       (let [sch-uuid   (enc/uuid-str 6)\n             params     (get ring-req :params)\n             client-id  (get params   :client-id)\n             uid        (user-id-fn    ring-req client-id)\n\n             receive-event-msg! ; Partial\n             (fn self\n               ([event          ] (self event nil))\n               ([event ?reply-fn]\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {:client-id client-id\n                     :ring-req  ring-req\n                     :event     event\n                     :?reply-fn ?reply-fn\n                     :uid       uid}))))\n\n             send-handshake!\n             (fn [server-ch websocket?]\n               (tracef \"send-handshake!\")\n               (let [?handshake-data (handshake-data-fn ring-req)\n                     handshake-ev\n                     (if (nil? ?handshake-data) ; Micro optimization\n                       [:chsk/handshake [uid nil]]\n                       [:chsk/handshake [uid nil ?handshake-data]])]\n                 (interfaces/sch-send! server-ch websocket?\n                   (pack packer handshake-ev))))]\n\n         (cond\n\n           (str/blank? client-id)\n           (let [err-msg \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\"]\n             (errorf (str err-msg \": %s\") ring-req) ; Careful re: % in req\n             (throw (ex-info err-msg {:ring-req ring-req})))\n\n           (bad-csrf?   ring-req)\n           (bad-csrf-fn ring-req)\n\n           :else\n           (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n             {:on-open\n              (fn [server-ch websocket?]\n                (if websocket?\n\n                  ;; WebSocket handshake\n                  (let [_ (tracef \"New WebSocket channel: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ws uid client-id server-ch)\n                        udt-open     (:udt updated-conn)]\n\n                    (when (connect-uid! :ws uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (send-handshake! server-ch websocket?)\n\n                    ;; Start ws-kalive loop\n                    ;; This also works to gc ws conns that were suddenly\n                    ;; terminated (e.g. by turning on airplane mode)\n                    (when-let [ms ws-kalive-ms]\n                      (go-loop [udt-t0 udt-open]\n                        (<! (async/timeout ms))\n                        (when-let [[_sch udt-t1] (get-in @conns_ [:ws uid client-id])]\n                          (when (interfaces/sch-open? server-ch)\n                            ;; (assert (= _sch server-ch))\n                            (when (= udt-t1 udt-t0)\n                              ;; Ref. issue #230:\n                              ;; We've seen no send/recv activity on this\n                              ;; conn w/in our kalive window so send a ping\n                              ;; ->client (should auto-close conn if it's\n                              ;; gone dead).\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/ws-ping)))\n                            (recur udt-t1))))))\n\n                  ;; Ajax handshake/poll\n                  (let [_ (tracef \"New Ajax handshake/poll: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ajax uid client-id server-ch)\n                        udt-open     (:udt updated-conn)\n                        handshake?   (or (:init? updated-conn) (:handshake? params))]\n\n                    (when (connect-uid! :ajax uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (if handshake?\n                      ; Client will immediately repoll\n                      (send-handshake! server-ch websocket?)\n\n                      (when-let [ms lp-timeout-ms]\n                        (go\n                          (<! (async/timeout ms))\n                          (when-let [[_sch udt-t1] (get-in @conns_ [:ajax uid client-id])]\n                            (when (= udt-t1 udt-open)\n                              ;; (assert (= _sch server-ch))\n                              ;; Appears to still be the active sch\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/timeout))))))))))\n\n              :on-msg\n              (fn [server-ch websocket? req-ppstr]\n                (assert websocket?)\n                (upd-conn! :ws uid client-id)\n                (let [[clj ?cb-uuid] (unpack packer req-ppstr)]\n                  (receive-event-msg! clj ; Should be ev\n                    (when ?cb-uuid\n                      (fn reply-fn [resp-clj] ; Any clj form\n                        (tracef \"Chsk send (ws reply): %s\" resp-clj)\n                        ;; true iff apparent success:\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj ?cb-uuid)))))))\n\n              :on-close ; We rely on `on-close` to trigger for _every_ conn!\n              (fn [server-ch websocket? _status]\n                ;; Note that `status` type varies with underlying web server\n                (let [conn-type (if websocket? :ws :ajax)\n                      _ (tracef \"%s channel closed: %s (%s)\"\n                          (if websocket? \"WebSocket\" \"Ajax\")\n                          uid sch-uuid)\n\n                      updated-conn (upd-conn! conn-type uid client-id nil)\n                      udt-close    (:udt updated-conn)]\n\n                  ;; Allow some time for possible reconnects (repoll,\n                  ;; sole window refresh, etc.):\n                  (go\n                    (<! (async/timeout 5000))\n                    (let [[_?sch udt-t1] (get-in @conns_ [conn-type uid client-id])]\n\n                      (when @debug-mode?_\n                        (debugf \"close-timeout: %s %s %s %s\" conn-type uid\n                          sch-uuid [(= udt-t1 udt-close) udt-t1 udt-close]))\n\n                      (when (= udt-t1 udt-close)\n                        (let [disconnect? ; Removed entry for client-id?\n                              (swap-in! conns_ [conn-type uid client-id]\n                                (fn [[_sch udt-t1]]\n                                  (if (= udt-t1 udt-close)\n                                    (swapped :swap/dissoc true)\n                                    (swapped udt-t1       false))))]\n\n                          (when disconnect?\n\n                            ;; Potentially remove entry for uid\n                            (swap-in! conns_ [conn-type uid]\n                              (fn [?m] (if (empty? ?m) :swap/dissoc ?m)))\n\n                            (when (upd-connected-uid! uid)\n                              (receive-event-msg! [:chsk/uidport-close uid])))))))))\n\n              :on-error\n              (fn [server-ch websocket? error]\n                (errorf \"ring-req->server-ch-resp error: %s (%s)\"\n                  error uid sch-uuid))}))))}))\n\n(defn- send-buffered-server-evs>ws-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\"\n  [conns_ uid buffered-evs-pstr upd-conn!]\n  (tracef \"send-buffered-server-evs>ws-clients!: %s\" buffered-evs-pstr)\n  (doseq [[client-id [?sch _udt]] (get-in @conns_ [:ws uid])]\n    (when-let [sch ?sch]\n      (upd-conn! :ws uid client-id)\n      (interfaces/sch-send! sch :websocket buffered-evs-pstr))))\n\n(defn- send-buffered-server-evs>ajax-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects.\"\n  [conns_ uid buffered-evs-pstr]\n  (tracef \"send-buffered-server-evs>ajax-clients!: %s\" buffered-evs-pstr)\n  (let [ms-backoffs [90 180 360 720 1440] ; Mean 2790s\n        ;; All connected/possibly-reconnecting client uuids:\n        client-ids-unsatisfied (keys (get-in @conns_ [:ajax uid]))]\n\n    (when-not (empty? client-ids-unsatisfied)\n      ;; (tracef \"client-ids-unsatisfied: %s\" client-ids-unsatisfied)\n      (go-loop [n 0 client-ids-satisfied #{}]\n        (let [?pulled ; nil or {<client-id> [<?sch> <udt>]}\n              (swap-in! conns_ [:ajax uid]\n                (fn [m] ; {<client-id> [<?sch> <udt>]}\n                  (let [ks-to-pull (remove client-ids-satisfied (keys m))]\n                    ;; (tracef \"ks-to-pull: %s\" ks-to-pull)\n                    (if (empty? ks-to-pull)\n                      (swapped m nil)\n                      (swapped\n                        (reduce\n                          (fn [m k]\n                            (let [[?sch udt] (get m k)]\n                              ;; Nb don't change udt; for Ajax conns_ we only\n                              ;; want udt updated on poll or close, not on\n                              ;; activity (as with ws conns_)\n                              (assoc m k [nil udt #_(enc/now-udt)])))\n\n                          m ks-to-pull)\n                        (select-keys m ks-to-pull))))))]\n\n          (have? [:or nil? map?] ?pulled)\n\n          (let [?newly-satisfied\n                (when ?pulled\n                  (reduce-kv\n                    (fn [s client-id [?sch _udt]]\n                      (let [sent?\n                            (when-let [sch ?sch]\n                              ;; Will noop + return false if sch already closed:\n                              (interfaces/sch-send! ?sch (not :websocket)\n                                buffered-evs-pstr))]\n\n                        (if sent? (conj s client-id) s)))\n                    #{} ?pulled))\n\n                now-satisfied (into client-ids-satisfied ?newly-satisfied)]\n\n            ;; (tracef \"now-satisfied: %s\" now-satisfied)\n            (when-let [ms-backoff (get ms-backoffs n)]\n              (when (enc/rsome (complement now-satisfied) client-ids-unsatisfied)\n                (let [ms-timeout (+ ms-backoff (rand-int ms-backoff))]\n                  ;; Allow some time for possible poller reconnects:\n                  (<! (async/timeout ms-timeout))\n                  (recur (inc n) now-satisfied))))))))))\n\n;;;; Client API\n\n#?(:cljs (def ajax-lite \"Alias of `taoensso.encore/ajax-lite`\" enc/ajax-lite))\n#?(:cljs\n   (defprotocol IChSocket\n     (-chsk-connect!    [chsk])\n     (-chsk-disconnect! [chsk reason])\n     (-chsk-reconnect!  [chsk])\n     (-chsk-send!       [chsk ev opts])))\n\n#?(:cljs\n   (do\n     (defn chsk-connect!    [chsk] (-chsk-connect!    chsk))\n     (defn chsk-disconnect! [chsk] (-chsk-disconnect! chsk :requested-disconnect))\n     (defn chsk-reconnect! \"Useful for reauthenticating after login/logout, etc.\"\n       [chsk] (-chsk-reconnect! chsk))\n     (def chsk-destroy! \"Deprecated\" chsk-disconnect!)))\n\n#?(:cljs\n   (defn chsk-send!\n     \"Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\"\n     ([chsk ev] (chsk-send! chsk ev {}))\n     ([chsk ev ?timeout-ms ?cb] (chsk-send! chsk ev {:timeout-ms ?timeout-ms\n                                                     :cb         ?cb}))\n     ([chsk ev opts]\n      (tracef \"Chsk send: (%s) %s\" (assoc opts :cb (boolean (:cb opts))) ev)\n      (-chsk-send! chsk ev opts))))\n\n#?(:cljs\n   (defn- chsk-send->closed! [?cb-fn]\n     (warnf \"Chsk send against closed chsk.\")\n     (when ?cb-fn (?cb-fn :chsk/closed))\n     false))\n\n#?(:cljs\n   (defn- assert-send-args [x ?timeout-ms ?cb]\n     (assert-event x)\n     (assert (or (and (nil? ?timeout-ms) (nil? ?cb))\n                 (and (enc/nat-int? ?timeout-ms)))\n             (str \"cb requires a timeout; timeout-ms should be a +ive integer: \" ?timeout-ms))\n     (assert (or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\n             (str \"cb should be nil, an ifn, or a channel: \" (type ?cb)))))\n\n#?(:cljs\n   (defn- pull-unused-cb-fn! [cbs-waiting_ ?cb-uuid]\n     (when-let [cb-uuid ?cb-uuid]\n       (swap-in! cbs-waiting_ [cb-uuid]\n                 (fn [?f] (swapped :swap/dissoc ?f))))))\n\n#?(:cljs\n   (defn- swap-chsk-state!\n     \"Atomically swaps the value of chk's :state_ atom.\"\n     [chsk f]\n     (let [[old-state new-state]\n           (swap-in! (:state_ chsk)\n             (fn [old-state]\n               (let [new-state (f old-state)\n                     new-state\n                     (if (:first-open? old-state)\n                       (assoc new-state :first-open? false)\n                       new-state)\n\n                     new-state\n                     (if (:open? new-state)\n                       (dissoc new-state :udt-next-reconnect)\n                       new-state)]\n\n                 (swapped new-state [old-state new-state]))))]\n\n       (when (not= old-state new-state)\n         (let [output [old-state new-state]]\n           ;; (debugf \"Chsk state change: %s\" output)\n           (put! (get-in chsk [:chs :state]) [:chsk/state output])\n           output)))))\n\n#?(:cljs\n   (defn- chsk-state->closed [state reason]\n     (have? map? state)\n     (have? [:el #{:requested-disconnect\n                   :requested-reconnect\n                   :downgrading-ws-to-ajax\n                   :unexpected}] reason)\n     (if (or (:open? state) (not= reason :unexpected))\n       (-> state\n           (dissoc :udt-next-reconnect)\n           (assoc\n             :open? false\n             :last-close {:udt (enc/now-udt) :reason reason}))\n       state)))\n\n#?(:cljs\n   (defn- cb-chan-as-fn\n     \"Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>].\"\n     [?cb ev]\n     (if (or (nil? ?cb) (ifn? ?cb))\n       ?cb\n       (do\n         (have? enc/chan? ?cb)\n         (assert-event ev)\n         (let [[ev-id _] ev\n               cb-ch ?cb]\n           (fn [reply]\n             (put! cb-ch\n               [(keyword (str (enc/as-qname ev-id) \".cb\"))\n                reply])))))))\n\n#?(:cljs\n   (defn- receive-buffered-evs! [chs clj]\n     (tracef \"receive-buffered-evs!: %s\" clj)\n     (let [buffered-evs (have vector? clj)]\n       (doseq [ev buffered-evs]\n         (assert-event ev)\n         ;; Should never receive :chsk/* events from server here:\n         (let [[id] ev] (assert (not= (namespace id) \"chsk\")))\n         (put! (:<server chs) ev)))))\n\n#?(:cljs\n   (defn- handshake? [x]\n     (and (vector? x) ; Nb support arb input (e.g. cb replies)\n          (let [[x1] x] (= x1 :chsk/handshake)))))\n\n#?(:cljs\n   (defn- receive-handshake! [chsk-type chsk clj]\n     (have? [:el #{:ws :ajax}] chsk-type)\n     (have? handshake? clj)\n     (tracef \"receive-handshake! (%s): %s\" chsk-type clj)\n     (let [[_ [?uid _ ?handshake-data]] clj\n           {:keys [chs ever-opened?_]} chsk\n           first-handshake? (compare-and-set! ever-opened?_ false true)\n           new-state\n           {:type           chsk-type ; :auto -> e/o #{:ws :ajax}, etc.\n            :open?          true\n            :ever-opened?   true\n            :uid            ?uid\n            :handshake-data ?handshake-data\n            :first-open?    first-handshake?}\n\n           handshake-ev\n           [:chsk/handshake\n            [?uid nil ?handshake-data first-handshake?]]]\n\n       (assert-event handshake-ev)\n       (swap-chsk-state! chsk #(merge % new-state))\n       (put! (:internal chs) handshake-ev)\n\n       :handled)))\n\n#?(:clj\n   (defmacro ^:private elide-require\n    \"Experimental. The presence of `js/require` calls can cause issues with\n    React Native, even if they never execute. Currently no other known\n    workarounds. Ref. https://github.com/ptaoussanis/sente/issues/247.\"\n     [& body]\n     (when-not (enc/get-sys-val \"SENTE_ELIDE_JS_REQUIRE\")\n       `(do ~@body))))\n\n#?(:cljs\n   (def ^:private ?node-npm-websocket_\n     \"nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \\\"1.0.23\\\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm\"\n     (delay ; Eager eval causes issues with React Native, Ref. #247,\n       (elide-require\n         (when (and node-target? (exists? js/require))\n           (try\n             (js/require \"websocket\")\n             ;; In particular, catch 'UnableToResolveError'\n             (catch :default e\n               ;; (errorf e \"Unable to load npm websocket lib\")\n               nil)))))))\n\n#?(:cljs\n   (defrecord ChWebSocket\n     ;; WebSocket-only IChSocket implementation\n     ;; Handles (re)connections, cbs, etc.\n\n     [client-id chs params packer url ws-kalive-ms\n      state_ ; {:type _ :open? _ :uid _ :csrf-token _ ...}\n      instance-handle_ retry-count_ ever-opened?_\n      backoff-ms-fn ; (fn [nattempt]) -> msecs\n      cbs-waiting_ ; {<cb-uuid> <fn> ...}\n      socket_\n      udt-last-comms_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [s @socket_] (.close s 1000 \"CLOSE_NORMAL\")))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [?cb-uuid (when ?cb-fn (enc/uuid-str 6))\n                 ppstr (pack packer ev ?cb-uuid)]\n\n             (when-let [cb-uuid ?cb-uuid]\n               (reset-in! cbs-waiting_ [cb-uuid] (have ?cb-fn))\n               (when-let [timeout-ms ?timeout-ms]\n                 (go\n                   (<! (async/timeout timeout-ms))\n                   (when-let [cb-fn* (pull-unused-cb-fn! cbs-waiting_ ?cb-uuid)]\n                     (cb-fn* :chsk/timeout)))))\n\n             (try\n               (.send @socket_ ppstr)\n               (reset! udt-last-comms_ (enc/now-udt))\n               :apparent-success\n               (catch :default e\n                 (errorf e \"Chsk send error\")\n                 (when-let [cb-uuid ?cb-uuid]\n                   (let [cb-fn* (or (pull-unused-cb-fn! cbs-waiting_ cb-uuid)\n                                    (have ?cb-fn))]\n                     (cb-fn* :chsk/error)))\n                 false))))))\n\n     (-chsk-connect! [chsk]\n       (when-let [WebSocket\n                  (or\n                    (enc/oget goog/global    \"WebSocket\")\n                    (enc/oget goog/global \"MozWebSocket\")\n                    (enc/oget @?node-npm-websocket_ \"w3cwebsocket\"))]\n\n         (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n               have-handle? (fn [] (= @instance-handle_ instance-handle))\n               connect-fn\n               (fn connect-fn []\n                 (when (have-handle?)\n                   (let [retry-fn\n                         (fn [] ; Backoff then recur\n                           (when (have-handle?)\n                             (let [retry-count* (swap! retry-count_ inc)\n                                   backoff-ms (backoff-ms-fn retry-count*)\n                                   udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                               (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                 retry-count* backoff-ms)\n                               (.setTimeout goog/global connect-fn backoff-ms)\n                               (swap-chsk-state! chsk\n                                 #(assoc % :udt-next-reconnect udt-next-reconnect)))))\n\n                         ?socket\n                         (try\n                           (WebSocket.\n                             (enc/merge-url-with-query-string url\n                               (merge params ; 1st (don't clobber impl.):\n                                 {:client-id client-id\n                                  :csrf-token (:csrf-token @state_)})))\n\n                           (catch :default e\n                             (errorf e \"WebSocket error\")\n                             nil))]\n\n                     (if-not ?socket\n                       (retry-fn) ; Couldn't even get a socket\n\n                       (reset! socket_\n                         (doto ?socket\n                           (aset \"onerror\"\n                             (fn [ws-ev]\n                               (errorf ; ^:meta {:raw-console? true}\n                                 \"WebSocket error: %s\"\n                                 (try\n                                   (js->clj ws-ev)\n                                   (catch :default _ ws-ev)))\n\n                               (let [last-ws-error {:udt (enc/now-udt), :ev ws-ev}]\n                                 (swap-chsk-state! chsk\n                                   #(assoc % :last-ws-error last-ws-error)))))\n\n                           (aset \"onmessage\" ; Nb receives both push & cb evs!\n                             (fn [ws-ev]\n                               (let [ppstr (enc/oget ws-ev \"data\")\n\n                                     ;; `clj` may/not satisfy `event?` since\n                                     ;; we also receive cb replies here. This\n                                     ;; is why we prefix pstrs to indicate\n                                     ;; whether they're wrapped or not\n                                     [clj ?cb-uuid] (unpack packer ppstr)]\n\n                                 (reset! udt-last-comms_ (enc/now-udt))\n\n                                 (or\n                                   (when (handshake? clj)\n                                     (receive-handshake! :ws chsk clj)\n                                     (reset! retry-count_ 0)\n                                     :handshake)\n\n                                   (when (= clj :chsk/ws-ping)\n                                     (put! (:<server chs) [:chsk/ws-ping])\n                                     :noop)\n\n                                   (if-let [cb-uuid ?cb-uuid]\n                                     (if-let [cb-fn (pull-unused-cb-fn! cbs-waiting_\n                                                      cb-uuid)]\n                                       (cb-fn clj)\n                                       (warnf \"Cb reply w/o local cb-fn: %s\" clj))\n                                     (let [buffered-evs clj]\n                                       (receive-buffered-evs! chs buffered-evs)))))))\n\n                           ;; Fires repeatedly (on each connection attempt) while\n                           ;; server is down:\n                           (aset \"onclose\"\n                             (fn [ws-ev]\n                               (let [clean? (enc/oget ws-ev \"wasClean\")\n                                     code   (enc/oget ws-ev \"code\")\n                                     reason (enc/oget ws-ev \"reason\")\n                                     last-ws-close\n                                     {:udt    (enc/now-udt)\n                                      :ev     ws-ev\n                                      :clean? clean?\n                                      :code   code\n                                      :reason reason}]\n\n                                 ;; Firefox calls \"onclose\" while unloading,\n                                 ;; Ref. http://goo.gl/G5BYbn:\n                                 (if clean?\n                                   (do\n                                     (debugf \"Clean WebSocket close, will not attempt reconnect\")\n                                     (swap-chsk-state! chsk\n                                       #(assoc % :last-ws-close last-ws-close)))\n                                   (do\n                                     (swap-chsk-state! chsk\n                                       #(assoc (chsk-state->closed % :unexpected)\n                                          :last-ws-close last-ws-close))\n                                     (retry-fn))))))))))))]\n\n           (when-let [ms ws-kalive-ms]\n             (go-loop []\n               (let [udt-t0 @udt-last-comms_]\n                 (<! (async/timeout ms))\n                 (when (have-handle?)\n                   (let [udt-t1 @udt-last-comms_]\n                     (when (= udt-t0 udt-t1)\n                       ;; Ref. issue #259:\n                       ;; We've seen no send/recv activity on this\n                       ;; conn w/in our kalive window so send a ping\n                       ;; ->server (should auto-close conn if it's\n                       ;; gone dead). The server generally sends pings so\n                       ;; this should be rare. Mostly here to help clients\n                       ;; identify conns that were suddenly dropped.\n\n                       (-chsk-send! chsk [:chsk/ws-ping] {:flush? true})))\n                   (recur)))))\n\n           (reset! retry-count_ 0)\n           (connect-fn)\n           chsk)))))\n\n#?(:cljs\n   (defn- new-ChWebSocket [opts csrf-token]\n     (map->ChWebSocket\n       (merge\n         {:state_ (atom {:type :ws :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :retry-count_     (atom 0)\n          :ever-opened?_    (atom false)\n          :cbs-waiting_     (atom {})\n          :socket_          (atom nil)\n          :udt-last-comms_  (atom nil)}\n         opts))))\n\n(def ^:private default-client-side-ajax-timeout-ms\n  \"We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms.\"\n  (enc/ms :secs 60))\n\n#?(:cljs\n   (defrecord ChAjaxSocket\n     ;; Ajax-only IChSocket implementation\n     ;; Handles (re)polling, etc.\n\n     [client-id chs params packer url state_\n      instance-handle_ ever-opened?_\n      backoff-ms-fn\n      ajax-opts curr-xhr_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [x @curr-xhr_] (.abort x)))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [csrf-token (:csrf-token @state_)]\n             (ajax-lite url\n               (merge ajax-opts\n                 {:method     :post\n                  :timeout-ms (or ?timeout-ms (:timeout-ms ajax-opts)\n                                  default-client-side-ajax-timeout-ms)\n                  :resp-type  :text ; We'll do our own pstr decoding\n                  :headers\n                  (merge\n                    (:headers ajax-opts) ; 1st (don't clobber impl.)\n                    {:X-CSRF-Token csrf-token})\n\n                  :params\n                  (let [ppstr (pack packer ev (when ?cb-fn :ajax-cb))]\n                    (merge params ; 1st (don't clobber impl.):\n                      {:udt        (enc/now-udt) ; Force uncached resp\n\n                       ;; A duplicate of X-CSRF-Token for user's convenience\n                       ;; and for back compatibility with earlier CSRF docs:\n                       :csrf-token csrf-token\n\n                       ;; Just for user's convenience here. non-lp-POSTs\n                       ;; don't actually need a client-id for Sente's own\n                       ;; implementation:\n                       :client-id  client-id\n\n                       :ppstr      ppstr}))})\n\n               (fn ajax-cb [{:keys [?error ?content]}]\n                 (if ?error\n                   (if (= ?error :timeout)\n                     (when ?cb-fn (?cb-fn :chsk/timeout))\n                     (do\n                       (swap-chsk-state! chsk\n                         #(chsk-state->closed % :unexpected))\n                       (when ?cb-fn (?cb-fn :chsk/error))))\n\n                   (let [content ?content\n                         resp-ppstr content\n                         [resp-clj _] (unpack packer resp-ppstr)]\n                     (if ?cb-fn\n                       (?cb-fn resp-clj)\n                       (when (not= resp-clj :chsk/dummy-cb-200)\n                         (warnf \"Cb reply w/o local cb-fn: %s\" resp-clj)))\n                     (swap-chsk-state! chsk #(assoc % :open? true))))))\n\n             :apparent-success))))\n\n     (-chsk-connect! [chsk]\n       (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n             have-handle? (fn [] (= @instance-handle_ instance-handle))\n             poll-fn ; async-poll-for-update-fn\n             (fn poll-fn [retry-count]\n               (tracef \"async-poll-for-update!\")\n               (when (have-handle?)\n                 (let [retry-fn\n                       (fn [] ; Backoff then recur\n                         (when (have-handle?)\n                           (let [retry-count* (inc retry-count)\n                                 backoff-ms (backoff-ms-fn retry-count*)\n                                 udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                             (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                    retry-count* backoff-ms)\n                             (.setTimeout goog/global\n                               (fn [] (poll-fn retry-count*))\n                               backoff-ms)\n                             (swap-chsk-state! chsk\n                               #(assoc % :udt-next-reconnect udt-next-reconnect)))))]\n\n                   (reset! curr-xhr_\n                     (ajax-lite url\n                       (merge ajax-opts\n                         {:method     :get ; :timeout-ms timeout-ms\n                          :timeout-ms (or (:timeout-ms ajax-opts)\n                                        default-client-side-ajax-timeout-ms)\n                          :resp-type  :text ; Prefer to do our own pstr reading\n                          :params\n                          (merge\n                            ;; Note that user params here are actually POST\n                            ;; params for convenience. Contrast: WebSocket\n                            ;; params sent as query params since there's no\n                            ;; other choice there.\n                            params ; 1st (don't clobber impl.):\n\n                            {:udt       (enc/now-udt) ; Force uncached resp\n                             :client-id client-id}\n\n                            ;; A truthy :handshake? param will prompt server to\n                            ;; reply immediately with a handshake response,\n                            ;; letting us confirm that our client<->server comms\n                            ;; are working:\n                            (when-not (:open? @state_) {:handshake? true}))\n\n                          :headers\n                          (merge\n                            (:headers ajax-opts) ; 1st (don't clobber impl.)\n                            {:X-CSRF-Token (:csrf-token @state_)})})\n\n                       (fn ajax-cb [{:keys [?error ?content]}]\n                         (if ?error\n                           (cond\n                             (= ?error :timeout) (poll-fn 0)\n                             ;; (= ?error :abort) ; Abort => intentional, not an error\n                             :else\n                             (do\n                               (swap-chsk-state! chsk\n                                 #(chsk-state->closed % :unexpected))\n                               (retry-fn)))\n\n                           ;; The Ajax long-poller is used only for events, never cbs:\n                           (let [content ?content\n                                 ppstr content\n                                 [clj] (unpack packer ppstr)\n                                 handshake? (handshake? clj)]\n\n                             (when handshake?\n                               (receive-handshake! :ajax chsk clj))\n\n                             (swap-chsk-state! chsk #(assoc % :open? true))\n                             (poll-fn 0) ; Repoll asap\n\n                             (when-not handshake?\n                               (or\n                                 (when (= clj :chsk/timeout)\n                                   (when @debug-mode?_\n                                     (receive-buffered-evs! chs [[:debug/timeout]]))\n                                   :noop)\n\n                                 (let [buffered-evs clj] ; An application reply\n                                   (receive-buffered-evs! chs buffered-evs))))))))))))]\n\n         (poll-fn 0)\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAjaxSocket [opts csrf-token]\n     (map->ChAjaxSocket\n       (merge\n         {:state_           (atom {:type :ajax :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :ever-opened?_    (atom false)\n          :curr-xhr_        (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defrecord ChAutoSocket\n     ;; Dynamic WebSocket/Ajax IChSocket implementation\n     ;; Wraps a swappable ChWebSocket/ChAjaxSocket\n\n     [ws-chsk-opts ajax-chsk-opts state_\n      impl_ ; ChWebSocket or ChAjaxSocket\n      ]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl reason)))\n\n     ;; Possibly reset impl type:\n     (-chsk-reconnect! [chsk]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl :requested-reconnect)\n         (-chsk-connect!    chsk)))\n\n     (-chsk-send! [chsk ev opts]\n       (if-let [impl @impl_]\n         (-chsk-send! impl ev opts)\n         (let [{?cb :cb} opts\n               ?cb-fn (cb-chan-as-fn ?cb ev)]\n           (chsk-send->closed! ?cb-fn))))\n\n     (-chsk-connect! [chsk]\n       ;; Starting with a simple downgrade-only strategy here as a proof of concept\n       ;; TODO Later consider smarter downgrade or downgrade+upgrade strategies?\n       (let [ajax-chsk-opts (assoc ajax-chsk-opts :state_ state_)\n               ws-chsk-opts (assoc   ws-chsk-opts :state_ state_)\n\n             ajax-conn!\n             (fn []\n               ;; Remove :auto->:ajax downgrade watch\n               (remove-watch state_ :chsk/auto-ajax-downgrade)\n               (-chsk-connect! (new-ChAjaxSocket ajax-chsk-opts (:csrf-token @state_))))\n\n             ws-conn!\n             (fn []\n               ;; Configure :auto->:ajax downgrade watch\n               (let [downgraded?_ (atom false)]\n                 (add-watch state_ :chsk/auto-ajax-downgrade\n                   (fn [_ _ old-state new-state]\n                     (when-let [impl @impl_]\n                       (when-let [ever-opened?_ (:ever-opened?_ impl)]\n                         (when-not @ever-opened?_\n                           (when (:last-ws-error new-state)\n                             (when (compare-and-set! downgraded?_ false true)\n                               (warnf \"Permanently downgrading :auto chsk -> :ajax\")\n                               (-chsk-disconnect! impl :downgrading-ws-to-ajax)\n                               (reset! impl_ (ajax-conn!))))))))))\n\n               (-chsk-connect! (new-ChWebSocket ws-chsk-opts (:csrf-token @state_))))]\n\n         (reset! impl_ (or (ws-conn!) (ajax-conn!)))\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAutoSocket [opts csrf-token]\n     (map->ChAutoSocket\n       (merge\n         {:state_ (atom {:type :auto :open? false :ever-opened? false :csrf-token csrf-token})\n          :impl_  (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defn- get-chsk-url [protocol host path type]\n     (let [protocol (case protocol :http \"http:\" :https \"https:\" protocol)\n           protocol (have [:el #{\"http:\" \"https:\"}] protocol)\n           protocol (case type\n                      :ajax     protocol\n                      :ws (case protocol \"https:\" \"wss:\" \"http:\" \"ws:\"))]\n       (str protocol \"//\" (enc/path host path)))))\n\n#?(:cljs\n   (defn make-channel-socket-client!\n     \"Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.\"\n\n     [path ?csrf-token &\n      [{:keys [type protocol host params recv-buf-or-n packer ws-kalive-ms\n               client-id ajax-opts wrap-recv-evs? backoff-ms-fn]\n        :as   opts\n        :or   {type           :auto\n               recv-buf-or-n  (async/sliding-buffer 2048) ; Mostly for buffered-evs\n               packer         :edn\n               client-id      (or (:client-uuid opts) ; Backwards compatibility\n                                  (enc/uuid-str))\n               wrap-recv-evs? true\n               backoff-ms-fn  enc/exp-backoff\n               ws-kalive-ms   (enc/ms :secs 20)}}\n\n       _deprecated-more-opts]]\n\n     (have? [:in #{:ajax :ws :auto}] type)\n     (have? enc/nblank-str? client-id)\n\n     (when (not (nil? _deprecated-more-opts)) (warnf \"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"))\n     (when (contains? opts :lp-timeout) (warnf \":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"))\n\n     (when (or (not (string? ?csrf-token)) (str/blank? ?csrf-token))\n       (warnf \"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"))\n\n     (let [packer (coerce-packer packer)\n\n           [ws-url ajax-url]\n           (let [;; Not available with React Native, etc.:\n                 win-loc  (enc/get-win-loc)\n                 path     (or path (:pathname win-loc))]\n\n             (if-let [f (:chsk-url-fn opts)] ; Deprecated\n               [(f path win-loc :ws)\n                (f path win-loc :ajax)]\n\n               (let [protocol (or protocol (:protocol win-loc) :http)\n                     host     (or host     (:host     win-loc))]\n                 [(get-chsk-url protocol host path :ws)\n                  (get-chsk-url protocol host path :ajax)])))\n\n           private-chs\n           {:internal (chan (async/sliding-buffer 128))\n            :state    (chan (async/sliding-buffer 10))\n            :<server\n            (let [;; Nb must be >= max expected buffered-evs size:\n                  buf (async/sliding-buffer 512)]\n              (if wrap-recv-evs?\n                (chan buf (map (fn [ev] [:chsk/recv ev])))\n                (chan buf)))}\n\n           common-chsk-opts\n           {:client-id    client-id\n            :chs          private-chs\n            :params       params\n            :packer       packer\n            :ws-kalive-ms ws-kalive-ms}\n\n           ws-chsk-opts\n           (merge common-chsk-opts\n             {:url           ws-url\n              :backoff-ms-fn backoff-ms-fn})\n\n           ajax-chsk-opts\n           (merge common-chsk-opts\n             {:url           ajax-url\n              :ajax-opts     ajax-opts\n              :backoff-ms-fn backoff-ms-fn})\n\n           auto-chsk-opts\n           {:ws-chsk-opts   ws-chsk-opts\n            :ajax-chsk-opts ajax-chsk-opts}\n\n           ?chsk\n           (-chsk-connect!\n             (case type\n               :ws   (new-ChWebSocket    ws-chsk-opts ?csrf-token)\n               :ajax (new-ChAjaxSocket ajax-chsk-opts ?csrf-token)\n               :auto (new-ChAutoSocket auto-chsk-opts ?csrf-token)))]\n\n       (if-let [chsk ?chsk]\n         (let [chsk-state_ (:state_ chsk)\n               internal-ch (:internal private-chs)\n               send-fn (partial chsk-send! chsk)\n               ev-ch\n               (async/merge\n                 [(:internal private-chs)\n                  (:state    private-chs)\n                  (:<server  private-chs)]\n                 recv-buf-or-n)\n\n               ev-msg-ch\n               (async/chan 1\n                 (map\n                   (fn [ev]\n                     (let [[ev-id ev-?data :as ev] (as-event ev)]\n                       {;; Allow client to inject into router for handler:\n                        :ch-recv internal-ch\n                        :send-fn send-fn\n                        :state   chsk-state_\n                        :event   ev\n                        :id      ev-id\n                        :?data   ev-?data}))))]\n\n           (async/pipe ev-ch ev-msg-ch)\n\n           {:chsk    chsk\n            :ch-recv ev-msg-ch\n            :send-fn send-fn\n            :state   (:state_ chsk)})\n\n         (warnf \"Failed to create channel socket\")))))\n\n;;;; Event-msg routers (handler loops)\n\n(defn- -start-chsk-router!\n  [server? ch-recv event-msg-handler opts]\n  (let [{:keys [trace-evs? error-handler simple-auto-threading?]} opts\n        ch-ctrl (chan)\n\n        execute1\n        #?(:cljs (fn [f] (f))\n           :clj\n           (if simple-auto-threading?\n             (fn [f] (future-call f))\n             (fn [f] (f))))]\n\n    (go-loop []\n      (let [[v p] (async/alts! [ch-recv ch-ctrl])\n            stop? (or (= p ch-ctrl) (nil? v))]\n\n        (when-not stop?\n          (let [{:as event-msg :keys [event]} v]\n\n            (execute1\n              (fn []\n                (enc/catching\n                  (do\n                    (when trace-evs? (tracef \"Pre-handler event: %s\" event))\n                    (event-msg-handler\n                      (if server?\n                        (have! server-event-msg? event-msg)\n                        (have! client-event-msg? event-msg))))\n                  e1\n                  (enc/catching\n                    (if-let [eh error-handler]\n                      (error-handler e1 event-msg)\n                       (errorf e1 \"Chsk router `event-msg-handler` error: %s\" event))\n                    e2 (errorf e2 \"Chsk router `error-handler` error: %s\"     event)))))\n\n            (recur)))))\n\n    (fn stop! [] (async/close! ch-ctrl))))\n\n(defn start-server-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler simple-auto-threading?]}]]\n  (-start-chsk-router! :server ch-recv event-msg-handler opts))\n\n(defn start-client-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler]}]]\n  (-start-chsk-router! (not :server) ch-recv event-msg-handler opts))\n\n;;;; Platform aliases\n\n(def event-msg? #?(:clj server-event-msg? :cljs client-event-msg?))\n\n(def make-channel-socket!\n  \"Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details.\"\n  #?(:clj  make-channel-socket-server!\n     :cljs make-channel-socket-client!))\n\n(def start-chsk-router!\n  \"Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details.\"\n  #?(:clj  start-server-chsk-router!\n     :cljs start-client-chsk-router!))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:clj\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-msg-handler ch-recv]\n       (start-server-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev-msg ch-recv])\n         (fn [ev-msg] (event-msg-handler ev-msg (:ch-recv ev-msg))))))\n\n  #?(:cljs\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-handler ch-recv]\n       (start-client-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev ch-recv])\n         (fn [ev-msg] (event-handler (:event ev-msg) (:ch-recv ev-msg))))))\n\n  (def set-logging-level! \"DEPRECATED. Please use `timbre/set-level!` instead\" timbre/set-level!)\n\n  #?(:cljs (def ajax-call \"DEPRECATED: Please use `ajax-lite` instead\" enc/ajax-lite))\n  #?(:cljs\n     (def default-chsk-url-fn \"DEPRECATED\"\n       (fn [path {:as location :keys [protocol host pathname]} websocket?]\n         (let [protocol\n               (if websocket?\n                 (if (= protocol \"https:\") \"wss:\" \"ws:\")\n                 protocol)]\n           (str protocol \"//\" host (or path pathname)))))))\n","~:reader-features",["^[",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.sente/sente-version","taoensso.sente/node-target?","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/*target*","js/taoensso","js/taoensso.sente","js/taoensso.sente.debug-mode?_","taoensso.sente/debug-mode?_","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","taoensso.sente/expected","expected","x","cljs.core/type","taoensso.sente/validate-event","cljs.core/not","G__69564","fexpr__69563","cljs.core/count","vec__69565","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","ev-id","_","cljs.core/Keyword","cljs.core/namespace","taoensso.sente/assert-event","temp__5735__auto__","errs","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","taoensso.sente/event?","taoensso.sente/as-event","temp__5733__auto__","taoensso.sente/client-event-msg?","and__4120__auto__","cljs.core/map?","taoensso.encore/ks=","map__69585","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","ch-recv","send-fn","state","event","taoensso.encore/chan?","cljs.core/ifn?","taoensso.encore/atom?","taoensso.sente/server-event-msg?","map__69606","connected-uids","ring-req","client-id","?reply-fn","taoensso.encore/nblank-str?","p__69609","map__69610","taoensso.sente/put-server-event-msg>ch-recv!","ev-msg","vec__69613","ev-?data","valid-event","ev-msg*","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2","taoensso.sente/cb-error?","cb-reply-clj","fexpr__69616","taoensso.sente/cb-success?","taoensso.sente/unpack","packer","prefixed-pstr","taoensso.truss.impl/-invar-violation!","vec__69623","wrapped?","taoensso.encore/str-starts-with?","pstr","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","clj","e69627","taoensso.sente.interfaces/unpack","t","?cb-uuid","var_args","G__69629","taoensso.sente/pack","js/Error","taoensso.sente.interfaces/pack","wrapped-clj","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","taoensso.sente/EdnPacker","taoensso.sente/->EdnPacker","taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1","s","taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1","taoensso.sente/default-edn-packer","taoensso.sente/coerce-packer","e","fexpr__69642","p1__69639#","taoensso.truss.impl/-dummy-error","e69640","cljs.core/native-satisfies?","taoensso.sente.interfaces/IPacker","taoensso.sente/next-idx!","taoensso.encore/idx-fn","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","taoensso.sente/make-channel-socket-server!","p__69655","vec__69656","map__69659","cljs.core.get.cljs$core$IFn$_invoke$arity$3","seq69653","G__69654","cljs.core/first","cljs.core/next","self__4717__auto__","web-server-ch-adapter","recv-buf-or-n","ws-kalive-ms","lp-timeout-ms","send-buf-ms-ajax","send-buf-ms-ws","user-id-fn","bad-csrf-fn","csrf-token-fn","handshake-data-fn","cljs.core.async/sliding-buffer","taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","or__4131__auto__","e69662","e69666","taoensso.encore/pos-int?","fexpr__69669","p1__69648#","e69667","taoensso.sente.interfaces/IServerChanAdapter","max-ms","taoensso.sente/default-client-side-ajax-timeout-ms","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","G__69672","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","conns_","send-buffers_","connected-uids_","upd-conn!","conn-type","uid","taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3","?v","vec__69673","?sch","_udt","new-udt","taoensso.encore/now-udt","taoensso.encore/swapped","new-?sch","connect-uid!","taoensso.truss.impl/some?","e69677","newly-connected?","p__69681","map__69682","ws","ajax","any","old-m","new-m","G__69684","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","old-any","new-any","cljs.core/contains?","upd-connected-uid!","e69686","newly-disconnected?","p__69687","map__69688","cljs.core/deref","conns'","any-ws-clients?","any-ajax-clients?","any-clients?","cljs.core.disj.cljs$core$IFn$_invoke$arity$2","p__69691","vec__69692","map__69695","user-id","ev","opts","flush?","ev-uuid","taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0","flush-buffer!","pulled","m","vec__69697","ev-uuids","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","vec__69700","buffered-evs","cljs.core/set?","buffered-evs-ppstr","taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2","G__69708","taoensso.sente/send-buffered-server-evs>ws-clients!","taoensso.sente/send-buffered-server-evs>ajax-clients!","seq__69712","cljs.core/seq","chunk__69713","count__69714","i__69715","vec__69760","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__69764","cljs.core/vals","sch","taoensso.sente.interfaces/sch-close!","seq__69768","chunk__69769","count__69770","i__69771","vec__69782","vec__69789","seq__69795","chunk__69796","count__69797","i__69798","vec__69814","vec__69818","ws-timeout","cljs.core.async/timeout","ajax-timeout","c__60039__auto__","cljs.core.async.impl.dispatch/run","f__60040__auto__","switch__59756__auto__","state_69826","state_val_69827","cljs.core.async.impl.ioc-helpers/take!","inst_69823","inst_69824","statearr-69828","cljs.core.async.impl.ioc-helpers/return-chan","statearr-69831","state-machine__59757__auto__","ret-value__59758__auto__","result__59759__auto__","cljs.core/keyword-identical?","e69832","js/Object","ex__59760__auto__","statearr-69833","cljs.core.async.impl.ioc-helpers/process-exception","state__60041__auto__","statearr-69837","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_69844","state_val_69845","inst_69841","inst_69842","statearr-69846","statearr-69847","e69848","statearr-69849","statearr-69852","bad-csrf?","reference-csrf-token","csrf-token-from-client","taoensso.encore/const-str=","ev-msg-const","taoensso.sente.interfaces/ring-req->server-ch-resp","server-ch","websocket?","vec__69861","params","ppstr","has-cb?","reply-fn","replied?_","resp-clj","cljs.core/compare-and-set!","taoensso.sente.interfaces/sch-send!","ms","state_69877","state_val_69878","inst_69872","inst_69874","inst_69875","G__69883","statearr-69884","statearr-69885","e69886","statearr-69887","statearr-69890","G__69891","sch-uuid","taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1","receive-event-msg!","taoensso$sente$self.cljs$core$IFn$_invoke$arity$2","send-handshake!","?handshake-data","handshake-ev","clojure.string/blank?","err-msg","updated-conn","upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4","udt-open","receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1","state_69945","state_val_69946","inst_69941","statearr-69950","inst_69901","statearr-69952","statearr-69953","inst_69914","inst_69905","inst_69909","inst_69911","cljs.core/PersistentVector","inst_69912","inst_69913","statearr-69956","statearr-69958","statearr-69959","inst_69921","inst_69934","statearr-69960","statearr-69961","statearr-69962","inst_69943","statearr-69965","inst_69903","inst_69927","inst_69928","statearr-69967","statearr-69968","inst_69920","inst_69923","statearr-69970","statearr-69971","statearr-69972","inst_69938","statearr-69973","inst_69925","statearr-69975","statearr-69976","statearr-69977","e69978","statearr-69979","statearr-69980","taoensso.sente.interfaces/sch-open?","handshake?","state_70010","state_val_70011","inst_69985","inst_69992","inst_69987","inst_69988","inst_69989","inst_69990","inst_69991","statearr-70012","statearr-70013","statearr-70014","inst_69997","inst_69998","inst_69999","statearr-70015","statearr-70016","statearr-70017","statearr-70018","inst_70008","inst_70001","inst_70002","statearr-70019","statearr-70020","inst_70005","statearr-70021","statearr-70022","e70023","statearr-70024","statearr-70025","req-ppstr","upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3","vec__70030","receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$2","taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3","_status","udt-close","state_70088","state_val_70089","statearr-70094","inst_70033","statearr-70095","statearr-70096","inst_70043","inst_70063","inst_70045","inst_70046","inst_70058","inst_70059","inst_70060","inst_70062","vec__70036","statearr-70106","statearr-70108","statearr-70109","inst_70049","inst_70050","inst_70051","statearr-70112","inst_70073","inst_70074","inst_70075","inst_70076","statearr-70114","inst_70035","inst_70039","inst_70040","inst_70041","inst_70042","inst_70047","statearr-70116","statearr-70118","statearr-70119","inst_70082","statearr-70125","inst_70065","inst_70066","inst_70067","inst_70068","inst_70069","inst_70070","statearr-70132","statearr-70135","statearr-70136","inst_70054","inst_70055","statearr-70138","statearr-70141","statearr-70143","inst_70079","statearr-70145","statearr-70148","inst_70086","statearr-70151","e70152","statearr-70153","statearr-70155","_?sch","udt-t1","disconnect?","p__70061","vec__70101","_sch","?m","cljs.core/empty?","error","buffered-evs-pstr","seq__70157","chunk__70158","count__70159","i__70160","vec__70202","vec__70205","vec__70226","vec__70229","G__70211","G__70212","G__70213","G__70232","G__70233","G__70234","ms-backoffs","client-ids-unsatisfied","cljs.core/keys","state_70339","state_val_70340","inst_70291","inst_70283","inst_70282","inst_70311","inst_70312","cljs.core/PersistentHashSet","inst_70313","statearr-70363","inst_70281","statearr-70379","statearr-70380","statearr-70381","inst_70332","statearr-70382","inst_70318","inst_70323","inst_70324","inst_70325","inst_70308","statearr-70385","statearr-70386","statearr-70387","inst_70337","inst_70335","statearr-70389","inst_70287","inst_70288","inst_70289","inst_70290","inst_70300","fexpr__70400","taoensso.truss.impl/non-throwing","inst_70301","statearr-70401","statearr-70402","statearr-70404","statearr-70408","inst_70316","inst_70317","statearr-70409","statearr-70410","statearr-70411","inst_70306","statearr-70412","statearr-70413","inst_70327","inst_70328","statearr-70414","statearr-70415","inst_70320","inst_70321","statearr-70418","statearr-70419","statearr-70420","statearr-70422","e70425","statearr-70426","statearr-70427","n","client-ids-satisfied","?pulled","ks-to-pull","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","k","vec__70390","udt","cljs.core/select-keys","cljs.core/reduce-kv","p__70310","vec__70343","sent?","cljs.core.into.cljs$core$IFn$_invoke$arity$2","taoensso.encore/rsome","cljs.core/complement","cljs.core/rand-int","taoensso.sente/ajax-lite","taoensso.encore/ajax-lite","x__4433__auto__","m__4434__auto__","taoensso.sente/-chsk-connect!","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","taoensso.sente/-chsk-disconnect!","taoensso.sente/-chsk-reconnect!","taoensso.sente/-chsk-send!","taoensso.sente/IChSocket","chsk","reason","taoensso.sente/chsk-connect!","taoensso.sente/chsk-disconnect!","taoensso.sente/chsk-reconnect!","taoensso.sente/chsk-destroy!","G__70477","taoensso.sente/chsk-send!","taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3","?timeout-ms","?cb","cljs.core/boolean","taoensso.sente/chsk-send->closed!","?cb-fn","G__70506","taoensso.sente/assert-send-args","taoensso.encore/nat-int?","taoensso.sente/pull-unused-cb-fn!","cbs-waiting_","cb-uuid","?f","taoensso.sente/swap-chsk-state!","f","vec__70512","old-state","new-state","taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","output","taoensso.sente/chsk-state->closed","e70522","fexpr__70530","G__70531","taoensso.truss.impl/set*","e70528","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","taoensso.sente/cb-chan-as-fn","e70536","vec__70541","cb-ch","reply","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","taoensso.encore/as-qname","taoensso.sente/receive-buffered-evs!","chs","seq__70551","chunk__70552","count__70553","i__70554","vec__70572","vec__70576","id","taoensso.sente/handshake?","vec__70585","x1","taoensso.sente/receive-handshake!","chsk-type","fexpr__70599","G__70600","e70594","e70601","vec__70606","vec__70609","map__70612","?uid","ever-opened?_","first-handshake?","p1__70588#","taoensso.sente/?node-npm-websocket_","js/require","e70622","this__4385__auto__","k__4386__auto__","this__4387__auto__","k70636","else__4388__auto__","G__70641","url","state_","instance-handle_","retry-count_","backoff-ms-fn","socket_","udt-last-comms_","__extmap","this__4404__auto__","f__4405__auto__","init__4406__auto__","ret__4407__auto__","p__70644","vec__70647","k__4408__auto__","v__4409__auto__","this__4399__auto__","writer__4400__auto__","opts__4401__auto__","pr-pair__4402__auto__","keyval__4403__auto__","cljs.core/pr-sequential-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","G__70635","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4383__auto__","__meta","this__4380__auto__","__hash","this__4389__auto__","this__4381__auto__","h__4243__auto__","fexpr__70653","coll__4382__auto__","cljs.core/hash-unordered-coll","this70637","other70638","this__4394__auto__","k__4395__auto__","cljs.core/-with-meta","cljs.core/not-empty","this__4392__auto__","k__4393__auto__","pred__70661","expr__70662","G__70664","G__70665","G__70668","G__70669","G__70678","G__70679","G__70680","G__70681","G__70684","G__70685","G__70686","G__70687","G__70689","G__70690","G__70691","G__70692","G__70693","G__70694","G__70695","G__70696","G__70697","G__70698","G__70702","G__70703","G__70704","G__70705","G__70706","G__70707","this__4397__auto__","cljs.core/MapEntry","this__4384__auto__","this__4390__auto__","entry__4391__auto__","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","taoensso.sente/ChWebSocket","this__4428__auto__","cljs.core/List","writer__4429__auto__","G__70639","extmap__4424__auto__","G__70849","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","taoensso.sente/->ChWebSocket","taoensso.sente/map->ChWebSocket","cljs.core/reset!","p1__70623#","map__70708","taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3","e70724","timeout-ms","state_70753","state_val_70754","inst_70739","inst_70742","inst_70741","statearr-70756","statearr-70757","statearr-70758","inst_70748","G__70759","statearr-70760","statearr-70761","inst_70751","statearr-70762","e70763","statearr-70764","statearr-70765","e70767","cb-fn*","e70768","G__70769","WebSocket","taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2","goog/global","instance-handle","have-handle?","connect-fn","retry-fn","retry-count*","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/inc","backoff-ms","udt-next-reconnect","p1__70625#","?socket","e70773","taoensso.encore/merge-url-with-query-string","G__70774","ws-ev","e70775","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","last-ws-error","p1__70629#","vec__70777","cb-fn","clean?","code","last-ws-close","p1__70633#","p1__70634#","state_70821","state_val_70822","inst_70817","statearr-70823","statearr-70824","inst_70798","inst_70799","statearr-70825","statearr-70826","statearr-70827","statearr-70830","inst_70819","inst_70795","inst_70796","statearr-70831","statearr-70832","inst_70801","inst_70802","statearr-70834","statearr-70835","inst_70813","statearr-70836","statearr-70838","inst_70804","inst_70805","inst_70806","inst_70807","inst_70808","inst_70809","cljs.core/PersistentHashMap","inst_70810","statearr-70841","statearr-70842","e70843","statearr-70844","statearr-70845","taoensso.sente/new-ChWebSocket","csrf-token","k70861","G__70871","ajax-opts","curr-xhr_","p__70874","vec__70875","G__70860","fexpr__70880","this70862","other70863","pred__70882","expr__70883","G__70886","G__70887","G__70888","G__70889","G__70890","G__70891","G__70892","G__70893","G__70894","G__70895","G__70896","G__70897","G__70898","G__70899","G__70900","G__70901","G__70902","G__70903","G__70904","G__70905","G__70906","G__70907","taoensso.sente/ChAjaxSocket","G__70866","G__70942","taoensso.sente/->ChAjaxSocket","taoensso.sente/map->ChAjaxSocket","p1__70851#","map__70908","G__70910","G__70911","G__70912","p__70913","map__70914","?error","?content","G__70917","p1__70852#","G__70918","vec__70919","content","resp-ppstr","p1__70853#","poll-fn","retry-count","p1__70855#","G__70926","G__70927","G__70928","p__70929","map__70930","p1__70857#","vec__70934","p1__70859#","taoensso.sente/new-ChAjaxSocket","k70947","G__70963","ws-chsk-opts","ajax-chsk-opts","impl_","p__70967","vec__70968","G__70946","fexpr__70980","this70948","other70949","pred__70987","expr__70988","G__70990","G__70991","G__70992","G__70993","G__70994","G__70995","G__70996","G__70997","taoensso.sente/ChAutoSocket","G__70952","G__71024","taoensso.sente/->ChAutoSocket","taoensso.sente/map->ChAutoSocket","impl","map__71012","ajax-conn!","cljs.core/remove-watch","ws-conn!","downgraded?_","cljs.core/add-watch","taoensso.sente/new-ChAutoSocket","taoensso.sente/get-chsk-url","protocol","host","path","type","G__71031","fexpr__71034","G__71035","e71032","G__71036","G__71037","taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic","taoensso.sente/make-channel-socket-client!","p__71049","vec__71050","map__71053","seq71046","G__71047","G__71048","?csrf-token","wrap-recv-evs?","taoensso.encore/exp-backoff","_deprecated-more-opts","fexpr__71063","G__71064","e71057","e71065","vec__71066","ws-url","ajax-url","win-loc","taoensso.encore/get-win-loc","G__71069","G__71070","G__71071","G__71072","G__71073","G__71074","private-chs","buf","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$1","common-chsk-opts","auto-chsk-opts","?chsk","G__71078","chsk-state_","internal-ch","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","ev-ch","cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2","ev-msg-ch","vec__71079","cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2","taoensso.sente/-start-chsk-router!","server?","event-msg-handler","map__71085","trace-evs?","error-handler","simple-auto-threading?","ch-ctrl","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","execute1","state_71142","state_val_71143","inst_71137","statearr-71144","statearr-71145","inst_71100","inst_71102","inst_71105","inst_71101","inst_71103","inst_71104","statearr-71146","statearr-71148","statearr-71150","statearr-71153","inst_71121","statearr-71154","inst_71110","inst_71111","statearr-71155","statearr-71159","inst_71139","statearr-71163","inst_71096","inst_71097","inst_71098","cljs.core.async/ioc-alts!","statearr-71164","statearr-71165","statearr-71166","inst_71126","statearr-71168","inst_71129","inst_71130","inst_71133","vec__71093","map__71108","inst_71134","statearr-71177","statearr-71178","inst_71124","statearr-71179","statearr-71181","inst_71113","inst_71114","inst_71115","inst_71116","inst_71117","statearr-71183","statearr-71184","statearr-71185","e71186","statearr-71187","statearr-71189","v","p","stop?","event-msg","e71172","G__71174","e71175","e71176","e1","e71173","eh","e2","cljs.core.async/close!","taoensso.sente/start-server-chsk-router!","p__71196","vec__71198","map__71201","seq71190","G__71191","G__71192","taoensso.sente/start-client-chsk-router!","p__71206","vec__71207","map__71210","seq71203","G__71204","G__71205","taoensso.sente/event-msg?","taoensso.sente/make-channel-socket!","taoensso.sente/start-chsk-router!","taoensso.sente/start-chsk-router-loop!","event-handler","G__71222","G__71223","taoensso.sente/set-logging-level!","taoensso.timbre/set-level!","taoensso.sente/ajax-call","taoensso.sente/default-chsk-url-fn","p__71225","map__71226","location","pathname"]]],"~:cache-keys",["~#cmap",[["^1X","goog/dom/tagname.js"],[1570979810632,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^[",[]],"~:deps-syms",["^1<","~$goog.dom.HtmlElement"]]],["^1X","goog/async/freelist.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","cljs/core/async/impl/ioc_helpers.cljs"],[1565093951073,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","~$cljs.core.async.impl.protocols"]]],["^1X","goog/labs/useragent/platform.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.labs.userAgent.util","~$goog.string"]]],["^1X","taoensso/sente/interfaces.cljc"],[1565101457852,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^R"]]],["^1X","cljs/core/async.cljs"],[1565093951073,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2>","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"]]],["^1X","goog/timer/timer.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.Promise","~$goog.events.EventTarget"]]],["^1X","cljs/tools/reader/impl/utils.cljs"],[1570979808100,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^1?","^2@"]]],["^1X","goog/math/math.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.array","~$goog.asserts"]]],["^1X","goog/string/stringformat.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2@"]]],["^1X","goog/events/eventtype.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1X","goog/labs/useragent/browser.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2?","~$goog.object","~$goog.string.internal"]]],["^1X","goog/array/array.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I"]]],["^1X","goog/useragent/useragent.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2?","~$goog.reflect","^2@"]]],["^1X","goog/structs/prioritypool.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1X","goog/async/run.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1X","taoensso/encore.cljs"],[1565101457605,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^1?","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^2L","^2@","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1X","goog/debug/error.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/async/workqueue.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I","~$goog.async.FreeList"]]],["^1X","goog/events/events.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2J","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1X","goog/promise/resolver.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/events/browserfeature.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2K"]]],["^1X","cljs/tools/reader/edn.cljs"],[1570979808100,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2@","^2["]]],["^1X","goog/structs/priorityqueue.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.structs.Heap"]]],["^1X","goog/net/xhrio.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.Timer","^2H","^2I","^39","^2G","~$goog.json.hybrid","~$goog.log","^36","^35","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2L","^2@","^34","~$goog.structs.Map","~$goog.uri.utils","^2K"]]],["^1X","goog/promise/thenable.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","taoensso/sente.cljc"],[1565101457852,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^1?","^1:","^R","^N","^18"]]],["^1X","goog/dom/nodetype.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","cljs/tools/reader/impl/inspect.cljs"],[1570979808100,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;"]]],["^1X","cljs/tools/reader.cljs"],[1570979808100,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^3>","^3?","^3@","^3=","^2H","^2@","^2["]]],["^1X","goog/net/wrapperxmlhttpfactory.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1X","goog/events/eventtarget.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.Disposable","^2I","^30","~$goog.events.Event","^3;","^3<","^2L"]]],["^1X","goog/disposable/disposable.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.disposable.IDisposable"]]],["^1X","goog/object/object.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/structs/set.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^34","~$goog.structs.Collection","^3H"]]],"~:SHADOW-TIMESTAMP",[1578682820000,1565093957000],["^1X","goog/math/long.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I","^2Q"]]],["^1X","goog/events/listener.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.events.ListenableKey"]]],["^1X","cljs/core/async/impl/channels.cljs"],[1565093951073,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2>","^2D","^2B"]]],["^1X","goog/events/listenermap.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","~$goog.events.Listener","^2L"]]],["^1X","goog/events/eventid.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","taoensso/truss.cljs"],[1565101457542,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","~$taoensso.truss.impl"]]],["^1X","goog/string/internal.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/functions/functions.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","cljs/core/async/impl/dispatch.cljs"],[1565093951073,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2B","^2U"]]],["^1X","taoensso/truss/impl.cljs"],[1565101457542,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2W"]]],["^1X","cljs/core/async/impl/protocols.cljs"],[1565093951073,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;"]]],["^1X","goog/net/eventtype.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/structs/map.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1X","goog/net/xhriopool.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^31","~$goog.structs.PriorityPool"]]],["^1X","goog/structs/queue.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H"]]],["^1X","goog/labs/useragent/engine.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2?","^2@"]]],["^1X","taoensso/timbre/appenders/core.cljs"],[1565101457548,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^1?","^R"]]],["^1X","cljs/reader.cljs"],[1565093957209,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2L","^3A","^2Y","^2["]]],["^1X","goog/asserts/asserts.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1X","cljs/core/async/impl/buffers.cljs"],[1565093951073,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2>"]]],["^1X","goog/debug/logbuffer.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I","~$goog.debug.LogRecord"]]],["^1X","goog/uri/uri.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2I","^2@","^34","^3H","^3I","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1X","goog/net/errorcode.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/disposable/idisposable.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/promise/promise.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","~$goog.Thenable","^2I","^38","~$goog.async.run","^2V","^3W","~$goog.promise.Resolver"]]],["^1X","cljs/core/async/impl/timers.cljs"],[1565093951073,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2>","^2A","^2D"]]],["^1X","goog/debug/logrecord.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/base.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",[]]],["^1X","goog/json/hybrid.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I","~$goog.json"]]],["^1X","goog/structs/structs.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2L"]]],["^1X","cljs/tools/reader/impl/errors.cljs"],[1570979808100,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^3>","^1?","~$cljs.tools.reader.impl.inspect"]]],["^1X","clojure/string.cljs"],[1565093957209,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^2@","^2["]]],["^1X","goog/structs/pool.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^3L","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1X","goog/net/httpstatus.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/structs/heap.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2L","~$goog.structs.Node"]]],["^1X","goog/debug/entrypointregistry.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I"]]],["^1X","goog/string/string.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2M"]]],["^1X","goog/reflect/reflect.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/labs/useragent/util.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2M"]]],["^1X","goog/debug/debug.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","~$goog.debug.errorcontext","^2K"]]],["^1X","goog/string/stringbuffer.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/debug/errorcontext.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","cljs/tools/reader/reader_types.cljs"],[1570979808100,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^3?","^2@","^2["]]],["^1X","goog/iter/iter.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2I","~$goog.functions","~$goog.math"]]],["^1X","goog/async/nexttick.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^39","~$goog.dom.TagName","^49","^2N","^2O"]]],["^1X","goog/debug/logger.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2I","~$goog.debug","~$goog.debug.LogBuffer","^3Y"]]],["^1X","goog/events/event.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^3L","~$goog.events.EventId"]]],["^1X","cljs/tools/reader/impl/commons.cljs"],[1570979808100,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^3=","^3>","^3?"]]],["^1X","goog/dom/htmlelement.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","cljs/core.cljs"],[1565093957209,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["~$goog.math.Long","~$goog.math.Integer","^2@","^2L","^2H","~$goog.Uri","^2["]]],["^1X","goog/log/log.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^4<","~$goog.debug.LogManager","^3Y","~$goog.debug.Logger"]]],["^1X","goog/structs/collection.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/events/browserevent.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^4<","^2J","^3M","~$goog.events.EventType","^2Q","^2K"]]],["^1X","goog/math/integer.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/structs/node.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","clojure/set.cljs"],[1565093957209,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;"]]],["^1X","goog/uri/utils.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2H","^2I","^2@"]]],["^1X","taoensso/timbre.cljs"],[1565101457548,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^1;","^1?","^R","~$taoensso.timbre.appenders.core"]]],["^1X","goog/json/json.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]],["^1X","goog/events/listenable.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^4>"]]],["^1X","goog/net/xmlhttpfactory.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^3J"]]],["^1X","goog/net/xmlhttp.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<","^2I","~$goog.net.WrapperXmlHttpFactory","^3K"]]],["^1X","goog/net/xhrlike.js"],[1570979810632,"^29",["^ ","^2:",null,"^2;",["^[",[]],"^2<",["^1<"]]]]],"~:clj-info",["^ ","jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/buffers.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/dispatch.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/timers.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.analyzer.jvm/0.7.0/tools.analyzer.jvm-0.7.0.jar!/clojure/tools/analyzer/jvm.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.analyzer/0.6.9/tools.analyzer-0.6.9.jar!/clojure/tools/analyzer/utils.clj",1565093823000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async/impl/ioc_macros.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1565093954000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/com/taoensso/sente/1.14.0-RC2/sente-1.14.0-RC2.jar!/taoensso/sente.cljc",1565101457000,"jar:file:/Users/paul/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/concurrent.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async/macros.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/channels.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/mutex.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/com/taoensso/sente/1.14.0-RC2/sente-1.14.0-RC2.jar!/taoensso/sente/interfaces.cljc",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.analyzer/0.6.9/tools.analyzer-0.6.9.jar!/clojure/tools/analyzer.clj",1565093823000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/exec/threadpool.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.analyzer/0.6.9/tools.analyzer-0.6.9.jar!/clojure/tools/analyzer/ast.clj",1565093823000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.analyzer/0.6.9/tools.analyzer-0.6.9.jar!/clojure/tools/analyzer/env.clj",1565093823000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/reflect.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/edn.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.analyzer.jvm/0.7.0/tools.analyzer.jvm-0.7.0.jar!/clojure/tools/analyzer/jvm/utils.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/ioc_macros.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/clojure/core/async/impl/protocols.clj",1565093951000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/com/taoensso/encore/2.105.0/encore-2.105.0.jar!/taoensso/encore.clj",1565101457000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1565096504000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","^8","taoensso/sente.cljc","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"~:shadow/protocol-prefixes",["^[",["taoensso$sente$IChSocket$"]],"^J",["^ ","^K","^L","^M","^N","^O","^P","^Q","^R","^S","^P","^T","^R","^U","^R","^V","^N","^W","^N","^X","^N","^Y","^N"],"^Z",["^[",[]],"^10",["^ "],"^11","^L","~:shadow/js-requires",["^[",["websocket"]],"^14",null,"^15",["^ ","^16","^N","^17","^18","^19","^1:","^1;","^1;","^1<","^1<","^18","^18","^1:","^1:","^1=","^R","^N","^N","^1>","^1?","^1?","^1?","^R","^R"],"^1@",["^[",["^1A","^1B"]],"~:shadow/js-access-global",["^[",["Object","require","Error"]],"^1C",["^ ","^1D","^1:","^1E","^1:","^1F","^1:","^1G","^1:","^1H","^R","^1I","^R","^1J","^R","^1K","^R"],"~:defs",["^ ","~$chsk-state->closed",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",860,"^:",11,"^;",860,"^<",29,"~:private",true,"~:arglists",["^1O",["~$quote",["^1O",[["~$state","~$reason"]]]]]],"^62",true,"^11","~$taoensso.sente/chsk-state->closed","^8","taoensso/sente.cljc","^<",29,"~:method-params",["^1O",[["^65","^66"]]],"~:protocol-impl",null,"~:arglists-meta",["^1O",[null,null]],"^:",4,"~:variadic?",false,"^9",860,"~:ret-tag",["^[",[null,"~$clj","~$any"]],"^;",860,"~:max-fixed-arity",2,"~:fn-var",true,"^63",["^1O",["^64",["^1O",[["^65","^66"]]]]]],"~$assert-send-args",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",819,"^:",11,"^;",819,"^<",27,"^62",true,"^63",["^1O",["^64",["^1O",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^62",true,"^11","~$taoensso.sente/assert-send-args","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["~$x","^6B","^6C"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",819,"^6<","~$clj-nil","^;",819,"^6?",3,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x","^6B","^6C"]]]]]],"~$map->ChAjaxSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"~:internal-ctor",true,"~:factory","~:map","^9",1167,"^;",1167,"^63",["^1O",["^64",["^1O",[["~$G__70866"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"^11","~$taoensso.sente/map->ChAjaxSocket","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^6J"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6G",true,"^6;",false,"^6H","^6I","^9",1167,"^6<","~$taoensso.sente/ChAjaxSocket","^;",1167,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^6J"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"~$sente-version",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",109,"^:",6,"^;",109,"^<",19],"^11","~$taoensso.sente/sente-version","^8","taoensso/sente.cljc","^<",19,"^:",1,"^9",109,"^;",109,"~:tag","~$cljs.core/IVector","^7","Useful for identifying client/server mismatch"],"~$->EdnPacker",["^ ","^61",null,"^5",["^ ","~:protocols",["^[",["~$taoensso.sente.interfaces/IPacker"]],"^8","taoensso/sente.cljc","^<",19,"^:",10,"^6H","~:positional","^9",235,"^;",235,"^63",["^1O",["^64",["^1O",[[]]]]],"~:skip-protocol-flag",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"^6R",["^[",["^6S"]],"^11","~$taoensso.sente/->EdnPacker","^8","taoensso/sente.cljc","^<",19,"^68",["^1O",[[]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^6H","^6T","^9",235,"^6<","~$taoensso.sente/EdnPacker","^;",235,"^6?",0,"^6@",true,"^63",["^1O",["^64",["^1O",[[]]]]],"^6U",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"~$as-event",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",145,"^:",7,"^;",145,"^<",15,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"^11","~$taoensso.sente/as-event","^8","taoensso/sente.cljc","^<",15,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",145,"^6<",["^[",[null,"^6P"]],"^;",145,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",162,"^:",7,"^;",162,"^<",24,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"^11","~$taoensso.sente/server-event-msg?","^8","taoensso/sente.cljc","^<",24,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",162,"^6<","~$boolean","^;",162,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",719,"^:",8,"^;",719,"^<",44,"^62",true,"^63",["^1O",["^64",["^1O",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^62",true,"^11","~$taoensso.sente/send-buffered-server-evs>ws-clients!","^8","taoensso/sente.cljc","^<",44,"^68",["^1O",[["^72","^73","^74","^75"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",719,"^6<","^6E","^;",719,"^6?",4,"^6@",true,"^63",["^1O",["^64",["^1O",[["^72","^73","^74","^75"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^61",null,"^5",["^ ","^62",true,"^8","taoensso/sente.cljc","^<",12,"~:top-fn",["^ ","^6;",false,"~:fixed-arity",3,"^6?",3,"^68",["^1O",[["~$packer","^6="],["^7:","^6=","~$?cb-uuid"]]],"^63",["^1O",[["^7:","^6="],["^7:","^6=","^7;"]]],"^6:",["^1O",[null,null]]],"^:",8,"^9",219,"^;",219,"^63",["^1O",["^64",["^1O",[["^7:","^6="],["^7:","^6=","^7;"]]]]],"^7","clj->prefixed-pstr"],"^62",true,"^11","~$taoensso.sente/pack","^8","taoensso/sente.cljc","^<",12,"^78",["^ ","^6;",false,"^79",3,"^6?",3,"^68",["^1O",[["^7:","^6="],["^7:","^6=","^7;"]]],"^63",["^1O",[["^7:","^6="],["^7:","^6=","^7;"]]],"^6:",["^1O",[null,null]]],"^68",["^1O",[["^7:","^6="],["^7:","^6=","^7;"]]],"^69",null,"^79",3,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"~:methods",[["^ ","^79",2,"^6;",false,"^6O","~$string"],["^ ","^79",3,"^6;",false,"^6O","^7>"]],"^9",219,"^;",219,"^6?",3,"^6@",true,"^63",["^1O",[["^7:","^6="],["^7:","^6=","^7;"]]],"^7","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",803,"^:",10,"^;",803,"^<",20,"^63",["^1O",["^64",["^1O",[["~$chsk","~$ev"],["^7@","^7A","^6B","^6C"],["^7@","^7A","~$opts"]]]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^78",["^ ","^6;",false,"^79",4,"^6?",4,"^68",["^1O",[["^7@","^7A"],["^7@","^7A","^6B","^6C"],["^7@","^7A","^7B"]]],"^63",["^1O",[["^7@","^7A"],["^7@","^7A","^6B","^6C"],["^7@","^7A","^7B"]]],"^6:",["^1O",[null,null,null]]]],"^11","~$taoensso.sente/chsk-send!","^8","taoensso/sente.cljc","^<",20,"^78",["^ ","^6;",false,"^79",4,"^6?",4,"^68",["^1O",[["^7@","^7A"],["^7@","^7A","^6B","^6C"],["^7@","^7A","^7B"]]],"^63",["^1O",[["^7@","^7A"],["^7@","^7A","^6B","^6C"],["^7@","^7A","^7B"]]],"^6:",["^1O",[null,null,null]]],"^68",["^1O",[["^7@","^7A"],["^7@","^7A","^6B","^6C"],["^7@","^7A","^7B"]]],"^69",null,"^79",4,"^6:",["^1O",[null,null,null]],"^:",4,"^6;",false,"^7=",[["^ ","^79",2,"^6;",false,"^6O","^6>"],["^ ","^79",4,"^6;",false,"^6O","^6>"],["^ ","^79",3,"^6;",false,"^6O","^6>"]],"^9",803,"^;",803,"^6?",4,"^6@",true,"^63",["^1O",[["^7@","^7A"],["^7@","^7A","^6B","^6C"],["^7@","^7A","^7B"]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",123,"^:",7,"^;",123,"^<",21,"^63",["^1O",["^64",["^1O",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"^11","~$taoensso.sente/validate-event","^8","taoensso/sente.cljc","^<",21,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",123,"^6<",["^[",["~$cljs.core/IMap","^6E"]],"^;",123,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"~$event?",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",144,"^:",7,"^;",144,"^<",13,"^63",["^1O",["^64",["^1O",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"^11","~$taoensso.sente/event?","^8","taoensso/sente.cljc","^<",13,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",144,"^6<","^70","^;",144,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^11","~$taoensso.sente/event-msg?","^8","taoensso/sente.cljc","^9",1621,"^:",1,"^;",1621,"^<",16,"^5",["^ ","^8","taoensso/sente.cljc","^9",1621,"^:",6,"^;",1621,"^<",16]],"~$make-channel-socket!",["^ ","^11","~$taoensso.sente/make-channel-socket!","^8","taoensso/sente.cljc","^9",1623,"^:",1,"^;",1623,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1623,"^:",6,"^;",1623,"^<",26],"^7","Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details."],"~$make-channel-socket-server!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",269,"^:",7,"^;",269,"^<",34,"^63",["^1O",["^64",["^1O",[["~$web-server-ch-adapter","~$&",[["^ ","~:keys",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$bad-csrf-fn","~$csrf-token-fn","~$handshake-data-fn","^7:"],"~:or",["^ ","^7Q",["^1O",["~$enc/ms","~:secs",25]],"^7T",30,"^7R",["^1O",["^7Z","^7[",20]],"^7W",["^1O",["~$fn",["~$ring-req"],["^1O",["~$or",["^1O",["~:anti-forgery-token","^81"]],["^1O",["~$get-in","^81",["~:session","~:csrf-token"]]],["^1O",["^84","^81",["^85","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^1O",["^84","^81",["^85","__anti-forgery-token"]]]]]]],"^7:","~:edn","^7S",100,"^7X",["^1O",["^80",["^81"],null]],"^7U",["^1O",["^80",["^81"],["^1O",["^84","^81",["^85","~:uid"]]]]],"^7P",["^1O",["~$async/sliding-buffer",1000]],"^7V",["^1O",["^80",["^81"],["^ ","~:status",403,"~:body","Bad CSRF token"]]]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                    CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^78",["^ ","^6;",true,"^79",1,"^6?",1,"^68",[["^1O",["^7N",[["^ ","^7O",["^7P","^7Q","^7R","^7S","^7T","^7U","^7V","^7W","^7X","^7:"],"^7Y",["^ ","^7Q",["^1O",["^7Z","^7[",25]],"^7T",30,"^7R",["^1O",["^7Z","^7[",20]],"^7W",["^1O",["^80",["^81"],["^1O",["^82",["^1O",["^83","^81"]],["^1O",["^84","^81",["^85","^86"]]],["^1O",["^84","^81",["^85","^87"]]],["^1O",["^84","^81",["^85","__anti-forgery-token"]]]]]]],"^7:","^88","^7S",100,"^7X",["^1O",["^80",["^81"],null]],"^7U",["^1O",["^80",["^81"],["^1O",["^84","^81",["^85","^89"]]]]],"^7P",["^1O",["^8:",1000]],"^7V",["^1O",["^80",["^81"],["^ ","^8;",403,"^8<","Bad CSRF token"]]]]]]]]],"^63",["^1O",[["^7N","~$&",[["^ ","^7O",["^7P","^7Q","^7R","^7S","^7T","^7U","^7V","^7W","^7X","^7:"],"^7Y",["^ ","^7Q",["^1O",["^7Z","^7[",25]],"^7T",30,"^7R",["^1O",["^7Z","^7[",20]],"^7W",["^1O",["^80",["^81"],["^1O",["^82",["^1O",["^83","^81"]],["^1O",["^84","^81",["^85","^86"]]],["^1O",["^84","^81",["^85","^87"]]],["^1O",["^84","^81",["^85","__anti-forgery-token"]]]]]]],"^7:","^88","^7S",100,"^7X",["^1O",["^80",["^81"],null]],"^7U",["^1O",["^80",["^81"],["^1O",["^84","^81",["^85","^89"]]]]],"^7P",["^1O",["^8:",1000]],"^7V",["^1O",["^80",["^81"],["^ ","^8;",403,"^8<","Bad CSRF token"]]]]]]]]],"^6:",["^1O",[null]]]],"^11","~$taoensso.sente/make-channel-socket-server!","^8","taoensso/sente.cljc","^<",34,"^78",["^ ","^6;",true,"^79",1,"^6?",1,"^68",[["^1O",["^7N",[["^ ","^7O",["^7P","^7Q","^7R","^7S","^7T","^7U","^7V","^7W","^7X","^7:"],"^7Y",["^ ","^7Q",["^1O",["^7Z","^7[",25]],"^7T",30,"^7R",["^1O",["^7Z","^7[",20]],"^7W",["^1O",["^80",["^81"],["^1O",["^82",["^1O",["^83","^81"]],["^1O",["^84","^81",["^85","^86"]]],["^1O",["^84","^81",["^85","^87"]]],["^1O",["^84","^81",["^85","__anti-forgery-token"]]]]]]],"^7:","^88","^7S",100,"^7X",["^1O",["^80",["^81"],null]],"^7U",["^1O",["^80",["^81"],["^1O",["^84","^81",["^85","^89"]]]]],"^7P",["^1O",["^8:",1000]],"^7V",["^1O",["^80",["^81"],["^ ","^8;",403,"^8<","Bad CSRF token"]]]]]]]]],"^63",["^1O",[["^7N","~$&",[["^ ","^7O",["^7P","^7Q","^7R","^7S","^7T","^7U","^7V","^7W","^7X","^7:"],"^7Y",["^ ","^7Q",["^1O",["^7Z","^7[",25]],"^7T",30,"^7R",["^1O",["^7Z","^7[",20]],"^7W",["^1O",["^80",["^81"],["^1O",["^82",["^1O",["^83","^81"]],["^1O",["^84","^81",["^85","^86"]]],["^1O",["^84","^81",["^85","^87"]]],["^1O",["^84","^81",["^85","__anti-forgery-token"]]]]]]],"^7:","^88","^7S",100,"^7X",["^1O",["^80",["^81"],null]],"^7U",["^1O",["^80",["^81"],["^1O",["^84","^81",["^85","^89"]]]]],"^7P",["^1O",["^8:",1000]],"^7V",["^1O",["^80",["^81"],["^ ","^8;",403,"^8<","Bad CSRF token"]]]]]]]]],"^6:",["^1O",[null]]],"^68",[["^1O",["^7N",[["^ ","^7O",["^7P","^7Q","^7R","^7S","^7T","^7U","^7V","^7W","^7X","^7:"],"^7Y",["^ ","^7Q",["^1O",["^7Z","^7[",25]],"^7T",30,"^7R",["^1O",["^7Z","^7[",20]],"^7W",["^1O",["^80",["^81"],["^1O",["^82",["^1O",["^83","^81"]],["^1O",["^84","^81",["^85","^86"]]],["^1O",["^84","^81",["^85","^87"]]],["^1O",["^84","^81",["^85","__anti-forgery-token"]]]]]]],"^7:","^88","^7S",100,"^7X",["^1O",["^80",["^81"],null]],"^7U",["^1O",["^80",["^81"],["^1O",["^84","^81",["^85","^89"]]]]],"^7P",["^1O",["^8:",1000]],"^7V",["^1O",["^80",["^81"],["^ ","^8;",403,"^8<","Bad CSRF token"]]]]]]]]],"^69",null,"^79",1,"^6:",["^1O",[null]],"^:",1,"^6;",true,"^7=",[["^ ","^79",1,"^6;",true,"^6O","^7F"]],"^9",269,"^6<","^6>","^;",269,"^6?",1,"^6@",true,"^63",["^1O",[["^7N","~$&",[["^ ","^7O",["^7P","^7Q","^7R","^7S","^7T","^7U","^7V","^7W","^7X","^7:"],"^7Y",["^ ","^7Q",["^1O",["^7Z","^7[",25]],"^7T",30,"^7R",["^1O",["^7Z","^7[",20]],"^7W",["^1O",["^80",["^81"],["^1O",["^82",["^1O",["^83","^81"]],["^1O",["^84","^81",["^85","^86"]]],["^1O",["^84","^81",["^85","^87"]]],["^1O",["^84","^81",["^85","__anti-forgery-token"]]]]]]],"^7:","^88","^7S",100,"^7X",["^1O",["^80",["^81"],null]],"^7U",["^1O",["^80",["^81"],["^1O",["^84","^81",["^85","^89"]]]]],"^7P",["^1O",["^8:",1000]],"^7V",["^1O",["^80",["^81"],["^ ","^8;",403,"^8<","Bad CSRF token"]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                    CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$node-target?",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",112,"^:",25,"^;",112,"^<",37,"^62",true],"^62",true,"^11","~$taoensso.sente/node-target?","^8","taoensso/sente.cljc","^<",37,"^:",10,"^9",112,"^;",112,"^6O","^70"],"~$ajax-lite",["^ ","^11","~$taoensso.sente/ajax-lite","^8","taoensso/sente.cljc","^9",786,"^:",10,"^;",786,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",786,"^:",15,"^;",786,"^<",24],"^7","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1406,"^:",11,"^;",1406,"^<",23,"^62",true,"^63",["^1O",["^64",["^1O",[["~$protocol","~$host","~$path","~$type"]]]]]],"^62",true,"^11","~$taoensso.sente/get-chsk-url","^8","taoensso/sente.cljc","^<",23,"^68",["^1O",[["^8C","^8D","^8E","^8F"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",1406,"^6<","^7>","^;",1406,"^6?",4,"^6@",true,"^63",["^1O",["^64",["^1O",[["^8C","^8D","^8E","^8F"]]]]]],"~$-chsk-send!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",792,"^:",7,"^;",792,"^<",18,"~:protocol","~$taoensso.sente/IChSocket","^7",null,"^63",["^1O",["^64",["^1O",[["^7@","^7A","^7B"]]]]]],"^8I","^8J","^11","~$taoensso.sente/-chsk-send!","^8","taoensso/sente.cljc","^<",18,"^68",["^1O",[["^7@","^7A","^7B"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",788,"^6<","^6>","^;",792,"^6?",3,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@","^7A","^7B"]]]]],"^7",null],"~$-chsk-reconnect!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",791,"^:",7,"^;",791,"^<",23,"^8I","^8J","^7",null,"^63",["^1O",["^64",["^1O",[["^7@"]]]]]],"^8I","^8J","^11","~$taoensso.sente/-chsk-reconnect!","^8","taoensso/sente.cljc","^<",23,"^68",["^1O",[["^7@"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",788,"^6<","^6>","^;",791,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@"]]]]],"^7",null],"~$receive-handshake!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",908,"^:",11,"^;",908,"^<",29,"^62",true,"^63",["^1O",["^64",["^1O",[["~$chsk-type","^7@","^6="]]]]]],"^62",true,"^11","~$taoensso.sente/receive-handshake!","^8","taoensso/sente.cljc","^<",29,"^68",["^1O",[["^8O","^7@","^6="]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",908,"^6<","~$cljs.core/Keyword","^;",908,"^6?",3,"^6@",true,"^63",["^1O",["^64",["^1O",[["^8O","^7@","^6="]]]]]],"~$start-client-chsk-router!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1605,"^:",7,"^;",1605,"^<",32,"^63",["^1O",["^64",["^1O",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","^1Q","^7B","^7O",["~$trace-evs?","~$error-handler"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.","^78",["^ ","^6;",true,"^79",2,"^6?",2,"^68",[["^1O",["^8S","^8T",[["^ ","^1Q","^7B","^7O",["^8U","^8V"]]]]]],"^63",["^1O",[["^8S","^8T","~$&",[["^ ","^1Q","^7B","^7O",["^8U","^8V"]]]]]],"^6:",["^1O",[null]]]],"^11","~$taoensso.sente/start-client-chsk-router!","^8","taoensso/sente.cljc","^<",32,"^78",["^ ","^6;",true,"^79",2,"^6?",2,"^68",[["^1O",["^8S","^8T",[["^ ","^1Q","^7B","^7O",["^8U","^8V"]]]]]],"^63",["^1O",[["^8S","^8T","~$&",[["^ ","^1Q","^7B","^7O",["^8U","^8V"]]]]]],"^6:",["^1O",[null]]],"^68",[["^1O",["^8S","^8T",[["^ ","^1Q","^7B","^7O",["^8U","^8V"]]]]]],"^69",null,"^79",2,"^6:",["^1O",[null]],"^:",1,"^6;",true,"^7=",[["^ ","^79",2,"^6;",true,"^6O","~$function"]],"^9",1605,"^6<","^6>","^;",1605,"^6?",2,"^6@",true,"^63",["^1O",[["^8S","^8T","~$&",[["^ ","^1Q","^7B","^7O",["^8U","^8V"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate."],"~$chsk-destroy!",["^ ","^11","~$taoensso.sente/chsk-destroy!","^8","taoensso/sente.cljc","^9",800,"^:",6,"^;",800,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",800,"^:",11,"^;",800,"^<",24],"^7","Deprecated"],"~$->ChAjaxSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^6G",true,"^6H","^6T","^9",1167,"^;",1167,"^63",["^1O",["^64",["^1O",[["~$client-id","~$chs","~$params","^7:","~$url","~$state_","~$instance-handle_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"^11","~$taoensso.sente/->ChAjaxSocket","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^90","^91","^92","^7:","^93","^94","^95","^96","^97","^98","^99"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6G",true,"^6;",false,"^6H","^6T","^9",1167,"^6<","^6L","^;",1167,"^6?",11,"^6@",true,"^63",["^1O",["^64",["^1O",[["^90","^91","^92","^7:","^93","^94","^95","^96","^97","^98","^99"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"~$send-buffered-server-evs>ajax-clients!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",728,"^:",8,"^;",728,"^<",46,"^62",true,"^63",["^1O",["^64",["^1O",[["^72","^73","^74"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^62",true,"^11","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","^8","taoensso/sente.cljc","^<",46,"^68",["^1O",[["^72","^73","^74"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",728,"^6<",["^[",["^6>","^6E"]],"^;",728,"^6?",3,"^6@",true,"^63",["^1O",["^64",["^1O",[["^72","^73","^74"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1160,"^:",16,"^;",1160,"^<",51,"^62",true],"^62",true,"^11","~$taoensso.sente/default-client-side-ajax-timeout-ms","^8","taoensso/sente.cljc","^<",51,"^:",1,"^9",1160,"^;",1160,"^6O","^6>","^7","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^6R",["^[",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^8J","^7F","~$cljs.core/ILookup"]],"^11","^6L","^8","taoensso/sente.cljc","^<",27,"~:type",true,"^:",15,"^6G",true,"^9",1167,"~:record",true,"^;",1167,"^6O","^8X","^6U",["^[",["^9A","^9B","^9C","^9D","^9E","^9F","^9G","^9H","^9I","^9J","^9K","^9L","^9M","^7F","^9N"]]],"~$set-logging-level!",["^ ","^11","~$taoensso.sente/set-logging-level!","^8","taoensso/sente.cljc","^9",1656,"^:",3,"^;",1656,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1656,"^:",8,"^;",1656,"^<",26],"^7","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^6G",true,"^6H","^6T","^9",1339,"^;",1339,"^63",["^1O",["^64",["^1O",[["~$ws-chsk-opts","~$ajax-chsk-opts","^94","~$impl_"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"^11","~$taoensso.sente/->ChAutoSocket","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^9T","^9U","^94","^9V"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6G",true,"^6;",false,"^6H","^6T","^9",1339,"^6<","~$taoensso.sente/ChAutoSocket","^;",1339,"^6?",4,"^6@",true,"^63",["^1O",["^64",["^1O",[["^9T","^9U","^94","^9V"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"~$-chsk-disconnect!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",790,"^:",7,"^;",790,"^<",24,"^8I","^8J","^7",null,"^63",["^1O",["^64",["^1O",[["^7@","^66"]]]]]],"^8I","^8J","^11","~$taoensso.sente/-chsk-disconnect!","^8","taoensso/sente.cljc","^<",24,"^68",["^1O",[["^7@","^66"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",788,"^6<","^6>","^;",790,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@","^66"]]]]],"^7",null],"~$start-chsk-router!",["^ ","^11","~$taoensso.sente/start-chsk-router!","^8","taoensso/sente.cljc","^9",1630,"^:",1,"^;",1630,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",1630,"^:",6,"^;",1630,"^<",24],"^7","Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details."],"~$put-server-event-msg>ch-recv!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",180,"^:",8,"^;",180,"^<",37,"^62",true,"^63",["^1O",["^64",["^1O",[["^8S",["^ ","^1Q","~$ev-msg","^7O",["~$event","~$?reply-fn"]]]]]]],"^7","All server `event-msg`s go through this"],"^62",true,"^11","~$taoensso.sente/put-server-event-msg>ch-recv!","^8","taoensso/sente.cljc","^<",37,"^68",["^1O",[["^8S","~$p__69609"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",180,"^6<",["^[",["^70","^6>","^6E"]],"^;",180,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^8S",["^ ","^1Q","^:2","^7O",["^:3","^:4"]]]]]]],"^7","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",242,"^:",8,"^;",242,"^<",21,"^62",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"^62",true,"^11","~$taoensso.sente/coerce-packer","^8","taoensso/sente.cljc","^<",21,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",242,"^6<",["^[",[null,"^6>","^6W","^6E"]],"^;",242,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",789,"^:",7,"^;",789,"^<",21,"^8I","^8J","^7",null,"^63",["^1O",["^64",["^1O",[["^7@"]]]]]],"^8I","^8J","^11","~$taoensso.sente/-chsk-connect!","^8","taoensso/sente.cljc","^<",21,"^68",["^1O",[["^7@"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",788,"^6<","^6>","^;",789,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@"]]]]],"^7",null],"~$default-edn-packer",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",240,"^:",16,"^;",240,"^<",34,"^62",true],"^62",true,"^11","~$taoensso.sente/default-edn-packer","^8","taoensso/sente.cljc","^<",34,"^:",1,"^9",240,"^;",240,"^6O","^6W"],"~$new-ChAjaxSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1329,"^:",11,"^;",1329,"^<",27,"^62",true,"^63",["^1O",["^64",["^1O",[["^7B","~$csrf-token"]]]]]],"^62",true,"^11","~$taoensso.sente/new-ChAjaxSocket","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^7B","^:>"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",1329,"^6<","^6L","^;",1329,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7B","^:>"]]]]]],"~$receive-buffered-evs!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",893,"^:",11,"^;",893,"^<",32,"^62",true,"^63",["^1O",["^64",["^1O",[["^91","^6="]]]]]],"^62",true,"^11","~$taoensso.sente/receive-buffered-evs!","^8","taoensso/sente.cljc","^<",32,"^68",["^1O",[["^91","^6="]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",893,"^6<","^6E","^;",893,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^91","^6="]]]]]],"~$chsk-connect!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",796,"^:",12,"^;",796,"^<",25,"^63",["^1O",["^64",["^1O",[["^7@"]]]]]],"^11","~$taoensso.sente/chsk-connect!","^8","taoensso/sente.cljc","^<",25,"^68",["^1O",[["^7@"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",6,"^6;",false,"^9",796,"^6<","^6>","^;",796,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@"]]]]]],"~$-start-chsk-router!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1549,"^:",8,"^;",1549,"^<",27,"^62",true,"^63",["^1O",["^64",["^1O",[["~$server?","^8S","^8T","^7B"]]]]]],"^62",true,"^11","~$taoensso.sente/-start-chsk-router!","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^:E","^8S","^8T","^7B"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",1549,"^6<","^8X","^;",1549,"^6?",4,"^6@",true,"^63",["^1O",["^64",["^1O",[["^:E","^8S","^8T","^7B"]]]]]],"~$EdnPacker",["^ ","^9@",0,"^6R",["^[",["^6S"]],"^11","^6W","^8","taoensso/sente.cljc","^<",19,"^9O",true,"^:",10,"^9",235,"^9P",false,"^;",235,"^6O","^8X","^6U",null],"~$ChAutoSocket",["^ ","^9@",4,"^6R",["^[",["^9A","^9B","^9C","^9D","^9E","^9F","^9G","^9H","^9I","^9J","^9K","^9L","^9M","^8J","^7F","^9N"]],"^11","^9X","^8","taoensso/sente.cljc","^<",27,"^9O",true,"^:",15,"^6G",true,"^9",1339,"^9P",true,"^;",1339,"^6O","^8X","^6U",["^[",["^9A","^9B","^9C","^9D","^9E","^9F","^9G","^9H","^9I","^9J","^9K","^9L","^9M","^7F","^9N"]]],"~$cb-error?",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",193,"^:",16,"^;",193,"^<",25,"^63",["^1O",["^64",["^1O",[["~$cb-reply-clj"]]]]]],"^11","~$taoensso.sente/cb-error?","^8","taoensso/sente.cljc","^<",25,"^68",["^1O",[["^:J"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",10,"^6;",false,"^9",193,"^6<","^6>","^;",193,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^:J"]]]]]],"~$unpack",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",201,"^:",8,"^;",201,"^<",14,"^62",true,"^63",["^1O",["^64",["^1O",[["^7:","~$prefixed-pstr"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"^62",true,"^11","~$taoensso.sente/unpack","^8","taoensso/sente.cljc","^<",14,"^68",["^1O",[["^7:","^:M"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",201,"^6<","^6P","^;",201,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7:","^:M"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",797,"^:",12,"^;",797,"^<",28,"^63",["^1O",["^64",["^1O",[["^7@"]]]]]],"^11","~$taoensso.sente/chsk-disconnect!","^8","taoensso/sente.cljc","^<",28,"^68",["^1O",[["^7@"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",6,"^6;",false,"^9",797,"^6<","^6>","^;",797,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@"]]]]]],"~$default-chsk-url-fn",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1660,"^:",11,"^;",1660,"^<",30],"^11","~$taoensso.sente/default-chsk-url-fn","^8","taoensso/sente.cljc","^<",30,"^68",["^1O",[["^8E","~$p__71225","~$websocket?"]]],"^69",null,"^6:",["^1O",[]],"^:",6,"^6;",false,"^9",1660,"^6<","^7>","^;",1660,"^6?",3,"^6@",true,"^63",null,"^7","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1649,"^:",12,"^;",1649,"^<",35,"^63",["^1O",["^64",["^1O",[["~$event-handler","^8S"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"^11","~$taoensso.sente/start-chsk-router-loop!","^8","taoensso/sente.cljc","^<",35,"^68",["^1O",[["^:V","^8S"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",6,"^6;",false,"^9",1649,"^6<","^8X","^;",1649,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^:V","^8S"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",813,"^:",11,"^;",813,"^<",29,"^62",true,"^63",["^1O",["^64",["^1O",[["~$?cb-fn"]]]]]],"^62",true,"^11","~$taoensso.sente/chsk-send->closed!","^8","taoensso/sente.cljc","^<",29,"^68",["^1O",[["^:Y"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",813,"^6<","^70","^;",813,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^:Y"]]]]]],"~$new-ChAutoSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1398,"^:",11,"^;",1398,"^<",27,"^62",true,"^63",["^1O",["^64",["^1O",[["^7B","^:>"]]]]]],"^62",true,"^11","~$taoensso.sente/new-ChAutoSocket","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^7B","^:>"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",1398,"^6<","^9X","^;",1398,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7B","^:>"]]]]]],"~$swap-chsk-state!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",834,"^:",11,"^;",834,"^<",27,"^62",true,"^63",["^1O",["^64",["^1O",[["^7@","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"^62",true,"^11","~$taoensso.sente/swap-chsk-state!","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^7@","~$f"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",834,"^6<",["^[",["^6P","^6E"]],"^;",834,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"~$handshake?",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",903,"^:",11,"^;",903,"^<",21,"^62",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"^62",true,"^11","~$taoensso.sente/handshake?","^8","taoensso/sente.cljc","^<",21,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",903,"^6<","^70","^;",903,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"~$ajax-call",["^ ","^11","~$taoensso.sente/ajax-call","^8","taoensso/sente.cljc","^9",1658,"^:",12,"^;",1658,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1658,"^:",17,"^;",1658,"^<",26],"^7","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1148,"^:",11,"^;",1148,"^<",26,"^62",true,"^63",["^1O",["^64",["^1O",[["^7B","^:>"]]]]]],"^62",true,"^11","~$taoensso.sente/new-ChWebSocket","^8","taoensso/sente.cljc","^<",26,"^68",["^1O",[["^7B","^:>"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",1148,"^6<","~$taoensso.sente/ChWebSocket","^;",1148,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7B","^:>"]]]]]],"~$ChWebSocket",["^ ","^9@",14,"^6R",["^[",["^9A","^9B","^9C","^9D","^9E","^9F","^9G","^9H","^9I","^9J","^9K","^9L","^9M","^8J","^7F","^9N"]],"^11","^;9","^8","taoensso/sente.cljc","^<",26,"^9O",true,"^:",15,"^6G",true,"^9",962,"^9P",true,"^;",962,"^6O","^8X","^6U",["^[",["^9A","^9B","^9C","^9D","^9E","^9F","^9G","^9H","^9I","^9J","^9K","^9L","^9M","^7F","^9N"]]],"~$pull-unused-cb-fn!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",828,"^:",11,"^;",828,"^<",29,"^62",true,"^63",["^1O",["^64",["^1O",[["~$cbs-waiting_","^7;"]]]]]],"^62",true,"^11","~$taoensso.sente/pull-unused-cb-fn!","^8","taoensso/sente.cljc","^<",29,"^68",["^1O",[["^;<","^7;"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",828,"^6<",["^[",["^6>","^6E"]],"^;",828,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^;<","^7;"]]]]]],"~$assert-event",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",137,"^:",7,"^;",137,"^<",19,"^63",["^1O",["^64",["^1O",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"^11","~$taoensso.sente/assert-event","^8","taoensso/sente.cljc","^<",19,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",137,"^6<","^6E","^;",137,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"~$chsk-reconnect!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",798,"^:",12,"^;",798,"^<",27,"^63",["^1O",["^64",["^1O",[["^7@"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"^11","~$taoensso.sente/chsk-reconnect!","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^7@"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",6,"^6;",false,"^9",798,"^6<","^6>","^;",798,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^7@"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1415,"^:",10,"^;",1415,"^<",37,"^63",["^1O",["^64",["^1O",[["^8E","~$?csrf-token","~$&",[["^ ","^7O",["^8F","^8C","^8D","^92","^7P","^7:","^7Q","^90","^98","~$wrap-recv-evs?","^97"],"^1Q","^7B","^7Y",["^ ","^8F","~:auto","^7P",["^1O",["^8:",2048]],"^7:","^88","^90",["^1O",["^82",["^1O",["~:client-uuid","^7B"]],["^1O",["~$enc/uuid-str"]]]],"^;D",true,"^97","~$enc/exp-backoff","^7Q",["^1O",["^7Z","^7[",20]]]],"~$_deprecated-more-opts"]]]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.","^78",["^ ","^6;",true,"^79",2,"^6?",2,"^68",[["^1O",["^8E","^;C",[["^ ","^7O",["^8F","^8C","^8D","^92","^7P","^7:","^7Q","^90","^98","^;D","^97"],"^1Q","^7B","^7Y",["^ ","^8F","^;E","^7P",["^1O",["^8:",2048]],"^7:","^88","^90",["^1O",["^82",["^1O",["^;F","^7B"]],["^1O",["^;G"]]]],"^;D",true,"^97","^;H","^7Q",["^1O",["^7Z","^7[",20]]]],"^;I"]]]],"^63",["^1O",[["^8E","^;C","~$&",[["^ ","^7O",["^8F","^8C","^8D","^92","^7P","^7:","^7Q","^90","^98","^;D","^97"],"^1Q","^7B","^7Y",["^ ","^8F","^;E","^7P",["^1O",["^8:",2048]],"^7:","^88","^90",["^1O",["^82",["^1O",["^;F","^7B"]],["^1O",["^;G"]]]],"^;D",true,"^97","^;H","^7Q",["^1O",["^7Z","^7[",20]]]],"^;I"]]]],"^6:",["^1O",[null]]]],"^11","~$taoensso.sente/make-channel-socket-client!","^8","taoensso/sente.cljc","^<",37,"^78",["^ ","^6;",true,"^79",2,"^6?",2,"^68",[["^1O",["^8E","^;C",[["^ ","^7O",["^8F","^8C","^8D","^92","^7P","^7:","^7Q","^90","^98","^;D","^97"],"^1Q","^7B","^7Y",["^ ","^8F","^;E","^7P",["^1O",["^8:",2048]],"^7:","^88","^90",["^1O",["^82",["^1O",["^;F","^7B"]],["^1O",["^;G"]]]],"^;D",true,"^97","^;H","^7Q",["^1O",["^7Z","^7[",20]]]],"^;I"]]]],"^63",["^1O",[["^8E","^;C","~$&",[["^ ","^7O",["^8F","^8C","^8D","^92","^7P","^7:","^7Q","^90","^98","^;D","^97"],"^1Q","^7B","^7Y",["^ ","^8F","^;E","^7P",["^1O",["^8:",2048]],"^7:","^88","^90",["^1O",["^82",["^1O",["^;F","^7B"]],["^1O",["^;G"]]]],"^;D",true,"^97","^;H","^7Q",["^1O",["^7Z","^7[",20]]]],"^;I"]]]],"^6:",["^1O",[null]]],"^68",[["^1O",["^8E","^;C",[["^ ","^7O",["^8F","^8C","^8D","^92","^7P","^7:","^7Q","^90","^98","^;D","^97"],"^1Q","^7B","^7Y",["^ ","^8F","^;E","^7P",["^1O",["^8:",2048]],"^7:","^88","^90",["^1O",["^82",["^1O",["^;F","^7B"]],["^1O",["^;G"]]]],"^;D",true,"^97","^;H","^7Q",["^1O",["^7Z","^7[",20]]]],"^;I"]]]],"^69",null,"^79",2,"^6:",["^1O",[null]],"^:",4,"^6;",true,"^7=",[["^ ","^79",2,"^6;",true,"^6O",["^[",["^7F","^6E"]]]],"^9",1415,"^6<","^6>","^;",1415,"^6?",2,"^6@",true,"^63",["^1O",[["^8E","^;C","~$&",[["^ ","^7O",["^8F","^8C","^8D","^92","^7P","^7:","^7Q","^90","^98","^;D","^97"],"^1Q","^7B","^7Y",["^ ","^8F","^;E","^7P",["^1O",["^8:",2048]],"^7:","^88","^90",["^1O",["^82",["^1O",["^;F","^7B"]],["^1O",["^;G"]]]],"^;D",true,"^97","^;H","^7Q",["^1O",["^7Z","^7[",20]]]],"^;I"]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms."],"~$cb-chan-as-fn",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",875,"^:",11,"^;",875,"^<",24,"^62",true,"^63",["^1O",["^64",["^1O",[["^6C","^7A"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"^62",true,"^11","~$taoensso.sente/cb-chan-as-fn","^8","taoensso/sente.cljc","^<",24,"^68",["^1O",[["^6C","^7A"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6;",false,"^9",875,"^6<",["^[",[null,"^8X"]],"^;",875,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^6C","^7A"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^6G",true,"^6H","^6I","^9",1339,"^;",1339,"^63",["^1O",["^64",["^1O",[["~$G__70952"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"^11","~$taoensso.sente/map->ChAutoSocket","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^;N"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6G",true,"^6;",false,"^6H","^6I","^9",1339,"^6<","^9X","^;",1339,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^;N"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"~$IChSocket",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",788,"^:",17,"^;",788,"^<",26,"~:protocol-symbol",true,"~:jsdoc",["^1O",["@interface"]],"~:protocol-info",["^ ","^7=",["^ ","^:9",[["^7@"]],"^9Y",[["^7@","^66"]],"^8L",[["^7@"]],"^8H",[["^7@","^7A","^7B"]]]]],"^;Q",true,"^11","^8J","^8","taoensso/sente.cljc","^<",26,"^:",4,"^9",788,"^;S",["^ ","^7=",["^ ","^:9",[["^7@"]],"^9Y",[["^7@","^66"]],"^8L",[["^7@"]],"^8H",[["^7@","^7A","^7B"]]]],"~:info",null,"^;",788,"^6O","^6>","~:impls",["^[",["^;9","^6L","^9X"]],"^;R",["^1O",["@interface"]]],"~$debug-mode?_",["^ ","^11","~$taoensso.sente/debug-mode?_","^8","taoensso/sente.cljc","^9",115,"^:",1,"^;",115,"^<",22,"^5",["^ ","^8","taoensso/sente.cljc","^9",115,"^:",10,"^;",115,"^<",22],"^6O","~$cljs.core/Atom"],"~$cb-success?",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",194,"^:",16,"^;",194,"^<",27,"^63",["^1O",["^64",["^1O",[["^:J"]]]]]],"^11","~$taoensso.sente/cb-success?","^8","taoensso/sente.cljc","^<",27,"^68",["^1O",[["^:J"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",10,"^6;",false,"^9",194,"^6<","^70","^;",194,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^:J"]]]]]],"~$->ChWebSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^6G",true,"^6H","^6T","^9",962,"^;",962,"^63",["^1O",["^64",["^1O",[["^90","^91","^92","^7:","^93","^7Q","^94","^95","~$retry-count_","^96","^97","^;<","~$socket_","~$udt-last-comms_"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"^11","~$taoensso.sente/->ChWebSocket","^8","taoensso/sente.cljc","^<",26,"^68",["^1O",[["^90","^91","^92","^7:","^93","^7Q","^94","^95","^<0","^96","^97","^;<","^<1","^<2"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6G",true,"^6;",false,"^6H","^6T","^9",962,"^6<","^;9","^;",962,"^6?",14,"^6@",true,"^63",["^1O",["^64",["^1O",[["^90","^91","^92","^7:","^93","^7Q","^94","^95","^<0","^96","^97","^;<","^<1","^<2"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"~$expected",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",122,"^:",8,"^;",122,"^<",16,"^62",true,"^63",["^1O",["^64",["^1O",[["^<4","~$x"]]]]]],"^62",true,"^11","~$taoensso.sente/expected","^8","taoensso/sente.cljc","^<",16,"^68",["^1O",[["^<4","~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",122,"^6<","^7F","^;",122,"^6?",2,"^6@",true,"^63",["^1O",["^64",["^1O",[["^<4","~$x"]]]]]],"~$?node-npm-websocket_",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",943,"^:",19,"^;",943,"^<",39,"^62",true],"^62",true,"^11","~$taoensso.sente/?node-npm-websocket_","^8","taoensso/sente.cljc","^<",39,"^:",4,"^9",943,"^;",943,"^6O","~$cljs.core/Delay","^7","nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm"],"~$start-server-chsk-router!",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1588,"^:",7,"^;",1588,"^<",32,"^63",["^1O",["^64",["^1O",[["^8S","^8T","~$&",[["^ ","^1Q","^7B","^7O",["^8U","^8V","~$simple-auto-threading?"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).","^78",["^ ","^6;",true,"^79",2,"^6?",2,"^68",[["^1O",["^8S","^8T",[["^ ","^1Q","^7B","^7O",["^8U","^8V","^<:"]]]]]],"^63",["^1O",[["^8S","^8T","~$&",[["^ ","^1Q","^7B","^7O",["^8U","^8V","^<:"]]]]]],"^6:",["^1O",[null]]]],"^11","~$taoensso.sente/start-server-chsk-router!","^8","taoensso/sente.cljc","^<",32,"^78",["^ ","^6;",true,"^79",2,"^6?",2,"^68",[["^1O",["^8S","^8T",[["^ ","^1Q","^7B","^7O",["^8U","^8V","^<:"]]]]]],"^63",["^1O",[["^8S","^8T","~$&",[["^ ","^1Q","^7B","^7O",["^8U","^8V","^<:"]]]]]],"^6:",["^1O",[null]]],"^68",[["^1O",["^8S","^8T",[["^ ","^1Q","^7B","^7O",["^8U","^8V","^<:"]]]]]],"^69",null,"^79",2,"^6:",["^1O",[null]],"^:",1,"^6;",true,"^7=",[["^ ","^79",2,"^6;",true,"^6O","^8X"]],"^9",1588,"^6<","^6>","^;",1588,"^6?",2,"^6@",true,"^63",["^1O",[["^8S","^8T","~$&",[["^ ","^1Q","^7B","^7O",["^8U","^8V","^<:"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default)."],"~$client-event-msg?",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",151,"^:",7,"^;",151,"^<",24,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"^11","~$taoensso.sente/client-event-msg?","^8","taoensso/sente.cljc","^<",24,"^68",["^1O",[["~$x"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",1,"^6;",false,"^9",151,"^6<","^70","^;",151,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^61",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^6G",true,"^6H","^6I","^9",962,"^;",962,"^63",["^1O",["^64",["^1O",[["~$G__70639"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"^11","~$taoensso.sente/map->ChWebSocket","^8","taoensso/sente.cljc","^<",26,"^68",["^1O",[["^<?"]]],"^69",null,"^6:",["^1O",[null,null]],"^:",4,"^6G",true,"^6;",false,"^6H","^6I","^9",962,"^6<","^;9","^;",962,"^6?",1,"^6@",true,"^63",["^1O",["^64",["^1O",[["^<?"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"~$next-idx!",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",262,"^:",16,"^;",262,"^<",25,"^62",true],"^62",true,"^11","~$taoensso.sente/next-idx!","^8","taoensso/sente.cljc","^<",25,"^:",1,"^9",262,"^;",262,"^6O","^8X"]],"^1B",["^ ","^P","^P","^16","^N","^19","^1:","^1;","^1;","^1:","^1:","^L","^L","^1=","^R","^N","^N","^1L","^P","^R","^R","^1M","^L"],"~:cljs.analyzer/constants",["^ ","^1@",["^[",["~:curr-xhr_","~:chsk/closed","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:requested-disconnect","~:on-msg","~:flush?","~:cb","~:errors","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","~:given","^98","^;<","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","^;F","~:handshake","~:ch-recv","~:client-id","~:ev","^94","~:X-CSRF-Token","^9U","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^8I","~:wrong-id-type","~:newly-connected","~:connected-uids","^7Q","^99","~:method","~:simple-auto-threading?","~:pathname","~:ws-chsk-opts","^96","^89","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:udt-last-comms_","~:value","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^9V","^90","^7[","~:handshake?","~:params","~:udt-next-reconnect","~:chsk/close","~:recur","^9O","~:chsk/state","~:unnamespaced-id","~:debug","~:debug/timeout","~:state","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:vector","^9T","~:udt","^7:","^91","~:chsk/bad-package","~:ajax-get-or-ws-handshake-fn","~:headers","~:internal","^<2","~:error-handler","~:downgrading-ws-to-ajax","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^92","~:event","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:keyword","^8;","~:socket_","^<0","~:ever-opened?","~:ppstr","~:id","~:open?","~:expected","^88","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","~:lp-timeout","~:ring-req","~:chsk/timeout","~:http","~:handled","~:wrap-recv-evs?","~:?data","~:post","~:instance-handle_","~:chsk","^86","~:f","~:bad-csrf-fn","~:error","~:unexpected","~:send-fn","~:wrong-length","^83","~:on-error","~:timeout","~:resp-type","^97","~:last-close","~:requested-reconnect","~:ajax-opts","~:cbs-waiting_","~:actual","^8<","~:init?","^<1","^87","~:last-ws-close","^;E","~:on-open","^93","~:timeout-ms","~:chsk/handshake","^95","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^85","~:ajax-chsk-opts","~:text","~:clean?","~:namespaced-keyword"]],"~:order",["^>H","^?7","^9O","^=H","^>?","^=[","^>[","^=6","^=9","^>B","^=S","^?H","^<S","^<N","^=Z","^<[","^=V","^>=","^>F","^>S","^>Z","^<F","^=0","^=;","^89","^>N","^=C","~:f~:ns-specs",["^ "],"~:ns-spec-vars",["^[",[]],"~:compiler-options",["^28",[["^?L","~:static-fns"],true,["^?L","~:shadow-tweaks"],null,["^?L","~:elide-asserts"],false,["^?L","~:optimize-constants"],null,["^?L","^1["],null,["^?L","~:external-config"],null,["^?L","~:tooling-config"],null,["^?L","~:emit-constants"],null,["^?L","~:load-tests"],null,["^?L","~:form-size-threshold"],null,["^?L","~:infer-externs"],true,["^?L","^21"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^?L","~:fn-invoke-direct"],null,["^?L","~:source-map"],"/dev/null"]]]