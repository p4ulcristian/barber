["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-redux/lib/hooks/useStore.js"],"~:js","shadow$provide.module$node_modules$react_redux$lib$hooks$useStore=function(global,require,module,exports){function createStoreHook(context){void 0===context&&(context=_Context.ReactReduxContext);var useReduxContext=context===_Context.ReactReduxContext?_useReduxContext2.useReduxContext:function(){return(0,_react.useContext)(context)};return function(){return useReduxContext().store}}exports.__esModule=!0;exports.createStoreHook=createStoreHook;exports.useStore=void 0;var _react=require(\"module$node_modules$react$index\"),\n_Context=require(\"module$node_modules$react_redux$lib$components$Context\"),_useReduxContext2=require(\"module$node_modules$react_redux$lib$hooks$useReduxContext\");global=createStoreHook();exports.useStore=global}","~:source","shadow$provide[\"module$node_modules$react_redux$lib$hooks$useStore\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.createStoreHook = createStoreHook;\nexports.useStore = void 0;\n\nvar _react = require(\"react\");\n\nvar _Context = require(\"../components/Context\");\n\nvar _useReduxContext2 = require(\"./useReduxContext\");\n\n/**\n * Hook factory, which creates a `useStore` hook bound to a given context.\n *\n * @param {Function} [context=ReactReduxContext] Context passed to your `<Provider>`.\n * @returns {Function} A `useStore` hook bound to the specified context.\n */\nfunction createStoreHook(context) {\n  if (context === void 0) {\n    context = _Context.ReactReduxContext;\n  }\n\n  var useReduxContext = context === _Context.ReactReduxContext ? _useReduxContext2.useReduxContext : function () {\n    return (0, _react.useContext)(context);\n  };\n  return function useStore() {\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store;\n\n    return store;\n  };\n}\n/**\n * A hook to access the redux store.\n *\n * @returns {any} the redux store\n *\n * @example\n *\n * import React from 'react'\n * import { useStore } from 'react-redux'\n *\n * export const ExampleComponent = () => {\n *   const store = useStore()\n *   return <div>{store.getState()}</div>\n * }\n */\n\n\nvar useStore = createStoreHook();\nexports.useStore = useStore;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_redux$lib$components$Context","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$react_redux$lib$hooks$useReduxContext"]],"~:properties",["^5",["__esModule","useStore","createStoreHook"]],"~:compiled-at",1578749448696,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_redux$lib$hooks$useStore.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmB/GC,QAASA,gBAAe,CAACC,OAAD,CAAU,CAChB,IAAK,EAArB,GAAIA,OAAJ,GACEA,OADF,CACYC,QAAAC,kBADZ,CAIA,KAAIC,gBAAkBH,OAAA,GAAYC,QAAAC,kBAAZ,CAAyCE,iBAAAD,gBAAzC,CAA6E,QAAS,EAAG,CAC7G,MAAO,CAAC,CAAA,CAAGE,MAAAC,WAAJ,EAAuBN,OAAvB,CADsG,CAG/G,OAAOO,SAAiB,EAAG,CAIzB,MAHuBJ,gBAAAK,EACXC,MAFa,CARK,CAhBlCX,OAAAY,WAAA,CAAqB,CAAA,CACrBZ,QAAAC,gBAAA,CAA0BA,eAC1BD,QAAAS,SAAA,CAAmB,IAAK,EAExB,KAAIF,OAAST,OAAA,CAAQ,iCAAR,CAAb;AAEIK,SAAWL,OAAA,CAAQ,wDAAR,CAFf,CAIIQ,kBAAoBR,OAAA,CAAQ,2DAAR,CAwCpBW,OAAAA,CAAWR,eAAA,EACfD,QAAAS,SAAA,CAAmBA,MApD4F;\",\n\"sources\":[\"node_modules/react-redux/lib/hooks/useStore.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_redux$lib$hooks$useStore\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.createStoreHook = createStoreHook;\\nexports.useStore = void 0;\\n\\nvar _react = require(\\\"react\\\");\\n\\nvar _Context = require(\\\"../components/Context\\\");\\n\\nvar _useReduxContext2 = require(\\\"./useReduxContext\\\");\\n\\n/**\\n * Hook factory, which creates a `useStore` hook bound to a given context.\\n *\\n * @param {Function} [context=ReactReduxContext] Context passed to your `<Provider>`.\\n * @returns {Function} A `useStore` hook bound to the specified context.\\n */\\nfunction createStoreHook(context) {\\n  if (context === void 0) {\\n    context = _Context.ReactReduxContext;\\n  }\\n\\n  var useReduxContext = context === _Context.ReactReduxContext ? _useReduxContext2.useReduxContext : function () {\\n    return (0, _react.useContext)(context);\\n  };\\n  return function useStore() {\\n    var _useReduxContext = useReduxContext(),\\n        store = _useReduxContext.store;\\n\\n    return store;\\n  };\\n}\\n/**\\n * A hook to access the redux store.\\n *\\n * @returns {any} the redux store\\n *\\n * @example\\n *\\n * import React from 'react'\\n * import { useStore } from 'react-redux'\\n *\\n * export const ExampleComponent = () => {\\n *   const store = useStore()\\n *   return <div>{store.getState()}</div>\\n * }\\n */\\n\\n\\nvar useStore = createStoreHook();\\nexports.useStore = useStore;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"createStoreHook\",\"context\",\"_Context\",\"ReactReduxContext\",\"useReduxContext\",\"_useReduxContext2\",\"_react\",\"useContext\",\"useStore\",\"_useReduxContext\",\"store\",\"__esModule\"]\n}\n"]