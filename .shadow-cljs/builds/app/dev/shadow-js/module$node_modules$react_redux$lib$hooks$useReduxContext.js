["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-redux/lib/hooks/useReduxContext.js"],"~:js","shadow$provide.module$node_modules$react_redux$lib$hooks$useReduxContext=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");exports.__esModule=!0;exports.useReduxContext=function(){var contextValue=(0,_react.useContext)(_Context.ReactReduxContext);(0,_invariant[\"default\"])(contextValue,\"could not find react-redux context value; please ensure the component is wrapped in a \\x3cProvider\\x3e\");return contextValue};var _react=require(\"module$node_modules$react$index\"),\n_invariant=global(require(\"module$node_modules$invariant$browser\")),_Context=require(\"module$node_modules$react_redux$lib$components$Context\")}","~:source","shadow$provide[\"module$node_modules$react_redux$lib$hooks$useReduxContext\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.useReduxContext = useReduxContext;\n\nvar _react = require(\"react\");\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _Context = require(\"../components/Context\");\n\n/**\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @returns {any} the value of the `ReactReduxContext`\n *\n * @example\n *\n * import React from 'react'\n * import { useReduxContext } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const { store } = useReduxContext()\n *   return <div>{store.getState()}</div>\n * }\n */\nfunction useReduxContext() {\n  var contextValue = (0, _react.useContext)(_Context.ReactReduxContext);\n  (0, _invariant[\"default\"])(contextValue, 'could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  return contextValue;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$invariant$browser","~$module$node_modules$react_redux$lib$components$Context","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["useReduxContext","__esModule"]],"~:compiled-at",1578749448696,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_redux$lib$hooks$useReduxContext.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BE,QAAAE,WAAA,CAAqB,CAAA,CACrBF,QAAAG,gBAAA,CAwBAA,QAAwB,EAAG,CACzB,IAAIC,aAAe,CAAC,CAAA,CAAGC,MAAAC,WAAJ,EAAuBC,QAAAC,kBAAvB,CACnB,EAAC,CAAA,CAAGC,UAAA,CAAW,SAAX,CAAJ,EAA2BL,YAA3B,CAAyC,wGAAzC,CACA,OAAOA,aAHkB,CAtB3B,KAAIC,OAASP,OAAA,CAAQ,iCAAR,CAAb;AAEIW,WAAaR,MAAA,CAAuBH,OAAA,CAAQ,uCAAR,CAAvB,CAFjB,CAIIS,SAAWT,OAAA,CAAQ,wDAAR,CAZuG;\",\n\"sources\":[\"node_modules/react-redux/lib/hooks/useReduxContext.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_redux$lib$hooks$useReduxContext\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nexports.__esModule = true;\\nexports.useReduxContext = useReduxContext;\\n\\nvar _react = require(\\\"react\\\");\\n\\nvar _invariant = _interopRequireDefault(require(\\\"invariant\\\"));\\n\\nvar _Context = require(\\\"../components/Context\\\");\\n\\n/**\\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\\n * hook that you should usually not need to call directly.\\n *\\n * @returns {any} the value of the `ReactReduxContext`\\n *\\n * @example\\n *\\n * import React from 'react'\\n * import { useReduxContext } from 'react-redux'\\n *\\n * export const CounterComponent = ({ value }) => {\\n *   const { store } = useReduxContext()\\n *   return <div>{store.getState()}</div>\\n * }\\n */\\nfunction useReduxContext() {\\n  var contextValue = (0, _react.useContext)(_Context.ReactReduxContext);\\n  (0, _invariant[\\\"default\\\"])(contextValue, 'could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\\n  return contextValue;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"__esModule\",\"useReduxContext\",\"contextValue\",\"_react\",\"useContext\",\"_Context\",\"ReactReduxContext\",\"_invariant\"]\n}\n"]