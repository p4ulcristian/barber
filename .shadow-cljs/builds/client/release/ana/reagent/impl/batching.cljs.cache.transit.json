["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.batching');\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.batching !== 'undefined') && (typeof reagent.impl.batching.mount_count !== 'undefined')){\n} else {\nreagent.impl.batching.mount_count = (0);\n}\nreagent.impl.batching.next_mount_count = (function reagent$impl$batching$next_mount_count(){\nreturn reagent.impl.batching.mount_count = (reagent.impl.batching.mount_count + (1));\n});\nreagent.impl.batching.fake_raf = (function reagent$impl$batching$fake_raf(f){\nreturn setTimeout(f,(16));\n});\nreagent.impl.batching.next_tick = (((!(reagent.impl.util.is_client)))?reagent.impl.batching.fake_raf:(function (){var w = window;\nvar or__4131__auto__ = w.requestAnimationFrame;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = w.webkitRequestAnimationFrame;\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nvar or__4131__auto____$2 = w.mozRequestAnimationFrame;\nif(cljs.core.truth_(or__4131__auto____$2)){\nreturn or__4131__auto____$2;\n} else {\nvar or__4131__auto____$3 = w.msRequestAnimationFrame;\nif(cljs.core.truth_(or__4131__auto____$3)){\nreturn or__4131__auto____$3;\n} else {\nreturn reagent.impl.batching.fake_raf;\n}\n}\n}\n}\n})());\nreagent.impl.batching.compare_mount_order = (function reagent$impl$batching$compare_mount_order(c1,c2){\nreturn (c2.cljsMountOrder - c1.cljsMountOrder);\n});\nreagent.impl.batching.run_queue = (function reagent$impl$batching$run_queue(a){\na.sort(reagent.impl.batching.compare_mount_order);\n\nvar n__4607__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4607__auto__)){\nvar c_3160 = (a[i]);\nif(c_3160.cljsIsDirty === true){\nc_3160.forceUpdate();\n} else {\n}\n\nvar G__3161 = (i + (1));\ni = G__3161;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.batching !== 'undefined') && (typeof reagent.impl.batching.ratom_flush !== 'undefined')){\n} else {\nreagent.impl.batching.ratom_flush = (function reagent$impl$batching$ratom_flush(){\nreturn null;\n});\n}\nreagent.impl.batching.run_funs = (function reagent$impl$batching$run_funs(fs){\nvar n__4607__auto__ = fs.length;\nvar i = (0);\nwhile(true){\nif((i < n__4607__auto__)){\nvar fexpr__3147_3162 = (fs[i]);\n(fexpr__3147_3162.cljs$core$IFn$_invoke$arity$0 ? fexpr__3147_3162.cljs$core$IFn$_invoke$arity$0() : fexpr__3147_3162.call(null));\n\nvar G__3163 = (i + (1));\ni = G__3163;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.impl.batching.enqueue = (function reagent$impl$batching$enqueue(queue,fs,f){\n\nfs.push(f);\n\nreturn queue.schedule();\n});\n\n/**\n* @constructor\n*/\nreagent.impl.batching.RenderQueue = (function (scheduled_QMARK_){\nthis.scheduled_QMARK_ = scheduled_QMARK_;\n});\nreagent.impl.batching.RenderQueue.prototype.flush_after_render = (function (){\nvar self__ = this;\nvar this$ = this;\nvar temp__5739__auto__ = this$.afterRender;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar fs = temp__5739__auto__;\nthis$.afterRender = null;\n\nreturn reagent.impl.batching.run_funs(fs);\n}\n});\n\nreagent.impl.batching.RenderQueue.prototype.queue_render = (function (c){\nvar self__ = this;\nvar this$ = this;\nif((this$.componentQueue == null)){\nthis$.componentQueue = [];\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.componentQueue,c);\n});\n\nreagent.impl.batching.RenderQueue.prototype.schedule = (function (){\nvar self__ = this;\nvar this$ = this;\nif(self__.scheduled_QMARK_){\nreturn null;\n} else {\nself__.scheduled_QMARK_ = true;\n\nvar G__3153 = ((function (this$){\nreturn (function (){\nreturn this$.run_queues();\n});})(this$))\n;\nreturn (reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1(G__3153) : reagent.impl.batching.next_tick.call(null,G__3153));\n}\n});\n\nreagent.impl.batching.RenderQueue.prototype.flush_before_flush = (function (){\nvar self__ = this;\nvar this$ = this;\nvar temp__5739__auto__ = this$.beforeFlush;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar fs = temp__5739__auto__;\nthis$.beforeFlush = null;\n\nreturn reagent.impl.batching.run_funs(fs);\n}\n});\n\nreagent.impl.batching.RenderQueue.prototype.flush_queues = (function (){\nvar self__ = this;\nvar this$ = this;\nthis$.flush_before_flush();\n\nreagent.impl.batching.ratom_flush();\n\nthis$.flush_render();\n\nreturn this$.flush_after_render();\n});\n\nreagent.impl.batching.RenderQueue.prototype.run_queues = (function (){\nvar self__ = this;\nvar this$ = this;\nself__.scheduled_QMARK_ = false;\n\nreturn this$.flush_queues();\n});\n\nreagent.impl.batching.RenderQueue.prototype.add_before_flush = (function (f){\nvar self__ = this;\nvar this$ = this;\nif((this$.beforeFlush == null)){\nthis$.beforeFlush = [];\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.beforeFlush,f);\n});\n\nreagent.impl.batching.RenderQueue.prototype.add_after_render = (function (f){\nvar self__ = this;\nvar this$ = this;\nif((this$.afterRender == null)){\nthis$.afterRender = [];\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.afterRender,f);\n});\n\nreagent.impl.batching.RenderQueue.prototype.flush_render = (function (){\nvar self__ = this;\nvar this$ = this;\nvar temp__5739__auto__ = this$.componentQueue;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar fs = temp__5739__auto__;\nthis$.componentQueue = null;\n\nreturn reagent.impl.batching.run_queue(fs);\n}\n});\n\nreagent.impl.batching.RenderQueue.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"scheduled?\",\"scheduled?\",579986609,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.impl.batching.RenderQueue.cljs$lang$type = true;\n\nreagent.impl.batching.RenderQueue.cljs$lang$ctorStr = \"reagent.impl.batching/RenderQueue\";\n\nreagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"reagent.impl.batching/RenderQueue\");\n});\n\n/**\n * Positional factory function for reagent.impl.batching/RenderQueue.\n */\nreagent.impl.batching.__GT_RenderQueue = (function reagent$impl$batching$__GT_RenderQueue(scheduled_QMARK_){\nreturn (new reagent.impl.batching.RenderQueue(scheduled_QMARK_));\n});\n\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.batching !== 'undefined') && (typeof reagent.impl.batching.render_queue !== 'undefined')){\n} else {\nreagent.impl.batching.render_queue = reagent.impl.batching.__GT_RenderQueue(false);\n}\nreagent.impl.batching.flush = (function reagent$impl$batching$flush(){\nreturn reagent.impl.batching.render_queue.flush_queues();\n});\nreagent.impl.batching.flush_after_render = (function reagent$impl$batching$flush_after_render(){\nreturn reagent.impl.batching.render_queue.flush_after_render();\n});\nreagent.impl.batching.queue_render = (function reagent$impl$batching$queue_render(c){\nif(cljs.core.truth_(c.cljsIsDirty)){\nreturn null;\n} else {\nc.cljsIsDirty = true;\n\nreturn reagent.impl.batching.render_queue.queue_render(c);\n}\n});\nreagent.impl.batching.mark_rendered = (function reagent$impl$batching$mark_rendered(c){\nreturn c.cljsIsDirty = false;\n});\nreagent.impl.batching.do_before_flush = (function reagent$impl$batching$do_before_flush(f){\nreturn reagent.impl.batching.render_queue.add_before_flush(f);\n});\nreagent.impl.batching.do_after_render = (function reagent$impl$batching$do_after_render(f){\nreturn reagent.impl.batching.render_queue.add_after_render(f);\n});\nreagent.impl.batching.schedule = (function reagent$impl$batching$schedule(){\nif(reagent.impl.batching.render_queue.scheduled_QMARK_ === false){\nreturn reagent.impl.batching.render_queue.schedule();\n} else {\nreturn null;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/batching.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flatpickr","~$module$node_modules$react_flatpickr$build$index"],"~:use-macros",["^ ","~$assert-some","~$reagent.debug"],"~:excludes",["~#set",["~$flush"]],"~:name","~$reagent.impl.batching","~:op","~:ns","~:imports",null,"~:requires",["^ ","^F","^F","~$reagent.impl.util","^P","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$is-client","^P"],"~:require-macros",["^ ","^F","^F","^Q","^Q"],"~:form",["~#list",["~$ns","^K",["^Y",["~:refer-clojure","~:exclude",["^I"]]],["^Y",["^T",["^F","~:refer-macros",["^E"]],["^P","~:refer",["^V"]]]]]],"~:flags",["^ ","^T",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^R","^Q","^F","^P"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/batching.cljs"],"~:compiled-at",1579151945507,"~:resource-name","reagent/impl/batching.cljs","~:warnings",[],"~:source","(ns reagent.impl.batching\n  (:refer-clojure :exclude [flush])\n  (:require [reagent.debug :refer-macros [assert-some]]\n            [reagent.impl.util :refer [is-client]]))\n\n;;; Update batching\n\n(defonce mount-count 0)\n\n(defn next-mount-count []\n  (set! mount-count (inc mount-count)))\n\n(defn fake-raf [f]\n  (js/setTimeout f 16))\n\n(def next-tick\n  (if-not is-client\n    fake-raf\n    (let [w js/window]\n      (or (.-requestAnimationFrame w)\n          (.-webkitRequestAnimationFrame w)\n          (.-mozRequestAnimationFrame w)\n          (.-msRequestAnimationFrame w)\n          fake-raf))))\n\n(defn compare-mount-order\n  [c1 c2]\n  ;; Mount order is now set in DidMount method.  I.e. the\n  ;; top-most component is mounted last and gets largest\n  ;; number. This is reverse compared to WillMount where method\n  ;; for top component gets called first.\n  (- (.-cljsMountOrder c2)\n     (.-cljsMountOrder c1)))\n\n(defn run-queue [a]\n  ;; sort components by mount order, to make sure parents\n  ;; are rendered before children\n  (.sort a compare-mount-order)\n  (dotimes [i (alength a)]\n    (let [c (aget a i)]\n      (when (true? (.-cljsIsDirty c))\n        (.forceUpdate c)))))\n\n\n;; Set from ratom.cljs\n(defonce ratom-flush (fn []))\n\n(defn run-funs [fs]\n  (dotimes [i (alength fs)]\n    ((aget fs i))))\n\n(defn enqueue [queue fs f]\n  (assert-some f \"Enqueued function\")\n  (.push fs f)\n  (.schedule queue))\n\n(deftype RenderQueue [^:mutable ^boolean scheduled?]\n  Object\n  (schedule [this]\n    (when-not scheduled?\n      (set! scheduled? true)\n      (next-tick #(.run-queues this))))\n\n  (queue-render [this c]\n    (when (nil? (.-componentQueue this))\n      (set! (.-componentQueue this) (array)))\n    (enqueue this (.-componentQueue this) c))\n\n  (add-before-flush [this f]\n    (when (nil? (.-beforeFlush this))\n      (set! (.-beforeFlush this) (array)))\n    (enqueue this (.-beforeFlush this) f))\n\n  (add-after-render [this f]\n    (when (nil? (.-afterRender this))\n      (set! (.-afterRender this) (array)))\n    (enqueue this (.-afterRender this) f))\n\n  (run-queues [this]\n    (set! scheduled? false)\n    (.flush-queues this))\n\n  (flush-before-flush [this]\n    (when-some [fs (.-beforeFlush this)]\n      (set! (.-beforeFlush this) nil)\n      (run-funs fs)))\n\n  (flush-render [this]\n    (when-some [fs (.-componentQueue this)]\n      (set! (.-componentQueue this) nil)\n      (run-queue fs)))\n\n  (flush-after-render [this]\n    (when-some [fs (.-afterRender this)]\n      (set! (.-afterRender this) nil)\n      (run-funs fs)))\n\n  (flush-queues [this]\n    (.flush-before-flush this)\n    (ratom-flush)\n    (.flush-render this)\n    (.flush-after-render this)))\n\n(defonce render-queue (->RenderQueue false))\n\n(defn flush []\n  (.flush-queues render-queue))\n\n(defn flush-after-render []\n  (.flush-after-render render-queue))\n\n(defn queue-render [c]\n  (when-not (.-cljsIsDirty c)\n    (set! (.-cljsIsDirty c) true)\n    (.queue-render render-queue c)))\n\n(defn mark-rendered [c]\n  (set! (.-cljsIsDirty c) false))\n\n(defn do-before-flush [f]\n  (.add-before-flush render-queue f))\n\n(defn do-after-render [f]\n  (.add-after-render render-queue f))\n\n(defn schedule []\n  (when (false? (.-scheduled? render-queue))\n    (.schedule render-queue)))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.impl","js/reagent.impl.batching","js/reagent.impl.batching.mount-count","reagent.impl.batching/mount-count","reagent.impl.batching/next-mount-count","reagent.impl.batching/fake-raf","f","js/setTimeout","reagent.impl.batching/next-tick","reagent.impl.util/is-client","w","js/window","or__4131__auto__","reagent.impl.batching/compare-mount-order","c1","c2","reagent.impl.batching/run-queue","a","n__4607__auto__","i","c","js/reagent.impl.batching.ratom-flush","reagent.impl.batching/ratom-flush","reagent.impl.batching/run-funs","fs","fexpr__3147","reagent.impl.batching/enqueue","queue","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","reagent.impl.batching/RenderQueue","reagent.impl.batching/->RenderQueue","scheduled?","this","G__3153","temp__5739__auto__","js/reagent.impl.batching.render-queue","reagent.impl.batching/render-queue","reagent.impl.batching/flush","reagent.impl.batching/flush-after-render","reagent.impl.batching/queue-render","reagent.impl.batching/mark-rendered","reagent.impl.batching/do-before-flush","reagent.impl.batching/do-after-render","reagent.impl.batching/schedule"]]],"~:cache-keys",["~#cmap",[["^17","reagent/impl/batching.cljs"],[1570993393169,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^R","^Q","^F","^P"]]],["^17","goog/math/math.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","~$goog.array","~$goog.asserts"]]],["^17","goog/array/array.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^1I"]]],["^17","reagent/impl/util.cljs"],[1570993393169,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^Q","^F","~$clojure.string"]]],["^17","goog/debug/error.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],["^17","goog/dom/nodetype.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],["^17","goog/object/object.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],"~:SHADOW-TIMESTAMP",[1578682820000,1565093957000],["^17","goog/math/long.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^1I","~$goog.reflect"]]],["^17","goog/string/internal.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],["^17","goog/functions/functions.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],["^17","goog/structs/map.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^17","goog/asserts/asserts.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^17","goog/uri/uri.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^1H","^1I","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^17","goog/base.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",[]]],["^17","goog/structs/structs.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^1H","~$goog.object"]]],["^17","clojure/string.cljs"],[1565093957209,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^Q","^1Q","~$goog.string.StringBuffer"]]],["^17","goog/string/string.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","~$goog.string.internal"]]],["^17","goog/reflect/reflect.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],["^17","goog/string/stringbuffer.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],["^17","goog/iter/iter.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^1H","^1I","~$goog.functions","~$goog.math"]]],["^17","cljs/core.cljs"],[1565093957209,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["~$goog.math.Long","~$goog.math.Integer","^1Q","^1W","^1H","~$goog.Uri","^1X"]]],["^17","reagent/debug.cljs"],[1570993393169,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^Q"]]],["^17","goog/math/integer.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R"]]],["^17","goog/uri/utils.js"],[1570979810632,"^1D",["^ ","^1E",null,"^1F",["^H",[]],"^1G",["^R","^1H","^1I","^1Q"]]]]],"~:clj-info",["^ ","jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1565093954000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1565096504000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1565093957000,"jar:file:/Users/paul/.m2/repository/reagent/reagent/0.9.0-rc1/reagent-0.9.0-rc1.jar!/reagent/debug.clj",1570993393000,"jar:file:/Users/paul/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1570979808000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1565096504000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/batching.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F"],"^G",["^H",["^I"]],"~:shadow/js-access-properties",["^H",["flush-after-render","add-after-render","flush-render","queue-render","schedule","flush-queues","flush-before-flush","add-before-flush","run-queues"]],"^J","^K","^N",null,"^O",["^ ","^F","^F","^P","^P","^Q","^Q","^R","^R"],"^S",["^H",["^T"]],"~:shadow/js-access-global",["^H",["window","setTimeout"]],"^U",["^ ","^V","^P"],"~:defs",["^ ","~$fake-raf",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",13,"^8",7,"^9",13,"^:",15,"~:arglists",["^Y",["~$quote",["^Y",[["~$f"]]]]]],"^J","~$reagent.impl.batching/fake-raf","^6","reagent/impl/batching.cljs","^:",15,"~:method-params",["^Y",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^8",1,"~:variadic?",false,"^7",13,"~:ret-tag","~$js","^9",13,"~:max-fixed-arity",1,"~:fn-var",true,"^2S",["^Y",["^2T",["^Y",[["~$f"]]]]]],"~$run-funs",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",48,"^8",7,"^9",48,"^:",15,"^2S",["^Y",["^2T",["^Y",[["~$fs"]]]]]],"^J","~$reagent.impl.batching/run-funs","^6","reagent/impl/batching.cljs","^:",15,"^2V",["^Y",[["^33"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",48,"^2Z","~$clj-nil","^9",48,"^30",1,"^31",true,"^2S",["^Y",["^2T",["^Y",[["^33"]]]]]],"~$do-before-flush",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",120,"^8",7,"^9",120,"^:",22,"^2S",["^Y",["^2T",["^Y",[["~$f"]]]]]],"^J","~$reagent.impl.batching/do-before-flush","^6","reagent/impl/batching.cljs","^:",22,"^2V",["^Y",[["~$f"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",120,"^2Z","~$any","^9",120,"^30",1,"^31",true,"^2S",["^Y",["^2T",["^Y",[["~$f"]]]]]],"~$flush-after-render",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",109,"^8",7,"^9",109,"^:",25,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"^J","~$reagent.impl.batching/flush-after-render","^6","reagent/impl/batching.cljs","^:",25,"^2V",["^Y",[[]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",109,"^2Z","^38","^9",109,"^30",0,"^31",true,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"~$queue-render",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",112,"^8",7,"^9",112,"^:",19,"^2S",["^Y",["^2T",["^Y",[["~$c"]]]]]],"^J","~$reagent.impl.batching/queue-render","^6","reagent/impl/batching.cljs","^:",19,"^2V",["^Y",[["~$c"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",112,"^2Z",["^H",["^38","^35"]],"^9",112,"^30",1,"^31",true,"^2S",["^Y",["^2T",["^Y",[["~$c"]]]]]],"~$next-tick",["^ ","^J","~$reagent.impl.batching/next-tick","^6","reagent/impl/batching.cljs","^7",16,"^8",1,"^9",16,"^:",15,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",16,"^8",6,"^9",16,"^:",15],"~:tag",["^H",[null,"^2["]]],"^I",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",106,"^8",7,"^9",106,"^:",12,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"^J","~$reagent.impl.batching/flush","^6","reagent/impl/batching.cljs","^:",12,"^2V",["^Y",[[]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",106,"^2Z","^38","^9",106,"^30",0,"^31",true,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"~$mark-rendered",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",117,"^8",7,"^9",117,"^:",20,"^2S",["^Y",["^2T",["^Y",[["~$c"]]]]]],"^J","~$reagent.impl.batching/mark-rendered","^6","reagent/impl/batching.cljs","^:",20,"^2V",["^Y",[["~$c"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",117,"^9",117,"^30",1,"^31",true,"^2S",["^Y",["^2T",["^Y",[["~$c"]]]]]],"~$schedule",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",126,"^8",7,"^9",126,"^:",15,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"^J","~$reagent.impl.batching/schedule","^6","reagent/impl/batching.cljs","^:",15,"^2V",["^Y",[[]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",126,"^2Z",["^H",["^38","^35"]],"^9",126,"^30",0,"^31",true,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"~$render-queue",["^ ","^J","~$reagent.impl.batching/render-queue","^6","reagent/impl/batching.cljs","^7",104,"^8",1,"^9",104,"^:",22,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",104,"^8",10,"^9",104,"^:",22],"^3?","~$reagent.impl.batching/RenderQueue"],"~$RenderQueue",["^ ","~:num-fields",1,"~:protocols",["^H",["~$cljs.core/Object"]],"^J","^3G","^6","reagent/impl/batching.cljs","^:",21,"~:type",true,"^8",10,"^7",57,"~:record",false,"^9",57,"^3?","~$function","~:skip-protocol-flag",null],"~$compare-mount-order",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",26,"^8",7,"^9",26,"^:",26,"^2S",["^Y",["^2T",["^Y",[["~$c1","~$c2"]]]]]],"^J","~$reagent.impl.batching/compare-mount-order","^6","reagent/impl/batching.cljs","^:",26,"^2V",["^Y",[["^3Q","^3R"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",26,"^2Z","~$number","^9",26,"^30",2,"^31",true,"^2S",["^Y",["^2T",["^Y",[["^3Q","^3R"]]]]]],"~$enqueue",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",52,"^8",7,"^9",52,"^:",14,"^2S",["^Y",["^2T",["^Y",[["~$queue","^33","~$f"]]]]]],"^J","~$reagent.impl.batching/enqueue","^6","reagent/impl/batching.cljs","^:",14,"^2V",["^Y",[["^3V","^33","~$f"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",52,"^2Z","^38","^9",52,"^30",3,"^31",true,"^2S",["^Y",["^2T",["^Y",[["^3V","^33","~$f"]]]]]],"~$mount-count",["^ ","^J","~$reagent.impl.batching/mount-count","^6","reagent/impl/batching.cljs","^7",8,"^8",1,"^9",8,"^:",21,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",8,"^8",10,"^9",8,"^:",21],"^3?","^3T"],"~$next-mount-count",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",10,"^8",7,"^9",10,"^:",23,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"^J","~$reagent.impl.batching/next-mount-count","^6","reagent/impl/batching.cljs","^:",23,"^2V",["^Y",[[]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",10,"^9",10,"^30",0,"^31",true,"^2S",["^Y",["^2T",["^Y",[[]]]]]],"~$->RenderQueue",["^ ","^2R",null,"^5",["^ ","^3J",["^H",["^3K"]],"^6","reagent/impl/batching.cljs","^:",21,"^8",10,"~:factory","~:positional","^7",57,"^9",57,"^2S",["^Y",["^2T",["^Y",[["~$scheduled?"]]]]],"^3O",null,"~:doc","Positional factory function for reagent.impl.batching/RenderQueue."],"^3J",["^H",["^3K"]],"^J","~$reagent.impl.batching/->RenderQueue","^6","reagent/impl/batching.cljs","^:",21,"^2V",["^Y",[["^43"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^41","^42","^7",57,"^2Z","^3G","^9",57,"^30",1,"^31",true,"^2S",["^Y",["^2T",["^Y",[["^43"]]]]],"^3O",null,"^44","Positional factory function for reagent.impl.batching/RenderQueue."],"~$do-after-render",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",123,"^8",7,"^9",123,"^:",22,"^2S",["^Y",["^2T",["^Y",[["~$f"]]]]]],"^J","~$reagent.impl.batching/do-after-render","^6","reagent/impl/batching.cljs","^:",22,"^2V",["^Y",[["~$f"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",123,"^2Z","^38","^9",123,"^30",1,"^31",true,"^2S",["^Y",["^2T",["^Y",[["~$f"]]]]]],"~$run-queue",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",35,"^8",7,"^9",35,"^:",16,"^2S",["^Y",["^2T",["^Y",[["~$a"]]]]]],"^J","~$reagent.impl.batching/run-queue","^6","reagent/impl/batching.cljs","^:",16,"^2V",["^Y",[["~$a"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",35,"^2Z","^35","^9",35,"^30",1,"^31",true,"^2S",["^Y",["^2T",["^Y",[["~$a"]]]]]],"~$ratom-flush",["^ ","^2R",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",46,"^8",10,"^9",46,"^:",21],"^J","~$reagent.impl.batching/ratom-flush","^6","reagent/impl/batching.cljs","^:",21,"^2V",["^Y",[[]]],"^2W",null,"^2X",["^Y",[]],"^8",1,"^2Y",false,"^7",46,"^2Z","^35","^9",46,"^30",0,"^31",true,"^2S",null]],"^W",["^ ","^F","^F","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^S",["^H",["~$boolean","^43","^3?","~:mutable"]],"~:order",["^43","^3?","^4>","^4="]],"^13",["^ ","^T",["^H",[]]],"^14",["^ "],"^15",["^R","^Q","^F","^P"]],"^M","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^1C",[["^4B","~:static-fns"],true,["^4B","~:shadow-tweaks"],null,["^4B","~:elide-asserts"],true,["^4B","~:optimize-constants"],null,["^4B","^1:"],null,["^4B","~:external-config"],null,["^4B","~:tooling-config"],null,["^4B","~:emit-constants"],null,["^4B","~:load-tests"],false,["^4B","~:form-size-threshold"],null,["^4B","~:infer-externs"],true,["^4B","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^4B","~:fn-invoke-direct"],null,["^4B","~:source-map"],null]]]