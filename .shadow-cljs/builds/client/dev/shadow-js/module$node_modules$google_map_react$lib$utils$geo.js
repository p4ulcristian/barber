["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/google-map-react/lib/utils/geo.js"],"~:js","shadow$provide.module$node_modules$google_map_react$lib$utils$geo=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.__esModule=!0;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};global=require(\"module$node_modules$$mapbox$point_geometry$index\");var _pointGeometry2=\n_interopRequireDefault(global);global=require(\"module$node_modules$google_map_react$lib$utils$lib_geo$lat_lng\");var _lat_lng2=_interopRequireDefault(global);require=require(\"module$node_modules$google_map_react$lib$utils$lib_geo$transform\");var _transform2=_interopRequireDefault(require);require=function(){function Geo(tileSize){if(!(this instanceof Geo))throw new TypeError(\"Cannot call a class as a function\");this.hasView_=this.hasSize_=!1;this.transform_=new _transform2.default(tileSize||512)}Geo.prototype.setView=\nfunction(center,zoom,bearing){this.transform_.center=_lat_lng2.default.convert(center);this.transform_.zoom=+zoom;this.transform_.bearing=+bearing;this.hasView_=!0};Geo.prototype.setViewSize=function(width,height){this.transform_.width=width;this.transform_.height=height;this.hasSize_=!0};Geo.prototype.setMapCanvasProjection=function(maps,mapCanvasProjection){this.maps_=maps;this.mapCanvasProjection_=mapCanvasProjection};Geo.prototype.canProject=function(){return this.hasSize_&&this.hasView_};Geo.prototype.hasSize=\nfunction(){return this.hasSize_};Geo.prototype.fromLatLngToCenterPixel=function(ptLatLng){return this.transform_.locationPoint(_lat_lng2.default.convert(ptLatLng))};Geo.prototype.fromLatLngToDivPixel=function(ptLatLng){return this.mapCanvasProjection_?(ptLatLng=new this.maps_.LatLng(ptLatLng.lat,ptLatLng.lng),this.mapCanvasProjection_.fromLatLngToDivPixel(ptLatLng)):this.fromLatLngToCenterPixel(ptLatLng)};Geo.prototype.fromLatLngToContainerPixel=function(ptLatLng){if(this.mapCanvasProjection_)return ptLatLng=\nnew this.maps_.LatLng(ptLatLng.lat,ptLatLng.lng),this.mapCanvasProjection_.fromLatLngToContainerPixel(ptLatLng);ptLatLng=this.fromLatLngToCenterPixel(ptLatLng);ptLatLng.x-=this.transform_.worldSize*Math.round(ptLatLng.x/this.transform_.worldSize);ptLatLng.x+=this.transform_.width/2;ptLatLng.y+=this.transform_.height/2;return ptLatLng};Geo.prototype.fromContainerPixelToLatLng=function(ptXY){if(this.mapCanvasProjection_)return ptXY=this.mapCanvasProjection_.fromContainerPixelToLatLng(ptXY),{lat:ptXY.lat(),\nlng:ptXY.lng()};ptXY=_extends({},ptXY);ptXY.x-=this.transform_.width/2;ptXY.y-=this.transform_.height/2;ptXY=this.transform_.pointLocation(_pointGeometry2.default.convert(ptXY));ptXY.lng-=360*Math.round(ptXY.lng/360);return ptXY};Geo.prototype.getWidth=function(){return this.transform_.width};Geo.prototype.getHeight=function(){return this.transform_.height};Geo.prototype.getZoom=function(){return this.transform_.zoom};Geo.prototype.getCenter=function(){return this.transform_.pointLocation({x:0,y:0})};\nGeo.prototype.getBounds=function(margins,roundFactor){var bndT=margins&&margins[0]||0,bndR=margins&&margins[1]||0,bndB=margins&&margins[2]||0;margins=margins&&margins[3]||0;return 0<this.getWidth()-bndR-margins&&0<this.getHeight()-bndT-bndB?(bndT=this.transform_.pointLocation(_pointGeometry2.default.convert({x:margins-this.getWidth()/2,y:bndT-this.getHeight()/2})),bndR=this.transform_.pointLocation(_pointGeometry2.default.convert({x:this.getWidth()/2-bndR,y:this.getHeight()/2-bndB})),bndR=[bndT.lat,\nbndT.lng,bndR.lat,bndR.lng,bndR.lat,bndT.lng,bndT.lat,bndR.lng],roundFactor&&(bndR=bndR.map(function(r){return Math.round(r*roundFactor)/roundFactor})),bndR):[0,0,0,0]};return Geo}();exports.default=require}","~:source","shadow$provide[\"module$node_modules$google_map_react$lib$utils$geo\"] = function(global,require,module,exports) {\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _pointGeometry = require('@mapbox/point-geometry');\n\nvar _pointGeometry2 = _interopRequireDefault(_pointGeometry);\n\nvar _lat_lng = require('./lib_geo/lat_lng');\n\nvar _lat_lng2 = _interopRequireDefault(_lat_lng);\n\nvar _transform = require('./lib_geo/transform');\n\nvar _transform2 = _interopRequireDefault(_transform);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Geo = function () {\n  function Geo(tileSize) {\n    _classCallCheck(this, Geo);\n\n    // left_top view пользует гугл\n    // super();\n    this.hasSize_ = false;\n    this.hasView_ = false;\n    this.transform_ = new _transform2.default(tileSize || 512);\n  }\n\n  Geo.prototype.setView = function setView(center, zoom, bearing) {\n    this.transform_.center = _lat_lng2.default.convert(center);\n    this.transform_.zoom = +zoom;\n    this.transform_.bearing = +bearing;\n    this.hasView_ = true;\n  };\n\n  Geo.prototype.setViewSize = function setViewSize(width, height) {\n    this.transform_.width = width;\n    this.transform_.height = height;\n    this.hasSize_ = true;\n  };\n\n  Geo.prototype.setMapCanvasProjection = function setMapCanvasProjection(maps, mapCanvasProjection) {\n    this.maps_ = maps;\n    this.mapCanvasProjection_ = mapCanvasProjection;\n  };\n\n  Geo.prototype.canProject = function canProject() {\n    return this.hasSize_ && this.hasView_;\n  };\n\n  Geo.prototype.hasSize = function hasSize() {\n    return this.hasSize_;\n  };\n\n  /** Returns the pixel position relative to the map center. */\n\n\n  Geo.prototype.fromLatLngToCenterPixel = function fromLatLngToCenterPixel(ptLatLng) {\n    return this.transform_.locationPoint(_lat_lng2.default.convert(ptLatLng));\n  };\n\n  /**\n   * Returns the pixel position relative to the map panes,\n   * or relative to the map center if there are no panes.\n   */\n\n\n  Geo.prototype.fromLatLngToDivPixel = function fromLatLngToDivPixel(ptLatLng) {\n    if (this.mapCanvasProjection_) {\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\n      return this.mapCanvasProjection_.fromLatLngToDivPixel(latLng);\n    }\n    return this.fromLatLngToCenterPixel(ptLatLng);\n  };\n\n  /** Returns the pixel position relative to the map top-left. */\n\n\n  Geo.prototype.fromLatLngToContainerPixel = function fromLatLngToContainerPixel(ptLatLng) {\n    if (this.mapCanvasProjection_) {\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\n      return this.mapCanvasProjection_.fromLatLngToContainerPixel(latLng);\n    }\n\n    var pt = this.fromLatLngToCenterPixel(ptLatLng);\n    pt.x -= this.transform_.worldSize * Math.round(pt.x / this.transform_.worldSize);\n\n    pt.x += this.transform_.width / 2;\n    pt.y += this.transform_.height / 2;\n\n    return pt;\n  };\n\n  /** Returns the LatLng for the given offset from the map top-left. */\n\n\n  Geo.prototype.fromContainerPixelToLatLng = function fromContainerPixelToLatLng(ptXY) {\n    if (this.mapCanvasProjection_) {\n      var latLng = this.mapCanvasProjection_.fromContainerPixelToLatLng(ptXY);\n      return { lat: latLng.lat(), lng: latLng.lng() };\n    }\n\n    var ptxy = _extends({}, ptXY);\n    ptxy.x -= this.transform_.width / 2;\n    ptxy.y -= this.transform_.height / 2;\n    var ptRes = this.transform_.pointLocation(_pointGeometry2.default.convert(ptxy));\n\n    ptRes.lng -= 360 * Math.round(ptRes.lng / 360); // convert 2 google format\n    return ptRes;\n  };\n\n  Geo.prototype.getWidth = function getWidth() {\n    return this.transform_.width;\n  };\n\n  Geo.prototype.getHeight = function getHeight() {\n    return this.transform_.height;\n  };\n\n  Geo.prototype.getZoom = function getZoom() {\n    return this.transform_.zoom;\n  };\n\n  Geo.prototype.getCenter = function getCenter() {\n    var ptRes = this.transform_.pointLocation({ x: 0, y: 0 });\n\n    return ptRes;\n  };\n\n  Geo.prototype.getBounds = function getBounds(margins, roundFactor) {\n    var bndT = margins && margins[0] || 0;\n    var bndR = margins && margins[1] || 0;\n    var bndB = margins && margins[2] || 0;\n    var bndL = margins && margins[3] || 0;\n\n    if (this.getWidth() - bndR - bndL > 0 && this.getHeight() - bndT - bndB > 0) {\n      var topLeftCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\n        x: bndL - this.getWidth() / 2,\n        y: bndT - this.getHeight() / 2\n      }));\n      var bottomRightCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\n        x: this.getWidth() / 2 - bndR,\n        y: this.getHeight() / 2 - bndB\n      }));\n\n      var res = [topLeftCorner.lat, topLeftCorner.lng, // NW\n      bottomRightCorner.lat, bottomRightCorner.lng, // SE\n      bottomRightCorner.lat, topLeftCorner.lng, // SW\n      topLeftCorner.lat, bottomRightCorner.lng];\n\n      if (roundFactor) {\n        res = res.map(function (r) {\n          return Math.round(r * roundFactor) / roundFactor;\n        });\n      }\n      return res;\n    }\n\n    return [0, 0, 0, 0];\n  };\n\n  return Geo;\n}();\n\nexports.default = Geo;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$google_map_react$lib$utils$lib_geo$lat_lng","~$module$node_modules$google_map_react$lib$utils$lib_geo$transform","~$module$node_modules$$mapbox$point_geometry$index"]],"~:properties",["^5",["transform_","maps_","width","getWidth","fromLatLngToDivPixel","bearing","height","zoom","lng","fromLatLngToContainerPixel","x","__esModule","setViewSize","hasSize","center","fromLatLngToCenterPixel","getCenter","canProject","hasView_","getZoom","getHeight","mapCanvasProjection_","y","lat","fromContainerPixelToLatLng","getBounds","hasSize_","default","setMapCanvasProjection","setView"]],"~:compiled-at",1577908996497,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$google_map_react$lib$utils$geo.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/google-map-react/lib/utils/geo.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$google_map_react$lib$utils$geo\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nexports.__esModule = true;\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _pointGeometry = require('@mapbox/point-geometry');\\n\\nvar _pointGeometry2 = _interopRequireDefault(_pointGeometry);\\n\\nvar _lat_lng = require('./lib_geo/lat_lng');\\n\\nvar _lat_lng2 = _interopRequireDefault(_lat_lng);\\n\\nvar _transform = require('./lib_geo/transform');\\n\\nvar _transform2 = _interopRequireDefault(_transform);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar Geo = function () {\\n  function Geo(tileSize) {\\n    _classCallCheck(this, Geo);\\n\\n    // left_top view \\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u0442 \\u0433\\u0443\\u0433\\u043b\\n    // super();\\n    this.hasSize_ = false;\\n    this.hasView_ = false;\\n    this.transform_ = new _transform2.default(tileSize || 512);\\n  }\\n\\n  Geo.prototype.setView = function setView(center, zoom, bearing) {\\n    this.transform_.center = _lat_lng2.default.convert(center);\\n    this.transform_.zoom = +zoom;\\n    this.transform_.bearing = +bearing;\\n    this.hasView_ = true;\\n  };\\n\\n  Geo.prototype.setViewSize = function setViewSize(width, height) {\\n    this.transform_.width = width;\\n    this.transform_.height = height;\\n    this.hasSize_ = true;\\n  };\\n\\n  Geo.prototype.setMapCanvasProjection = function setMapCanvasProjection(maps, mapCanvasProjection) {\\n    this.maps_ = maps;\\n    this.mapCanvasProjection_ = mapCanvasProjection;\\n  };\\n\\n  Geo.prototype.canProject = function canProject() {\\n    return this.hasSize_ && this.hasView_;\\n  };\\n\\n  Geo.prototype.hasSize = function hasSize() {\\n    return this.hasSize_;\\n  };\\n\\n  /** Returns the pixel position relative to the map center. */\\n\\n\\n  Geo.prototype.fromLatLngToCenterPixel = function fromLatLngToCenterPixel(ptLatLng) {\\n    return this.transform_.locationPoint(_lat_lng2.default.convert(ptLatLng));\\n  };\\n\\n  /**\\n   * Returns the pixel position relative to the map panes,\\n   * or relative to the map center if there are no panes.\\n   */\\n\\n\\n  Geo.prototype.fromLatLngToDivPixel = function fromLatLngToDivPixel(ptLatLng) {\\n    if (this.mapCanvasProjection_) {\\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\\n      return this.mapCanvasProjection_.fromLatLngToDivPixel(latLng);\\n    }\\n    return this.fromLatLngToCenterPixel(ptLatLng);\\n  };\\n\\n  /** Returns the pixel position relative to the map top-left. */\\n\\n\\n  Geo.prototype.fromLatLngToContainerPixel = function fromLatLngToContainerPixel(ptLatLng) {\\n    if (this.mapCanvasProjection_) {\\n      var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);\\n      return this.mapCanvasProjection_.fromLatLngToContainerPixel(latLng);\\n    }\\n\\n    var pt = this.fromLatLngToCenterPixel(ptLatLng);\\n    pt.x -= this.transform_.worldSize * Math.round(pt.x / this.transform_.worldSize);\\n\\n    pt.x += this.transform_.width / 2;\\n    pt.y += this.transform_.height / 2;\\n\\n    return pt;\\n  };\\n\\n  /** Returns the LatLng for the given offset from the map top-left. */\\n\\n\\n  Geo.prototype.fromContainerPixelToLatLng = function fromContainerPixelToLatLng(ptXY) {\\n    if (this.mapCanvasProjection_) {\\n      var latLng = this.mapCanvasProjection_.fromContainerPixelToLatLng(ptXY);\\n      return { lat: latLng.lat(), lng: latLng.lng() };\\n    }\\n\\n    var ptxy = _extends({}, ptXY);\\n    ptxy.x -= this.transform_.width / 2;\\n    ptxy.y -= this.transform_.height / 2;\\n    var ptRes = this.transform_.pointLocation(_pointGeometry2.default.convert(ptxy));\\n\\n    ptRes.lng -= 360 * Math.round(ptRes.lng / 360); // convert 2 google format\\n    return ptRes;\\n  };\\n\\n  Geo.prototype.getWidth = function getWidth() {\\n    return this.transform_.width;\\n  };\\n\\n  Geo.prototype.getHeight = function getHeight() {\\n    return this.transform_.height;\\n  };\\n\\n  Geo.prototype.getZoom = function getZoom() {\\n    return this.transform_.zoom;\\n  };\\n\\n  Geo.prototype.getCenter = function getCenter() {\\n    var ptRes = this.transform_.pointLocation({ x: 0, y: 0 });\\n\\n    return ptRes;\\n  };\\n\\n  Geo.prototype.getBounds = function getBounds(margins, roundFactor) {\\n    var bndT = margins && margins[0] || 0;\\n    var bndR = margins && margins[1] || 0;\\n    var bndB = margins && margins[2] || 0;\\n    var bndL = margins && margins[3] || 0;\\n\\n    if (this.getWidth() - bndR - bndL > 0 && this.getHeight() - bndT - bndB > 0) {\\n      var topLeftCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\\n        x: bndL - this.getWidth() / 2,\\n        y: bndT - this.getHeight() / 2\\n      }));\\n      var bottomRightCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({\\n        x: this.getWidth() / 2 - bndR,\\n        y: this.getHeight() / 2 - bndB\\n      }));\\n\\n      var res = [topLeftCorner.lat, topLeftCorner.lng, // NW\\n      bottomRightCorner.lat, bottomRightCorner.lng, // SE\\n      bottomRightCorner.lat, topLeftCorner.lng, // SW\\n      topLeftCorner.lat, bottomRightCorner.lng];\\n\\n      if (roundFactor) {\\n        res = res.map(function (r) {\\n          return Math.round(r * roundFactor) / roundFactor;\\n        });\\n      }\\n      return res;\\n    }\\n\\n    return [0, 0, 0, 0];\\n  };\\n\\n  return Geo;\\n}();\\n\\nexports.default = Geo;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"_extends\",\"Object\",\"assign\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"_pointGeometry\",\"_pointGeometry2\",\"_lat_lng\",\"_lat_lng2\",\"_transform\",\"_transform2\",\"Geo\",\"tileSize\",\"instance\",\"TypeError\",\"hasView_\",\"hasSize_\",\"transform_\",\"setView\",\"Geo.prototype.setView\",\"center\",\"zoom\",\"bearing\",\"convert\",\"setViewSize\",\"Geo.prototype.setViewSize\",\"width\",\"height\",\"setMapCanvasProjection\",\"Geo.prototype.setMapCanvasProjection\",\"maps\",\"mapCanvasProjection\",\"maps_\",\"mapCanvasProjection_\",\"canProject\",\"Geo.prototype.canProject\",\"hasSize\",\"Geo.prototype.hasSize\",\"fromLatLngToCenterPixel\",\"Geo.prototype.fromLatLngToCenterPixel\",\"ptLatLng\",\"locationPoint\",\"fromLatLngToDivPixel\",\"Geo.prototype.fromLatLngToDivPixel\",\"latLng\",\"LatLng\",\"lat\",\"lng\",\"fromLatLngToContainerPixel\",\"Geo.prototype.fromLatLngToContainerPixel\",\"pt\",\"x\",\"worldSize\",\"Math\",\"round\",\"y\",\"fromContainerPixelToLatLng\",\"Geo.prototype.fromContainerPixelToLatLng\",\"ptXY\",\"ptxy\",\"ptRes\",\"pointLocation\",\"getWidth\",\"Geo.prototype.getWidth\",\"getHeight\",\"Geo.prototype.getHeight\",\"getZoom\",\"Geo.prototype.getZoom\",\"getCenter\",\"Geo.prototype.getCenter\",\"getBounds\",\"Geo.prototype.getBounds\",\"margins\",\"roundFactor\",\"bndT\",\"bndR\",\"bndB\",\"bndL\",\"topLeftCorner\",\"res\",\"bottomRightCorner\",\"map\",\"r\"]\n}\n"]