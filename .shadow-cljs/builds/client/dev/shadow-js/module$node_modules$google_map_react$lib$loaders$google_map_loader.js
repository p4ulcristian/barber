["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/google-map-react/lib/loaders/google_map_loader.js"],"~:js","shadow$provide.module$node_modules$google_map_react$lib$loaders$google_map_loader=function(global,require,module,exports){exports.__esModule=!0;var getUrl=function(region){return region&&\"cn\"===region.toLowerCase()?\"https://maps.google.cn\":\"https://maps.googleapis.com\"},$script_=null,loadPromise_=void 0,resolveCustomPromise_=void 0,_customPromise=new Promise(function(resolve){resolveCustomPromise_=resolve});exports.default=function(bootstrapURLKeys,heatmapLibrary){$script_||($script_=require(\"module$node_modules$scriptjs$dist$script\"));\nif(!bootstrapURLKeys)return _customPromise;if(loadPromise_)return loadPromise_;loadPromise_=new Promise(function(resolve,reject){if(\"undefined\"===typeof window)reject(Error(\"google map cannot be loaded outside browser env\"));else if(window.google&&window.google.maps)resolve(window.google.maps);else{\"undefined\"!==typeof window._$_google_map_initialize_$_&&reject(Error(\"google map initialization error\"));window._$_google_map_initialize_$_=function(){delete window._$_google_map_initialize_$_;resolve(window.google.maps)};\nif(-1<Object.keys(bootstrapURLKeys).indexOf(\"callback\"))throw console.error('\"callback\" key in bootstrapURLKeys is not allowed,\\n                          use onGoogleApiLoaded property instead'),Error('\"callback\" key in bootstrapURLKeys is not allowed,\\n                          use onGoogleApiLoaded property instead');var params=Object.keys(bootstrapURLKeys).reduce(function(r,key){return r+\"\\x26\"+key+\"\\x3d\"+bootstrapURLKeys[key]},\"\"),baseUrl=getUrl(bootstrapURLKeys.region);$script_(\"\"+baseUrl+\"/maps/api/js?callback\\x3d_$_google_map_initialize_$_\"+\nparams+(heatmapLibrary?\"\\x26libraries\\x3dvisualization\":\"\"),function(){return\"undefined\"===typeof window.google&&reject(Error(\"google map initialization error (not loaded)\"))})}});resolveCustomPromise_(loadPromise_);return loadPromise_}}","~:source","shadow$provide[\"module$node_modules$google_map_react$lib$loaders$google_map_loader\"] = function(global,require,module,exports) {\n'use strict';\n\nexports.__esModule = true;\nvar BASE_URL = 'https://maps';\nvar DEFAULT_URL = BASE_URL + '.googleapis.com';\nvar API_PATH = '/maps/api/js?callback=_$_google_map_initialize_$_';\n\nvar getUrl = function getUrl(region) {\n  if (region && region.toLowerCase() === 'cn') {\n    return BASE_URL + '.google.cn';\n  }\n  return DEFAULT_URL;\n};\n\nvar $script_ = null;\n\nvar loadPromise_ = void 0;\n\nvar resolveCustomPromise_ = void 0;\n\nvar _customPromise = new Promise(function (resolve) {\n  resolveCustomPromise_ = resolve;\n});\n\n// TODO add libraries language and other map options\n\nexports.default = function (bootstrapURLKeys, heatmapLibrary) {\n  if (!$script_) {\n    $script_ = require('scriptjs'); // eslint-disable-line\n  }\n\n  // call from outside google-map-react\n  // will be as soon as loadPromise_ resolved\n  if (!bootstrapURLKeys) {\n    return _customPromise;\n  }\n\n  if (loadPromise_) {\n    return loadPromise_;\n  }\n\n  loadPromise_ = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      reject(new Error('google map cannot be loaded outside browser env'));\n      return;\n    }\n\n    if (window.google && window.google.maps) {\n      resolve(window.google.maps);\n      return;\n    }\n\n    if (typeof window._$_google_map_initialize_$_ !== 'undefined') {\n      reject(new Error('google map initialization error'));\n    }\n\n    window._$_google_map_initialize_$_ = function () {\n      delete window._$_google_map_initialize_$_;\n      resolve(window.google.maps);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (Object.keys(bootstrapURLKeys).indexOf('callback') > -1) {\n        var message = '\"callback\" key in bootstrapURLKeys is not allowed,\\n                          use onGoogleApiLoaded property instead';\n        // eslint-disable-next-line no-console\n        console.error(message);\n        throw new Error(message);\n      }\n    }\n\n    var params = Object.keys(bootstrapURLKeys).reduce(function (r, key) {\n      return r + '&' + key + '=' + bootstrapURLKeys[key];\n    }, '');\n\n    var baseUrl = getUrl(bootstrapURLKeys.region);\n    var libraries = heatmapLibrary ? '&libraries=visualization' : '';\n\n    $script_('' + baseUrl + API_PATH + params + libraries, function () {\n      return typeof window.google === 'undefined' && reject(new Error('google map initialization error (not loaded)'));\n    });\n  });\n\n  resolveCustomPromise_(loadPromise_);\n\n  return loadPromise_;\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$scriptjs$dist$script","~$shadow.js"]],"~:properties",["^5",["__esModule","_$_google_map_initialize_$_","default"]],"~:compiled-at",1577908996490,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$google_map_react$lib$loaders$google_map_loader.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,mEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/HA,OAAAC,WAAA,CAAqB,CAAA,CAKrB,KAAIC,OAASA,QAAe,CAACC,MAAD,CAAS,CACnC,MAAIA,OAAJ,EAAuC,IAAvC,GAAcA,MAAAC,YAAA,EAAd,CACS,wBADT,CAJgBC,6BAGmB,CAArC,CAOIC,SAAW,IAPf,CASIC,aAAe,IAAK,EATxB,CAWIC,sBAAwB,IAAK,EAXjC,CAaIC,eAAiB,IAAIC,OAAJ,CAAY,QAAS,CAACC,OAAD,CAAU,CAClDH,qBAAA,CAAwBG,OAD0B,CAA/B,CAMrBX,QAAAY,QAAA,CAAkBC,QAAS,CAACC,gBAAD,CAAmBC,cAAnB,CAAmC,CACvDT,QAAL,GACEA,QADF,CACaR,OAAA,CAAQ,0CAAR,CADb,CAMA;GAAI,CAACgB,gBAAL,CACE,MAAOL,eAGT,IAAIF,YAAJ,CACE,MAAOA,aAGTA,aAAA,CAAe,IAAIG,OAAJ,CAAY,QAAS,CAACC,OAAD,CAAUK,MAAV,CAAkB,CACpD,GAAsB,WAAtB,GAAI,MAAOC,OAAX,CACED,MAAA,CAAWE,KAAJ,CAAU,iDAAV,CAAP,CADF,KAKA,IAAID,MAAAE,OAAJ,EAAqBF,MAAAE,OAAAC,KAArB,CACET,OAAA,CAAQM,MAAAE,OAAAC,KAAR,CADF,KAAA,CAKkD,WAAlD,GAAI,MAAOH,OAAAI,4BAAX,EACEL,MAAA,CAAWE,KAAJ,CAAU,iCAAV,CAAP,CAGFD,OAAAI,4BAAA,CAAqCC,QAAS,EAAG,CAC/C,OAAOL,MAAAI,4BACPV,QAAA,CAAQM,MAAAE,OAAAC,KAAR,CAF+C,CAM/C;GAAyD,EAAzD,CAAIG,MAAAC,KAAA,CAAYV,gBAAZ,CAAAW,QAAA,CAAsC,UAAtC,CAAJ,CAIE,KADAC,QAAAC,MAAA,CAFcC,sHAEd,CACM,CAAIV,KAAJ,CAHQU,sHAGR,CAAN,CAIJ,IAAIC,OAASN,MAAAC,KAAA,CAAYV,gBAAZ,CAAAgB,OAAA,CAAqC,QAAS,CAACC,CAAD,CAAIC,GAAJ,CAAS,CAClE,MAAOD,EAAP,CAAW,MAAX,CAAiBC,GAAjB,CAAuB,MAAvB,CAA6BlB,gBAAA,CAAiBkB,GAAjB,CADqC,CAAvD,CAEV,EAFU,CAAb,CAIIC,QAAU/B,MAAA,CAAOY,gBAAAX,OAAP,CAGdG,SAAA,CAAS,EAAT,CAAc2B,OAAd,CAxEWC,sDAwEX;AAAmCL,MAAnC,EAFgBd,cAAAoB,CAAiB,gCAAjBA,CAA8C,EAE9D,EAAuD,QAAS,EAAG,CACjE,MAAgC,WAAhC,GAAO,MAAOlB,OAAAE,OAAd,EAA+CH,MAAA,CAAWE,KAAJ,CAAU,8CAAV,CAAP,CADkB,CAAnE,CA9BA,CANoD,CAAvC,CAyCfV,sBAAA,CAAsBD,YAAtB,CAEA,OAAOA,aA1DqD,CA3BiE;\",\n\"sources\":[\"node_modules/google-map-react/lib/loaders/google_map_loader.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$google_map_react$lib$loaders$google_map_loader\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nexports.__esModule = true;\\nvar BASE_URL = 'https://maps';\\nvar DEFAULT_URL = BASE_URL + '.googleapis.com';\\nvar API_PATH = '/maps/api/js?callback=_$_google_map_initialize_$_';\\n\\nvar getUrl = function getUrl(region) {\\n  if (region && region.toLowerCase() === 'cn') {\\n    return BASE_URL + '.google.cn';\\n  }\\n  return DEFAULT_URL;\\n};\\n\\nvar $script_ = null;\\n\\nvar loadPromise_ = void 0;\\n\\nvar resolveCustomPromise_ = void 0;\\n\\nvar _customPromise = new Promise(function (resolve) {\\n  resolveCustomPromise_ = resolve;\\n});\\n\\n// TODO add libraries language and other map options\\n\\nexports.default = function (bootstrapURLKeys, heatmapLibrary) {\\n  if (!$script_) {\\n    $script_ = require('scriptjs'); // eslint-disable-line\\n  }\\n\\n  // call from outside google-map-react\\n  // will be as soon as loadPromise_ resolved\\n  if (!bootstrapURLKeys) {\\n    return _customPromise;\\n  }\\n\\n  if (loadPromise_) {\\n    return loadPromise_;\\n  }\\n\\n  loadPromise_ = new Promise(function (resolve, reject) {\\n    if (typeof window === 'undefined') {\\n      reject(new Error('google map cannot be loaded outside browser env'));\\n      return;\\n    }\\n\\n    if (window.google && window.google.maps) {\\n      resolve(window.google.maps);\\n      return;\\n    }\\n\\n    if (typeof window._$_google_map_initialize_$_ !== 'undefined') {\\n      reject(new Error('google map initialization error'));\\n    }\\n\\n    window._$_google_map_initialize_$_ = function () {\\n      delete window._$_google_map_initialize_$_;\\n      resolve(window.google.maps);\\n    };\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (Object.keys(bootstrapURLKeys).indexOf('callback') > -1) {\\n        var message = '\\\"callback\\\" key in bootstrapURLKeys is not allowed,\\\\n                          use onGoogleApiLoaded property instead';\\n        // eslint-disable-next-line no-console\\n        console.error(message);\\n        throw new Error(message);\\n      }\\n    }\\n\\n    var params = Object.keys(bootstrapURLKeys).reduce(function (r, key) {\\n      return r + '&' + key + '=' + bootstrapURLKeys[key];\\n    }, '');\\n\\n    var baseUrl = getUrl(bootstrapURLKeys.region);\\n    var libraries = heatmapLibrary ? '&libraries=visualization' : '';\\n\\n    $script_('' + baseUrl + API_PATH + params + libraries, function () {\\n      return typeof window.google === 'undefined' && reject(new Error('google map initialization error (not loaded)'));\\n    });\\n  });\\n\\n  resolveCustomPromise_(loadPromise_);\\n\\n  return loadPromise_;\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__esModule\",\"getUrl\",\"region\",\"toLowerCase\",\"DEFAULT_URL\",\"$script_\",\"loadPromise_\",\"resolveCustomPromise_\",\"_customPromise\",\"Promise\",\"resolve\",\"default\",\"exports.default\",\"bootstrapURLKeys\",\"heatmapLibrary\",\"reject\",\"window\",\"Error\",\"google\",\"maps\",\"_$_google_map_initialize_$_\",\"window._$_google_map_initialize_$_\",\"Object\",\"keys\",\"indexOf\",\"console\",\"error\",\"message\",\"params\",\"reduce\",\"r\",\"key\",\"baseUrl\",\"API_PATH\",\"libraries\"]\n}\n"]