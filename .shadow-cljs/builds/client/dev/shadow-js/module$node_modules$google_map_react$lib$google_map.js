["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/google-map-react/lib/google_map.js"],"~:js","shadow$provide.module$node_modules$google_map_react$lib$google_map=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!call||\"object\"!==typeof call&&\"function\"!==typeof call?self:call}function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function, not \"+\ntypeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}});superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function defaultOptions_(){return{overviewMapControl:!1,streetViewControl:!1,rotateControl:!0,mapTypeControl:!1,styles:[{featureType:\"poi\",elementType:\"labels\",stylers:[{visibility:\"off\"}]}],minZoom:3}}exports.__esModule=!0;var _typeof=\n\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};global=require(\"module$node_modules$react$index\");var _react2=_interopRequireDefault(global);\nmodule=require(\"module$node_modules$prop_types$index\");module=_interopRequireDefault(module);var _reactDom=require(\"module$node_modules$react_dom$index\"),_reactDom2=_interopRequireDefault(_reactDom);_reactDom=require(\"module$node_modules$google_map_react$lib$google_map_map\");var _google_map_map2=_interopRequireDefault(_reactDom);_reactDom=require(\"module$node_modules$google_map_react$lib$marker_dispatcher\");var _marker_dispatcher2=_interopRequireDefault(_reactDom);_reactDom=require(\"module$node_modules$google_map_react$lib$google_map_markers\");\nvar _google_map_markers2=_interopRequireDefault(_reactDom);_reactDom=require(\"module$node_modules$google_map_react$lib$google_map_markers_prerender\");var _google_map_markers_prerender2=_interopRequireDefault(_reactDom),_google_heatmap=require(\"module$node_modules$google_map_react$lib$google_heatmap\");_reactDom=require(\"module$node_modules$google_map_react$lib$loaders$google_map_loader\");_reactDom=_interopRequireDefault(_reactDom);var _geo=require(\"module$node_modules$google_map_react$lib$utils$geo\"),\n_geo2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$raf\");var _raf2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$pick\");var _pick2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$omit\");var _omit2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$math$log2\");var _log2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$isEmpty\");\nvar _isEmpty2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$isNumber\");var _isNumber2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$detect\");var _detect2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$shallowEqual\");var _shallowEqual2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$isPlainObject\");var _isPlainObject2=_interopRequireDefault(_geo);\n_geo=require(\"module$node_modules$google_map_react$lib$utils$isArraysEqualEps\");var _isArraysEqualEps2=_interopRequireDefault(_geo);_geo=require(\"module$node_modules$google_map_react$lib$utils$detectElementResize\");var _detectElementResize2=_interopRequireDefault(_geo);require=require(\"module$node_modules$google_map_react$lib$utils$passiveEvents\");var _passiveEvents2=_interopRequireDefault(require),IS_REACT_16=void 0!==_reactDom2.default.createPortal,createPortal=IS_REACT_16?_reactDom2.default.createPortal:\n_reactDom2.default.unstable_renderSubtreeIntoContainer,latLng2Obj=function(latLng){return(0,_isPlainObject2.default)(latLng)?latLng:{lat:latLng[0],lng:latLng[1]}},_checkMinZoom=function(zoom,minZoom){zoom<minZoom&&console.warn(\"GoogleMap: minZoom option is less than recommended minZoom option for your map sizes.\\noverrided to value \"+minZoom);return minZoom<zoom?zoom:minZoom};require=function(_Component){function GoogleMap(props){if(!(this instanceof GoogleMap))throw new TypeError(\"Cannot call a class as a function\");\nvar _this=_possibleConstructorReturn(this,_Component.call(this,props));_this._getMinZoom=function(){if(0<_this.geoService_.getWidth()||0<_this.geoService_.getHeight()){var tilesPerWidth=Math.ceil(_this.geoService_.getWidth()/256)+2,tilesPerHeight=Math.ceil(_this.geoService_.getHeight()/256)+2;tilesPerWidth=Math.max(tilesPerWidth,tilesPerHeight);return Math.ceil((0,_log2.default)(tilesPerWidth))}return 3};_this._computeMinZoom=function(minZoom){return(0,_isEmpty2.default)(minZoom)?_this._getMinZoom():\nminZoom};_this._mapDomResizeCallback=function(){_this.resetSizeOnIdle_=!0;if(_this.maps_){var originalCenter=_this.props.center||_this.props.defaultCenter,currentCenter=_this.map_.getCenter();_this.maps_.event.trigger(_this.map_,\"resize\");_this.map_.setCenter(_this.props.resetBoundsOnResize?originalCenter:currentCenter)}};_this._setLayers=function(layerTypes){layerTypes.forEach(function(layerType){_this.layers_[layerType]=new _this.maps_[layerType];_this.layers_[layerType].setMap(_this.map_)})};_this._renderPortal=\nfunction(){return _react2.default.createElement(_google_map_markers2.default,{experimental:_this.props.experimental,onChildClick:_this._onChildClick,onChildMouseDown:_this._onChildMouseDown,onChildMouseEnter:_this._onChildMouseEnter,onChildMouseLeave:_this._onChildMouseLeave,geoService:_this.geoService_,insideMapPanes:!0,distanceToMouse:_this.props.distanceToMouse,getHoverDistance:_this._getHoverDistance,dispatcher:_this.markersDispatcher_})};_this._initMap=function(){if(!_this.initialized_){_this.initialized_=\n!0;var propsCenter=latLng2Obj(_this.props.center||_this.props.defaultCenter);_this.geoService_.setView(propsCenter,_this.props.zoom||_this.props.defaultZoom,0);_this._onBoundsChanged();propsCenter=_extends({},_this.props.apiKey&&{key:_this.props.apiKey},_this.props.bootstrapURLKeys);_this.props.googleMapLoader(propsCenter,_this.props.heatmapLibrary).then(function(maps){if(_this.mounted_){var centerLatLng=_this.geoService_.getCenter(),propsOptions={zoom:_this.props.zoom||_this.props.defaultZoom,center:new maps.LatLng(centerLatLng.lat,\ncenterLatLng.lng)};_this.props.heatmap.positions&&(Object.assign(_this,{heatmap:(0,_google_heatmap.generateHeatmap)(maps,_this.props.heatmap)}),(0,_google_heatmap.optionsHeatmap)(_this.heatmap,_this.props.heatmap));centerLatLng=(0,_pick2.default)(maps,_isPlainObject2.default);var options=\"function\"===typeof _this.props.options?_this.props.options(centerLatLng):_this.props.options,defaultOptions=defaultOptions_(centerLatLng),draggableOptions=!(0,_isEmpty2.default)(_this.props.draggable)&&{draggable:_this.props.draggable};\ncenterLatLng=_this._computeMinZoom(options.minZoom);_this.minZoom_=centerLatLng;propsOptions=_extends({},defaultOptions,{minZoom:centerLatLng},options,propsOptions);_this.defaultDraggableOption_=(0,_isEmpty2.default)(propsOptions.draggable)?_this.defaultDraggableOption_:propsOptions.draggable;propsOptions=_extends({},propsOptions,draggableOptions);propsOptions.minZoom=_checkMinZoom(propsOptions.minZoom,centerLatLng);var map=new maps.Map(_reactDom2.default.findDOMNode(_this.googleMapDom_),propsOptions);\n_this.map_=map;_this.maps_=maps;_this._setLayers(_this.props.layerTypes);var mapsVersion=(centerLatLng=maps.version.match(/^3\\.(\\d+)\\./))&&Number(centerLatLng[1]),overlay=Object.assign(new maps.OverlayView,{onAdd:function(){var K_MAX_WIDTH=\"undefined\"!==typeof screen?screen.width+\"px\":\"2000px\",K_MAX_HEIGHT=\"undefined\"!==typeof screen?screen.height+\"px\":\"2000px\",div=document.createElement(\"div\");div.style.backgroundColor=\"transparent\";div.style.position=\"absolute\";div.style.left=\"0px\";div.style.top=\n\"0px\";div.style.width=K_MAX_WIDTH;div.style.height=K_MAX_HEIGHT;if(_this.props.overlayViewDivStyle){var overlayViewDivStyle=_this.props.overlayViewDivStyle;\"object\"===(\"undefined\"===typeof overlayViewDivStyle?\"undefined\":_typeof(overlayViewDivStyle))&&Object.keys(overlayViewDivStyle).forEach(function(property){div.style[property]=overlayViewDivStyle[property]})}this.getPanes().overlayMouseTarget.appendChild(div);_this.geoService_.setMapCanvasProjection(maps,overlay.getProjection());IS_REACT_16?_this.setState({overlay:div}):\ncreatePortal(_this,_this._renderPortal(),div,function(){return _this.setState({overlay:div})})},onRemove:function(){var renderedOverlay=_this.state.overlay;renderedOverlay&&!IS_REACT_16&&_reactDom2.default.unmountComponentAtNode(renderedOverlay);_this.setState({overlay:null})},draw:function(){_this.updateCounter_++;_this._onBoundsChanged(map,maps,!_this.props.debounced);_this.googleApiLoadedCalled_||(_this._onGoogleApiLoaded({map:map,maps:maps,ref:_this.googleMapDom_}),_this.googleApiLoadedCalled_=\n!0);if(_this.mouse_){var latLng=_this.geoService_.fromContainerPixelToLatLng(_this.mouse_);_this.mouse_.lat=latLng.lat;_this.mouse_.lng=latLng.lng}_this._onChildMouseMove();_this.markersDispatcher_&&(_this.markersDispatcher_.emit(\"kON_CHANGE\"),_this.fireMouseEventOnIdle_&&_this.markersDispatcher_.emit(\"kON_MOUSE_POSITION_CHANGE\"))}});_this.overlay_=overlay;overlay.setMap(map);_this.props.heatmap.positions&&_this.heatmap.setMap(map);_this.props.onTilesLoaded&&maps.event.addListener(map,\"tilesloaded\",\nfunction(){_this._onTilesLoaded()});maps.event.addListener(map,\"zoom_changed\",function(){_this.geoService_.getZoom()!==map.getZoom()&&(_this.zoomAnimationInProgress_||(_this.zoomAnimationInProgress_=!0,_this._onZoomAnimationStart(map.zoom)),32>mapsVersion&&(300>(new Date).getTime()-_this.zoomControlClickTime_?(0,_raf2.default)(function(){return(0,_raf2.default)(function(){_this.updateCounter_++;_this._onBoundsChanged(map,maps)})}):(_this.updateCounter_++,_this._onBoundsChanged(map,maps))))});maps.event.addListener(map,\n\"idle\",function(){if(_this.resetSizeOnIdle_){_this._setViewSize();var currMinZoom=_this._computeMinZoom(_this.props.options.minZoom);currMinZoom!==_this.minZoom_&&(_this.minZoom_=currMinZoom,map.setOptions({minZoom:currMinZoom}));_this.resetSizeOnIdle_=!1}_this.zoomAnimationInProgress_&&(_this.zoomAnimationInProgress_=!1,_this._onZoomAnimationEnd(map.zoom));_this.updateCounter_++;_this._onBoundsChanged(map,maps);_this.dragTime_=0;_this.markersDispatcher_&&_this.markersDispatcher_.emit(\"kON_CHANGE\")});\nmaps.event.addListener(map,\"mouseover\",function(){_this.mouseInMap_=!0});maps.event.addListener(map,\"click\",function(){_this.mouseInMap_=!0});maps.event.addListener(map,\"mouseout\",function(){_this.mouseInMap_=!1;_this.mouse_=null;_this.markersDispatcher_.emit(\"kON_MOUSE_POSITION_CHANGE\")});maps.event.addListener(map,\"drag\",function(){_this.dragTime_=(new Date).getTime();_this._onDrag(map)});maps.event.addListener(map,\"dragend\",function(){var idleListener=maps.event.addListener(map,\"idle\",function(){maps.event.removeListener(idleListener);\n_this._onDragEnd(map)})});maps.event.addListener(map,\"maptypeid_changed\",function(){_this._onMapTypeIdChange(map.getMapTypeId())})}}).catch(function(e){_this._onGoogleApiLoaded({map:null,maps:null,ref:_this.googleMapDom_});console.error(e);throw e;})}};_this._onGoogleApiLoaded=function(){if(_this.props.onGoogleApiLoaded){var _this$props;!0!==_this.props.yesIWantToUseGoogleMapApiInternals&&console.warn(\"GoogleMap: Usage of internal api objects is dangerous and can cause a lot of issues.\\nTo hide this warning add yesIWantToUseGoogleMapApiInternals\\x3d{true} to \\x3cGoogleMap instance\");\n(_this$props=_this.props).onGoogleApiLoaded.apply(_this$props,arguments)}};_this._getHoverDistance=function(){return _this.props.hoverDistance};_this._onDrag=function(){var _this$props2;return _this.props.onDrag&&(_this$props2=_this.props).onDrag.apply(_this$props2,arguments)};_this._onDragEnd=function(){var _this$props3;return _this.props.onDragEnd&&(_this$props3=_this.props).onDragEnd.apply(_this$props3,arguments)};_this._onMapTypeIdChange=function(){var _this$props4;return _this.props.onMapTypeIdChange&&\n(_this$props4=_this.props).onMapTypeIdChange.apply(_this$props4,arguments)};_this._onZoomAnimationStart=function(){var _this$props5;return _this.props.onZoomAnimationStart&&(_this$props5=_this.props).onZoomAnimationStart.apply(_this$props5,arguments)};_this._onZoomAnimationEnd=function(){var _this$props6;return _this.props.onZoomAnimationEnd&&(_this$props6=_this.props).onZoomAnimationEnd.apply(_this$props6,arguments)};_this._onTilesLoaded=function(){return _this.props.onTilesLoaded&&_this.props.onTilesLoaded()};\n_this._onChildClick=function(){if(_this.props.onChildClick){var _this$props7;return(_this$props7=_this.props).onChildClick.apply(_this$props7,arguments)}};_this._onChildMouseDown=function(hoverKey,childProps){_this.childMouseDownArgs_=[hoverKey,childProps];if(_this.props.onChildMouseDown)_this.props.onChildMouseDown(hoverKey,childProps,_extends({},_this.mouse_))};_this._onChildMouseUp=function(){if(_this.childMouseDownArgs_){if(_this.props.onChildMouseUp){var _this$props8;(_this$props8=_this.props).onChildMouseUp.apply(_this$props8,\n_this.childMouseDownArgs_.concat([_extends({},_this.mouse_)]))}_this.childMouseDownArgs_=null;_this.childMouseUpTime_=(new Date).getTime()}};_this._onChildMouseMove=function(){if(_this.childMouseDownArgs_&&_this.props.onChildMouseMove){var _this$props9;(_this$props9=_this.props).onChildMouseMove.apply(_this$props9,_this.childMouseDownArgs_.concat([_extends({},_this.mouse_)]))}};_this._onChildMouseEnter=function(){if(_this.props.onChildMouseEnter){var _this$props10;return(_this$props10=_this.props).onChildMouseEnter.apply(_this$props10,\narguments)}};_this._onChildMouseLeave=function(){if(_this.props.onChildMouseLeave){var _this$props11;return(_this$props11=_this.props).onChildMouseLeave.apply(_this$props11,arguments)}};_this._setViewSize=function(){if(_this.mounted_){if(document.fullscreen||document.webkitIsFullScreen||document.mozFullScreen||document.msFullscreenElement)_this.geoService_.setViewSize(window.innerWidth,window.innerHeight);else{var mapDom=_reactDom2.default.findDOMNode(_this.googleMapDom_);_this.geoService_.setViewSize(mapDom.clientWidth,\nmapDom.clientHeight)}_this._onBoundsChanged()}};_this._onWindowResize=function(){_this.resetSizeOnIdle_=!0};_this._onMapMouseMove=function(e){if(_this.mouseInMap_){var currTime=(new Date).getTime();50<currTime-_this.mouseMoveTime_&&(_this.boundingRect_=e.currentTarget.getBoundingClientRect());_this.mouseMoveTime_=currTime;var mousePosX=e.clientX-_this.boundingRect_.left;e=e.clientY-_this.boundingRect_.top;_this.mouse_||(_this.mouse_={x:0,y:0,lat:0,lng:0});_this.mouse_.x=mousePosX;_this.mouse_.y=e;\nmousePosX=_this.geoService_.fromContainerPixelToLatLng(_this.mouse_);_this.mouse_.lat=mousePosX.lat;_this.mouse_.lng=mousePosX.lng;_this._onChildMouseMove();100>currTime-_this.dragTime_?_this.fireMouseEventOnIdle_=!0:(_this.markersDispatcher_.emit(\"kON_MOUSE_POSITION_CHANGE\"),_this.fireMouseEventOnIdle_=!1)}};_this._onClick=function(){var _this$props12;return _this.props.onClick&&!_this.childMouseDownArgs_&&300<(new Date).getTime()-_this.childMouseUpTime_&&0===_this.dragTime_&&(_this$props12=_this.props).onClick.apply(_this$props12,\narguments)};_this._onMapClick=function(event){_this.markersDispatcher_&&(_this._onMapMouseMove(event),100<(new Date).getTime()-_this.dragTime_&&(_this.mouse_&&_this._onClick(_extends({},_this.mouse_,{event:event})),_this.markersDispatcher_.emit(\"kON_CLICK\",event)))};_this._onMapMouseDownNative=function(event){_this.mouseInMap_&&_this._onMapMouseDown(event)};_this._onMapMouseDown=function(event){_this.markersDispatcher_&&100<(new Date).getTime()-_this.dragTime_&&(_this._onMapMouseMove(event),_this.markersDispatcher_.emit(\"kON_MDOWN\",\nevent))};_this._onMapMouseDownCapture=function(){(0,_detect2.default)().isChrome&&(_this.zoomControlClickTime_=(new Date).getTime())};_this._onKeyDownCapture=function(){(0,_detect2.default)().isChrome&&(_this.zoomControlClickTime_=(new Date).getTime())};_this._isCenterDefined=function(center){return center&&((0,_isPlainObject2.default)(center)&&(0,_isNumber2.default)(center.lat)&&(0,_isNumber2.default)(center.lng)||2===center.length&&(0,_isNumber2.default)(center[0])&&(0,_isNumber2.default)(center[1]))};\n_this._onBoundsChanged=function(map,maps,callExtBoundsChange){map&&(maps=map.getCenter(),_this.geoService_.setView([maps.lat(),maps.lng()],map.getZoom(),0));if((_this.props.onChange||_this.props.onBoundsChange)&&_this.geoService_.canProject()){map=_this.geoService_.getZoom();maps=_this.geoService_.getBounds();var centerLatLng=_this.geoService_.getCenter();if(!(0,_isArraysEqualEps2.default)(maps,_this.prevBounds_,1E-5)&&!1!==callExtBoundsChange){callExtBoundsChange=_this.geoService_.getBounds(_this.props.margin);\nif(_this.props.onBoundsChange)_this.props.onBoundsChange(_this.centerIsObject_?_extends({},centerLatLng):[centerLatLng.lat,centerLatLng.lng],map,maps,callExtBoundsChange);if(_this.props.onChange)_this.props.onChange({center:_extends({},centerLatLng),zoom:map,bounds:{nw:{lat:maps[0],lng:maps[1]},se:{lat:maps[2],lng:maps[3]},sw:{lat:maps[4],lng:maps[5]},ne:{lat:maps[6],lng:maps[7]}},marginBounds:{nw:{lat:callExtBoundsChange[0],lng:callExtBoundsChange[1]},se:{lat:callExtBoundsChange[2],lng:callExtBoundsChange[3]},\nsw:{lat:callExtBoundsChange[4],lng:callExtBoundsChange[5]},ne:{lat:callExtBoundsChange[6],lng:callExtBoundsChange[7]}},size:_this.geoService_.hasSize()?{width:_this.geoService_.getWidth(),height:_this.geoService_.getHeight()}:{width:0,height:0}});_this.prevBounds_=maps}}};_this._registerChild=function(ref){_this.googleMapDom_=ref};_this.mounted_=!1;_this.initialized_=!1;_this.googleApiLoadedCalled_=!1;_this.map_=null;_this.maps_=null;_this.prevBounds_=null;_this.heatmap=null;_this.layers_={};_this.mouse_=\nnull;_this.mouseMoveTime_=0;_this.boundingRect_=null;_this.mouseInMap_=!0;_this.dragTime_=0;_this.fireMouseEventOnIdle_=!1;_this.updateCounter_=0;_this.markersDispatcher_=new _marker_dispatcher2.default(_this);_this.geoService_=new _geo2.default(256);_this.centerIsObject_=(0,_isPlainObject2.default)(_this.props.center);_this.minZoom_=3;_this.defaultDraggableOption_=!0;_this.zoomControlClickTime_=0;_this.childMouseDownArgs_=null;_this.childMouseUpTime_=0;_this.googleMapDom_=null;_this.props.apiKey&&\nconsole.warn(\"GoogleMap: apiKey is deprecated, use bootstrapURLKeys\\x3d{{key: YOUR_API_KEY}} instead.\");_this.props.onBoundsChange&&console.warn(\"GoogleMap: onBoundsChange is deprecated, use onChange({center, zoom, bounds, ...other}) instead.\");(0,_isEmpty2.default)(_this.props.center)&&(0,_isEmpty2.default)(_this.props.defaultCenter)&&console.warn(\"GoogleMap: center or defaultCenter property must be defined\");(0,_isEmpty2.default)(_this.props.zoom)&&(0,_isEmpty2.default)(_this.props.defaultZoom)&&\nconsole.warn(\"GoogleMap: zoom or defaultZoom property must be defined\");_this._isCenterDefined(_this.props.center||_this.props.defaultCenter)&&(props=latLng2Obj(_this.props.center||_this.props.defaultCenter),_this.geoService_.setView(props,_this.props.zoom||_this.props.defaultZoom,0));_this.zoomAnimationInProgress_=!1;_this.state={overlay:null};return _this}_inherits(GoogleMap,_Component);GoogleMap.prototype.componentDidMount=function(){var _this2=this;this.mounted_=!0;(0,_passiveEvents2.default)(window,\n\"resize\",this._onWindowResize,!1);(0,_passiveEvents2.default)(window,\"keydown\",this._onKeyDownCapture,!0);var mapDom=_reactDom2.default.findDOMNode(this.googleMapDom_);mapDom&&(0,_passiveEvents2.default)(mapDom,\"mousedown\",this._onMapMouseDownNative,!0);(0,_passiveEvents2.default)(window,\"mouseup\",this._onChildMouseUp,!1);var bootstrapURLKeys=_extends({},this.props.apiKey&&{key:this.props.apiKey},this.props.bootstrapURLKeys);this.props.googleMapLoader(bootstrapURLKeys,this.props.heatmapLibrary);setTimeout(function(){_this2._setViewSize();\n_this2._isCenterDefined(_this2.props.center||_this2.props.defaultCenter)&&_this2._initMap()},0,this);this.props.resetBoundsOnResize&&_detectElementResize2.default.addResizeListener(mapDom,this._mapDomResizeCallback)};GoogleMap.prototype.UNSAFE_componentWillReceiveProps=function(nextProps){var _this3=this;(0,_shallowEqual2.default)(this.props.defaultCenter,nextProps.defaultCenter)||console.warn(\"GoogleMap: defaultCenter prop changed. You can't change default props.\");(0,_shallowEqual2.default)(this.props.defaultZoom,\nnextProps.defaultZoom)||console.warn(\"GoogleMap: defaultZoom prop changed. You can't change default props.\");!this._isCenterDefined(this.props.center)&&this._isCenterDefined(nextProps.center)&&setTimeout(function(){return _this3._initMap()},0);if(this.map_){var centerLatLng=this.geoService_.getCenter();if(this._isCenterDefined(nextProps.center)){var nextPropsCenter=latLng2Obj(nextProps.center),currCenter=this._isCenterDefined(this.props.center)?latLng2Obj(this.props.center):null;(!currCenter||1E-5<\nMath.abs(nextPropsCenter.lat-currCenter.lat)+Math.abs(nextPropsCenter.lng-currCenter.lng))&&1E-5<Math.abs(nextPropsCenter.lat-centerLatLng.lat)+Math.abs(nextPropsCenter.lng-centerLatLng.lng)&&this.map_.panTo({lat:nextPropsCenter.lat,lng:nextPropsCenter.lng})}(0,_isEmpty2.default)(nextProps.zoom)||0<Math.abs(nextProps.zoom-this.props.zoom)&&this.map_.setZoom(nextProps.zoom);!(0,_isEmpty2.default)(this.props.draggable)&&(0,_isEmpty2.default)(nextProps.draggable)?this.map_.setOptions({draggable:this.defaultDraggableOption_}):\n(0,_shallowEqual2.default)(this.props.draggable,nextProps.draggable)||this.map_.setOptions({draggable:nextProps.draggable});(0,_isEmpty2.default)(nextProps.options)||(0,_shallowEqual2.default)(this.props.options,nextProps.options)||(centerLatLng=(0,_pick2.default)(this.maps_,_isPlainObject2.default),centerLatLng=\"function\"===typeof nextProps.options?nextProps.options(centerLatLng):nextProps.options,centerLatLng=(0,_omit2.default)(centerLatLng,[\"zoom\",\"center\",\"draggable\"]),\"minZoom\"in centerLatLng&&\n(nextPropsCenter=this._computeMinZoom(centerLatLng.minZoom),centerLatLng.minZoom=_checkMinZoom(centerLatLng.minZoom,nextPropsCenter)),this.map_.setOptions(centerLatLng));(0,_shallowEqual2.default)(nextProps.layerTypes,this.props.layerTypes)||(Object.keys(this.layers_).forEach(function(layerKey){_this3.layers_[layerKey].setMap(null);delete _this3.layers_[layerKey]}),this._setLayers(nextProps.layerTypes));this.heatmap&&!(0,_shallowEqual2.default)(nextProps.heatmap.positions,this.props.heatmap.positions)&&\nthis.heatmap.setData(nextProps.heatmap.positions.map(function(p){return{location:new _this3.maps_.LatLng(p.lat,p.lng),weight:p.weight}}))}};GoogleMap.prototype.shouldComponentUpdate=function(nextProps,nextState){return!(0,_shallowEqual2.default)((0,_omit2.default)(this.props,[\"draggable\"]),(0,_omit2.default)(nextProps,[\"draggable\"]))||!(0,_shallowEqual2.default)(this.state,nextState)};GoogleMap.prototype.componentDidUpdate=function(prevProps){this.markersDispatcher_.emit(\"kON_CHANGE\");(0,_shallowEqual2.default)(this.props.hoverDistance,\nprevProps.hoverDistance)||this.markersDispatcher_.emit(\"kON_MOUSE_POSITION_CHANGE\")};GoogleMap.prototype.componentWillUnmount=function(){this.mounted_=!1;var mapDom=_reactDom2.default.findDOMNode(this.googleMapDom_);mapDom&&mapDom.removeEventListener(\"mousedown\",this._onMapMouseDownNative,!0);window.removeEventListener(\"resize\",this._onWindowResize);window.removeEventListener(\"keydown\",this._onKeyDownCapture);window.removeEventListener(\"mouseup\",this._onChildMouseUp,!1);this.props.resetBoundsOnResize&&\n_detectElementResize2.default.removeResizeListener(mapDom,this._mapDomResizeCallback);this.overlay_&&this.overlay_.setMap(null);this.maps_&&this.map_&&this.props.shouldUnregisterMapOnUnmount&&(this.map_.setOptions({scrollwheel:!1}),this.maps_.event.clearInstanceListeners(this.map_));this.props.shouldUnregisterMapOnUnmount&&(this.maps_=this.map_=null);this.markersDispatcher_.dispose();this.resetSizeOnIdle_=!1;this.props.shouldUnregisterMapOnUnmount&&(delete this.map_,delete this.markersDispatcher_)};\nGoogleMap.prototype.render=function(){var overlay=this.state.overlay,mapMarkerPrerender=overlay?null:_react2.default.createElement(_google_map_markers_prerender2.default,{experimental:this.props.experimental,onChildClick:this._onChildClick,onChildMouseDown:this._onChildMouseDown,onChildMouseEnter:this._onChildMouseEnter,onChildMouseLeave:this._onChildMouseLeave,geoService:this.geoService_,insideMapPanes:!1,distanceToMouse:this.props.distanceToMouse,getHoverDistance:this._getHoverDistance,dispatcher:this.markersDispatcher_});\nreturn _react2.default.createElement(\"div\",{style:this.props.style,onMouseMove:this._onMapMouseMove,onMouseDownCapture:this._onMapMouseDownCapture,onClick:this._onMapClick},_react2.default.createElement(_google_map_map2.default,{registerChild:this._registerChild}),IS_REACT_16&&overlay&&createPortal(this._renderPortal(),overlay),mapMarkerPrerender)};return GoogleMap}(global.Component);require.propTypes={apiKey:module.default.string,bootstrapURLKeys:module.default.any,defaultCenter:module.default.oneOfType([module.default.array,\nmodule.default.shape({lat:module.default.number,lng:module.default.number})]),center:module.default.oneOfType([module.default.array,module.default.shape({lat:module.default.number,lng:module.default.number})]),defaultZoom:module.default.number,zoom:module.default.number,onBoundsChange:module.default.func,onChange:module.default.func,onClick:module.default.func,onChildClick:module.default.func,onChildMouseDown:module.default.func,onChildMouseUp:module.default.func,onChildMouseMove:module.default.func,\nonChildMouseEnter:module.default.func,onChildMouseLeave:module.default.func,onZoomAnimationStart:module.default.func,onZoomAnimationEnd:module.default.func,onDrag:module.default.func,onDragEnd:module.default.func,onMapTypeIdChange:module.default.func,onTilesLoaded:module.default.func,options:module.default.any,distanceToMouse:module.default.func,hoverDistance:module.default.number,debounced:module.default.bool,margin:module.default.array,googleMapLoader:module.default.any,onGoogleApiLoaded:module.default.func,\nyesIWantToUseGoogleMapApiInternals:module.default.bool,draggable:module.default.bool,style:module.default.any,resetBoundsOnResize:module.default.bool,layerTypes:module.default.arrayOf(module.default.string),shouldUnregisterMapOnUnmount:module.default.bool};require.defaultProps={distanceToMouse:function(pt,mousePos){return Math.sqrt((pt.x-mousePos.x)*(pt.x-mousePos.x)+(pt.y-mousePos.y)*(pt.y-mousePos.y))},hoverDistance:30,debounced:!0,options:defaultOptions_,googleMapLoader:_reactDom.default,yesIWantToUseGoogleMapApiInternals:!1,\nstyle:{width:\"100%\",height:\"100%\",margin:0,padding:0,position:\"relative\"},layerTypes:[],heatmap:{},heatmapLibrary:!1,shouldUnregisterMapOnUnmount:!0};require.googleMapLoader=_reactDom.default;exports.default=require}","~:source","shadow$provide[\"module$node_modules$google_map_react$lib$google_map\"] = function(global,require,module,exports) {\n'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _google_map_map = require('./google_map_map');\n\nvar _google_map_map2 = _interopRequireDefault(_google_map_map);\n\nvar _marker_dispatcher = require('./marker_dispatcher');\n\nvar _marker_dispatcher2 = _interopRequireDefault(_marker_dispatcher);\n\nvar _google_map_markers = require('./google_map_markers');\n\nvar _google_map_markers2 = _interopRequireDefault(_google_map_markers);\n\nvar _google_map_markers_prerender = require('./google_map_markers_prerender');\n\nvar _google_map_markers_prerender2 = _interopRequireDefault(_google_map_markers_prerender);\n\nvar _google_heatmap = require('./google_heatmap');\n\nvar _google_map_loader = require('./loaders/google_map_loader');\n\nvar _google_map_loader2 = _interopRequireDefault(_google_map_loader);\n\nvar _geo = require('./utils/geo');\n\nvar _geo2 = _interopRequireDefault(_geo);\n\nvar _raf = require('./utils/raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _pick = require('./utils/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _omit = require('./utils/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _log = require('./utils/math/log2');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _isEmpty = require('./utils/isEmpty');\n\nvar _isEmpty2 = _interopRequireDefault(_isEmpty);\n\nvar _isNumber = require('./utils/isNumber');\n\nvar _isNumber2 = _interopRequireDefault(_isNumber);\n\nvar _detect = require('./utils/detect');\n\nvar _detect2 = _interopRequireDefault(_detect);\n\nvar _shallowEqual = require('./utils/shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _isPlainObject = require('./utils/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _isArraysEqualEps = require('./utils/isArraysEqualEps');\n\nvar _isArraysEqualEps2 = _interopRequireDefault(_isArraysEqualEps);\n\nvar _detectElementResize = require('./utils/detectElementResize');\n\nvar _detectElementResize2 = _interopRequireDefault(_detectElementResize);\n\nvar _passiveEvents = require('./utils/passiveEvents');\n\nvar _passiveEvents2 = _interopRequireDefault(_passiveEvents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable import/no-extraneous-dependencies, react/forbid-prop-types, react/no-find-dom-node, no-console */\n\n\n// helpers\n\n\n// loaders\n\n\n// utils\n\n\n// consts\nvar kEPS = 0.00001;\nvar K_GOOGLE_TILE_SIZE = 256;\n// real minZoom calculated here _getMinZoom\nvar K_IDLE_TIMEOUT = 100;\nvar K_IDLE_CLICK_TIMEOUT = 300;\nvar DEFAULT_MIN_ZOOM = 3;\n// Starting with version 3.32, the maps API calls `draw()` each frame during\n// a zoom animation.\nvar DRAW_CALLED_DURING_ANIMATION_VERSION = 32;\nvar IS_REACT_16 = _reactDom2.default.createPortal !== undefined;\n\nvar createPortal = IS_REACT_16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;\n\nfunction defaultOptions_() /* maps */{\n  return {\n    overviewMapControl: false,\n    streetViewControl: false,\n    rotateControl: true,\n    mapTypeControl: false,\n    // disable poi\n    styles: [{\n      featureType: 'poi',\n      elementType: 'labels',\n      stylers: [{ visibility: 'off' }]\n    }],\n    minZoom: DEFAULT_MIN_ZOOM // dynamically recalculted if possible during init\n  };\n}\n\nvar latLng2Obj = function latLng2Obj(latLng) {\n  return (0, _isPlainObject2.default)(latLng) ? latLng : { lat: latLng[0], lng: latLng[1] };\n};\n\nvar _checkMinZoom = function _checkMinZoom(zoom, minZoom) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (zoom < minZoom) {\n      console.warn('GoogleMap: ' + // eslint-disable-line\n      'minZoom option is less than recommended ' + 'minZoom option for your map sizes.\\n' + 'overrided to value ' + minZoom);\n    }\n  }\n\n  if (minZoom < zoom) {\n    return zoom;\n  }\n  return minZoom;\n};\n\nvar isFullScreen = function isFullScreen() {\n  return document.fullscreen || document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement;\n};\n\nvar GoogleMap = function (_Component) {\n  _inherits(GoogleMap, _Component);\n\n  // eslint-disable-line\n\n  function GoogleMap(props) {\n    _classCallCheck(this, GoogleMap);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this._getMinZoom = function () {\n      if (_this.geoService_.getWidth() > 0 || _this.geoService_.getHeight() > 0) {\n        var tilesPerWidth = Math.ceil(_this.geoService_.getWidth() / K_GOOGLE_TILE_SIZE) + 2;\n        var tilesPerHeight = Math.ceil(_this.geoService_.getHeight() / K_GOOGLE_TILE_SIZE) + 2;\n        var maxTilesPerDim = Math.max(tilesPerWidth, tilesPerHeight);\n        return Math.ceil((0, _log2.default)(maxTilesPerDim));\n      }\n      return DEFAULT_MIN_ZOOM;\n    };\n\n    _this._computeMinZoom = function (minZoom) {\n      if (!(0, _isEmpty2.default)(minZoom)) {\n        return minZoom;\n      }\n      return _this._getMinZoom();\n    };\n\n    _this._mapDomResizeCallback = function () {\n      _this.resetSizeOnIdle_ = true;\n      if (_this.maps_) {\n        var originalCenter = _this.props.center || _this.props.defaultCenter;\n        var currentCenter = _this.map_.getCenter();\n        _this.maps_.event.trigger(_this.map_, 'resize');\n        _this.map_.setCenter(_this.props.resetBoundsOnResize ? originalCenter : currentCenter);\n      }\n    };\n\n    _this._setLayers = function (layerTypes) {\n      layerTypes.forEach(function (layerType) {\n        _this.layers_[layerType] = new _this.maps_[layerType]();\n        _this.layers_[layerType].setMap(_this.map_);\n      });\n    };\n\n    _this._renderPortal = function () {\n      return _react2.default.createElement(_google_map_markers2.default, {\n        experimental: _this.props.experimental,\n        onChildClick: _this._onChildClick,\n        onChildMouseDown: _this._onChildMouseDown,\n        onChildMouseEnter: _this._onChildMouseEnter,\n        onChildMouseLeave: _this._onChildMouseLeave,\n        geoService: _this.geoService_,\n        insideMapPanes: true,\n        distanceToMouse: _this.props.distanceToMouse,\n        getHoverDistance: _this._getHoverDistance,\n        dispatcher: _this.markersDispatcher_\n      });\n    };\n\n    _this._initMap = function () {\n      // only initialize the map once\n      if (_this.initialized_) {\n        return;\n      }\n      _this.initialized_ = true;\n\n      var propsCenter = latLng2Obj(_this.props.center || _this.props.defaultCenter);\n      _this.geoService_.setView(propsCenter, _this.props.zoom || _this.props.defaultZoom, 0);\n\n      _this._onBoundsChanged(); // now we can calculate map bounds center etc...\n\n      var bootstrapURLKeys = _extends({}, _this.props.apiKey && { key: _this.props.apiKey }, _this.props.bootstrapURLKeys);\n\n      _this.props.googleMapLoader(bootstrapURLKeys, _this.props.heatmapLibrary).then(function (maps) {\n        if (!_this.mounted_) {\n          return;\n        }\n\n        var centerLatLng = _this.geoService_.getCenter();\n\n        var propsOptions = {\n          zoom: _this.props.zoom || _this.props.defaultZoom,\n          center: new maps.LatLng(centerLatLng.lat, centerLatLng.lng)\n        };\n\n        // Start Heatmap\n        if (_this.props.heatmap.positions) {\n          Object.assign(_this, {\n            heatmap: (0, _google_heatmap.generateHeatmap)(maps, _this.props.heatmap)\n          });\n          (0, _google_heatmap.optionsHeatmap)(_this.heatmap, _this.props.heatmap);\n        }\n        // End Heatmap\n\n        // prevent to exapose full api\n        // next props must be exposed (console.log(Object.keys(pick(maps, isPlainObject))))\n        // \"Animation\", \"ControlPosition\", \"MapTypeControlStyle\", \"MapTypeId\",\n        // \"NavigationControlStyle\", \"ScaleControlStyle\", \"StrokePosition\",\n        // \"SymbolPath\", \"ZoomControlStyle\",\n        // \"event\", \"DirectionsStatus\", \"DirectionsTravelMode\", \"DirectionsUnitSystem\",\n        // \"DistanceMatrixStatus\",\n        // \"DistanceMatrixElementStatus\", \"ElevationStatus\", \"GeocoderLocationType\",\n        // \"GeocoderStatus\", \"KmlLayerStatus\",\n        // \"MaxZoomStatus\", \"StreetViewStatus\", \"TransitMode\", \"TransitRoutePreference\",\n        // \"TravelMode\", \"UnitSystem\"\n        var mapPlainObjects = (0, _pick2.default)(maps, _isPlainObject2.default);\n        var options = typeof _this.props.options === 'function' ? _this.props.options(mapPlainObjects) : _this.props.options;\n        var defaultOptions = defaultOptions_(mapPlainObjects);\n\n        var draggableOptions = !(0, _isEmpty2.default)(_this.props.draggable) && {\n          draggable: _this.props.draggable\n        };\n\n        var minZoom = _this._computeMinZoom(options.minZoom);\n        _this.minZoom_ = minZoom;\n\n        var preMapOptions = _extends({}, defaultOptions, {\n          minZoom: minZoom\n        }, options, propsOptions);\n\n        _this.defaultDraggableOption_ = !(0, _isEmpty2.default)(preMapOptions.draggable) ? preMapOptions.draggable : _this.defaultDraggableOption_;\n\n        var mapOptions = _extends({}, preMapOptions, draggableOptions);\n\n        mapOptions.minZoom = _checkMinZoom(mapOptions.minZoom, minZoom);\n\n        var map = new maps.Map(_reactDom2.default.findDOMNode(_this.googleMapDom_), mapOptions);\n\n        _this.map_ = map;\n        _this.maps_ = maps;\n\n        _this._setLayers(_this.props.layerTypes);\n\n        // Parse `google.maps.version` to capture the major version number.\n        var versionMatch = maps.version.match(/^3\\.(\\d+)\\./);\n        // The major version is the first (and only) captured group.\n        var mapsVersion = versionMatch && Number(versionMatch[1]);\n\n        // render in overlay\n        var this_ = _this;\n        var overlay = Object.assign(new maps.OverlayView(), {\n          onAdd: function onAdd() {\n            var K_MAX_WIDTH = typeof screen !== 'undefined' ? screen.width + 'px' : '2000px';\n            var K_MAX_HEIGHT = typeof screen !== 'undefined' ? screen.height + 'px' : '2000px';\n\n            var div = document.createElement('div');\n            div.style.backgroundColor = 'transparent';\n            div.style.position = 'absolute';\n            div.style.left = '0px';\n            div.style.top = '0px';\n            div.style.width = K_MAX_WIDTH; // prevents some chrome draw defects\n            div.style.height = K_MAX_HEIGHT;\n\n            if (this_.props.overlayViewDivStyle) {\n              var overlayViewDivStyle = this_.props.overlayViewDivStyle;\n\n              if ((typeof overlayViewDivStyle === 'undefined' ? 'undefined' : _typeof(overlayViewDivStyle)) === 'object') {\n                Object.keys(overlayViewDivStyle).forEach(function (property) {\n                  div.style[property] = overlayViewDivStyle[property];\n                });\n              }\n            }\n\n            var panes = this.getPanes();\n            panes.overlayMouseTarget.appendChild(div);\n            this_.geoService_.setMapCanvasProjection(maps, overlay.getProjection());\n\n            if (!IS_REACT_16) {\n              createPortal(this_, this_._renderPortal(), div,\n              // remove prerendered markers\n              function () {\n                return this_.setState({ overlay: div });\n              });\n            } else {\n              this_.setState({ overlay: div });\n            }\n          },\n          onRemove: function onRemove() {\n            var renderedOverlay = this_.state.overlay;\n            if (renderedOverlay && !IS_REACT_16) {\n              _reactDom2.default.unmountComponentAtNode(renderedOverlay);\n            }\n            this_.setState({ overlay: null });\n          },\n          draw: function draw() {\n            this_.updateCounter_++;\n            this_._onBoundsChanged(map, maps, !this_.props.debounced);\n\n            if (!this_.googleApiLoadedCalled_) {\n              this_._onGoogleApiLoaded({ map: map, maps: maps, ref: this_.googleMapDom_ });\n              this_.googleApiLoadedCalled_ = true;\n            }\n\n            if (this_.mouse_) {\n              var latLng = this_.geoService_.fromContainerPixelToLatLng(this_.mouse_);\n              this_.mouse_.lat = latLng.lat;\n              this_.mouse_.lng = latLng.lng;\n            }\n\n            this_._onChildMouseMove();\n\n            if (this_.markersDispatcher_) {\n              this_.markersDispatcher_.emit('kON_CHANGE');\n              if (this_.fireMouseEventOnIdle_) {\n                this_.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\n              }\n            }\n          }\n        });\n\n        _this.overlay_ = overlay;\n\n        overlay.setMap(map);\n        if (_this.props.heatmap.positions) {\n          _this.heatmap.setMap(map);\n        }\n\n        if (_this.props.onTilesLoaded) {\n          maps.event.addListener(map, 'tilesloaded', function () {\n            this_._onTilesLoaded();\n          });\n        }\n\n        maps.event.addListener(map, 'zoom_changed', function () {\n          // recalc position at zoom start\n          if (this_.geoService_.getZoom() !== map.getZoom()) {\n            if (!this_.zoomAnimationInProgress_) {\n              this_.zoomAnimationInProgress_ = true;\n              this_._onZoomAnimationStart(map.zoom);\n            }\n\n            // If draw() is not called each frame during a zoom animation,\n            // simulate it.\n            if (mapsVersion < DRAW_CALLED_DURING_ANIMATION_VERSION) {\n              var TIMEOUT_ZOOM = 300;\n\n              if (new Date().getTime() - _this.zoomControlClickTime_ < TIMEOUT_ZOOM) {\n                // there is strange Google Map Api behavior in chrome when zoom animation of map\n                // is started only on second raf call, if was click on zoom control\n                // or +- keys pressed, so i wait for two rafs before change state\n\n                // this does not fully prevent animation jump\n                // but reduce it's occurence probability\n                (0, _raf2.default)(function () {\n                  return (0, _raf2.default)(function () {\n                    this_.updateCounter_++;\n                    this_._onBoundsChanged(map, maps);\n                  });\n                });\n              } else {\n                this_.updateCounter_++;\n                this_._onBoundsChanged(map, maps);\n              }\n            }\n          }\n        });\n\n        maps.event.addListener(map, 'idle', function () {\n          if (_this.resetSizeOnIdle_) {\n            _this._setViewSize();\n            var currMinZoom = _this._computeMinZoom(_this.props.options.minZoom);\n\n            if (currMinZoom !== _this.minZoom_) {\n              _this.minZoom_ = currMinZoom;\n              map.setOptions({ minZoom: currMinZoom });\n            }\n\n            _this.resetSizeOnIdle_ = false;\n          }\n\n          if (this_.zoomAnimationInProgress_) {\n            this_.zoomAnimationInProgress_ = false;\n            this_._onZoomAnimationEnd(map.zoom);\n          }\n\n          this_.updateCounter_++;\n          this_._onBoundsChanged(map, maps);\n\n          this_.dragTime_ = 0;\n\n          if (this_.markersDispatcher_) {\n            this_.markersDispatcher_.emit('kON_CHANGE');\n          }\n        });\n\n        maps.event.addListener(map, 'mouseover', function () {\n          // has advantage over div MouseLeave\n          this_.mouseInMap_ = true;\n        });\n\n        // an alternative way to know the mouse is back within the map\n        // This would not fire when clicking/interacting with google maps\n        // own on-map countrols+markers. This handles an edge case for touch devices\n        // + 'draggable:false' custom option. See #332 for more details.\n        maps.event.addListener(map, 'click', function () {\n          this_.mouseInMap_ = true;\n        });\n\n        maps.event.addListener(map, 'mouseout', function () {\n          // has advantage over div MouseLeave\n          this_.mouseInMap_ = false;\n          this_.mouse_ = null;\n          this_.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\n        });\n\n        maps.event.addListener(map, 'drag', function () {\n          this_.dragTime_ = new Date().getTime();\n          this_._onDrag(map);\n        });\n\n        maps.event.addListener(map, 'dragend', function () {\n          // 'dragend' fires on mouse release.\n          // 'idle' listener waits until drag inertia ends before firing `onDragEnd`\n          var idleListener = maps.event.addListener(map, 'idle', function () {\n            maps.event.removeListener(idleListener);\n            this_._onDragEnd(map);\n          });\n        });\n        // user choosing satellite vs roads, etc\n        maps.event.addListener(map, 'maptypeid_changed', function () {\n          this_._onMapTypeIdChange(map.getMapTypeId());\n        });\n      }).catch(function (e) {\n        // notify callback of load failure\n        _this._onGoogleApiLoaded({\n          map: null,\n          maps: null,\n          ref: _this.googleMapDom_\n        });\n        console.error(e); // eslint-disable-line no-console\n        throw e;\n      });\n    };\n\n    _this._onGoogleApiLoaded = function () {\n      if (_this.props.onGoogleApiLoaded) {\n        var _this$props;\n\n        if (process.env.NODE_ENV !== 'production' && _this.props.yesIWantToUseGoogleMapApiInternals !== true) {\n          console.warn('GoogleMap: ' + // eslint-disable-line\n          'Usage of internal api objects is dangerous ' + 'and can cause a lot of issues.\\n' + 'To hide this warning add yesIWantToUseGoogleMapApiInternals={true} ' + 'to <GoogleMap instance');\n        }\n\n        (_this$props = _this.props).onGoogleApiLoaded.apply(_this$props, arguments);\n      }\n    };\n\n    _this._getHoverDistance = function () {\n      return _this.props.hoverDistance;\n    };\n\n    _this._onDrag = function () {\n      var _this$props2;\n\n      return _this.props.onDrag && (_this$props2 = _this.props).onDrag.apply(_this$props2, arguments);\n    };\n\n    _this._onDragEnd = function () {\n      var _this$props3;\n\n      return _this.props.onDragEnd && (_this$props3 = _this.props).onDragEnd.apply(_this$props3, arguments);\n    };\n\n    _this._onMapTypeIdChange = function () {\n      var _this$props4;\n\n      return _this.props.onMapTypeIdChange && (_this$props4 = _this.props).onMapTypeIdChange.apply(_this$props4, arguments);\n    };\n\n    _this._onZoomAnimationStart = function () {\n      var _this$props5;\n\n      return _this.props.onZoomAnimationStart && (_this$props5 = _this.props).onZoomAnimationStart.apply(_this$props5, arguments);\n    };\n\n    _this._onZoomAnimationEnd = function () {\n      var _this$props6;\n\n      return _this.props.onZoomAnimationEnd && (_this$props6 = _this.props).onZoomAnimationEnd.apply(_this$props6, arguments);\n    };\n\n    _this._onTilesLoaded = function () {\n      return _this.props.onTilesLoaded && _this.props.onTilesLoaded();\n    };\n\n    _this._onChildClick = function () {\n      if (_this.props.onChildClick) {\n        var _this$props7;\n\n        return (_this$props7 = _this.props).onChildClick.apply(_this$props7, arguments);\n      }\n      return undefined;\n    };\n\n    _this._onChildMouseDown = function (hoverKey, childProps) {\n      _this.childMouseDownArgs_ = [hoverKey, childProps];\n      if (_this.props.onChildMouseDown) {\n        _this.props.onChildMouseDown(hoverKey, childProps, _extends({}, _this.mouse_));\n      }\n    };\n\n    _this._onChildMouseUp = function () {\n      if (_this.childMouseDownArgs_) {\n        if (_this.props.onChildMouseUp) {\n          var _this$props8;\n\n          (_this$props8 = _this.props).onChildMouseUp.apply(_this$props8, _this.childMouseDownArgs_.concat([_extends({}, _this.mouse_)]));\n        }\n        _this.childMouseDownArgs_ = null;\n        _this.childMouseUpTime_ = new Date().getTime();\n      }\n    };\n\n    _this._onChildMouseMove = function () {\n      if (_this.childMouseDownArgs_) {\n        if (_this.props.onChildMouseMove) {\n          var _this$props9;\n\n          (_this$props9 = _this.props).onChildMouseMove.apply(_this$props9, _this.childMouseDownArgs_.concat([_extends({}, _this.mouse_)]));\n        }\n      }\n    };\n\n    _this._onChildMouseEnter = function () {\n      if (_this.props.onChildMouseEnter) {\n        var _this$props10;\n\n        return (_this$props10 = _this.props).onChildMouseEnter.apply(_this$props10, arguments);\n      }\n      return undefined;\n    };\n\n    _this._onChildMouseLeave = function () {\n      if (_this.props.onChildMouseLeave) {\n        var _this$props11;\n\n        return (_this$props11 = _this.props).onChildMouseLeave.apply(_this$props11, arguments);\n      }\n      return undefined;\n    };\n\n    _this._setViewSize = function () {\n      if (!_this.mounted_) return;\n      if (isFullScreen()) {\n        _this.geoService_.setViewSize(window.innerWidth, window.innerHeight);\n      } else {\n        var mapDom = _reactDom2.default.findDOMNode(_this.googleMapDom_);\n        _this.geoService_.setViewSize(mapDom.clientWidth, mapDom.clientHeight);\n      }\n      _this._onBoundsChanged();\n    };\n\n    _this._onWindowResize = function () {\n      _this.resetSizeOnIdle_ = true;\n    };\n\n    _this._onMapMouseMove = function (e) {\n      if (!_this.mouseInMap_) return;\n\n      var currTime = new Date().getTime();\n      var K_RECALC_CLIENT_RECT_MS = 50;\n\n      if (currTime - _this.mouseMoveTime_ > K_RECALC_CLIENT_RECT_MS) {\n        _this.boundingRect_ = e.currentTarget.getBoundingClientRect();\n      }\n      _this.mouseMoveTime_ = currTime;\n\n      var mousePosX = e.clientX - _this.boundingRect_.left;\n      var mousePosY = e.clientY - _this.boundingRect_.top;\n\n      if (!_this.mouse_) {\n        _this.mouse_ = { x: 0, y: 0, lat: 0, lng: 0 };\n      }\n\n      _this.mouse_.x = mousePosX;\n      _this.mouse_.y = mousePosY;\n\n      var latLng = _this.geoService_.fromContainerPixelToLatLng(_this.mouse_);\n      _this.mouse_.lat = latLng.lat;\n      _this.mouse_.lng = latLng.lng;\n\n      _this._onChildMouseMove();\n\n      if (currTime - _this.dragTime_ < K_IDLE_TIMEOUT) {\n        _this.fireMouseEventOnIdle_ = true;\n      } else {\n        _this.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\n        _this.fireMouseEventOnIdle_ = false;\n      }\n    };\n\n    _this._onClick = function () {\n      var _this$props12;\n\n      return _this.props.onClick && !_this.childMouseDownArgs_ && new Date().getTime() - _this.childMouseUpTime_ > K_IDLE_CLICK_TIMEOUT && _this.dragTime_ === 0 && (_this$props12 = _this.props).onClick.apply(_this$props12, arguments);\n    };\n\n    _this._onMapClick = function (event) {\n      if (_this.markersDispatcher_) {\n        // support touch events and recalculate mouse position on click\n        _this._onMapMouseMove(event);\n        var currTime = new Date().getTime();\n        if (currTime - _this.dragTime_ > K_IDLE_TIMEOUT) {\n          if (_this.mouse_) {\n            _this._onClick(_extends({}, _this.mouse_, {\n              event: event\n            }));\n          }\n\n          _this.markersDispatcher_.emit('kON_CLICK', event);\n        }\n      }\n    };\n\n    _this._onMapMouseDownNative = function (event) {\n      if (!_this.mouseInMap_) return;\n\n      _this._onMapMouseDown(event);\n    };\n\n    _this._onMapMouseDown = function (event) {\n      if (_this.markersDispatcher_) {\n        var currTime = new Date().getTime();\n        if (currTime - _this.dragTime_ > K_IDLE_TIMEOUT) {\n          // Hovered marker detected at mouse move could be deleted at mouse down time\n          // so it will be good to force hovered marker recalculation\n          _this._onMapMouseMove(event);\n          _this.markersDispatcher_.emit('kON_MDOWN', event);\n        }\n      }\n    };\n\n    _this._onMapMouseDownCapture = function () {\n      if ((0, _detect2.default)().isChrome) {\n        // to fix strange zoom in chrome\n        _this.zoomControlClickTime_ = new Date().getTime();\n      }\n    };\n\n    _this._onKeyDownCapture = function () {\n      if ((0, _detect2.default)().isChrome) {\n        _this.zoomControlClickTime_ = new Date().getTime();\n      }\n    };\n\n    _this._isCenterDefined = function (center) {\n      return center && ((0, _isPlainObject2.default)(center) && (0, _isNumber2.default)(center.lat) && (0, _isNumber2.default)(center.lng) || center.length === 2 && (0, _isNumber2.default)(center[0]) && (0, _isNumber2.default)(center[1]));\n    };\n\n    _this._onBoundsChanged = function (map, maps, callExtBoundsChange) {\n      if (map) {\n        var gmC = map.getCenter();\n        _this.geoService_.setView([gmC.lat(), gmC.lng()], map.getZoom(), 0);\n      }\n\n      if ((_this.props.onChange || _this.props.onBoundsChange) && _this.geoService_.canProject()) {\n        var zoom = _this.geoService_.getZoom();\n        var bounds = _this.geoService_.getBounds();\n        var centerLatLng = _this.geoService_.getCenter();\n\n        if (!(0, _isArraysEqualEps2.default)(bounds, _this.prevBounds_, kEPS)) {\n          if (callExtBoundsChange !== false) {\n            var marginBounds = _this.geoService_.getBounds(_this.props.margin);\n            if (_this.props.onBoundsChange) {\n              _this.props.onBoundsChange(_this.centerIsObject_ ? _extends({}, centerLatLng) : [centerLatLng.lat, centerLatLng.lng], zoom, bounds, marginBounds);\n            }\n\n            if (_this.props.onChange) {\n              _this.props.onChange({\n                center: _extends({}, centerLatLng),\n                zoom: zoom,\n                bounds: {\n                  nw: {\n                    lat: bounds[0],\n                    lng: bounds[1]\n                  },\n                  se: {\n                    lat: bounds[2],\n                    lng: bounds[3]\n                  },\n                  sw: {\n                    lat: bounds[4],\n                    lng: bounds[5]\n                  },\n                  ne: {\n                    lat: bounds[6],\n                    lng: bounds[7]\n                  }\n                },\n                marginBounds: {\n                  nw: {\n                    lat: marginBounds[0],\n                    lng: marginBounds[1]\n                  },\n                  se: {\n                    lat: marginBounds[2],\n                    lng: marginBounds[3]\n                  },\n                  sw: {\n                    lat: marginBounds[4],\n                    lng: marginBounds[5]\n                  },\n                  ne: {\n                    lat: marginBounds[6],\n                    lng: marginBounds[7]\n                  }\n                },\n\n                size: _this.geoService_.hasSize() ? {\n                  width: _this.geoService_.getWidth(),\n                  height: _this.geoService_.getHeight()\n                } : {\n                  width: 0,\n                  height: 0\n                }\n              });\n            }\n\n            _this.prevBounds_ = bounds;\n          }\n        }\n      }\n    };\n\n    _this._registerChild = function (ref) {\n      _this.googleMapDom_ = ref;\n    };\n\n    _this.mounted_ = false;\n    _this.initialized_ = false;\n    _this.googleApiLoadedCalled_ = false;\n\n    _this.map_ = null;\n    _this.maps_ = null;\n    _this.prevBounds_ = null;\n    _this.heatmap = null;\n\n    _this.layers_ = {};\n\n    _this.mouse_ = null;\n    _this.mouseMoveTime_ = 0;\n    _this.boundingRect_ = null;\n    _this.mouseInMap_ = true;\n\n    _this.dragTime_ = 0;\n    _this.fireMouseEventOnIdle_ = false;\n    _this.updateCounter_ = 0;\n\n    _this.markersDispatcher_ = new _marker_dispatcher2.default(_this);\n    _this.geoService_ = new _geo2.default(K_GOOGLE_TILE_SIZE);\n    _this.centerIsObject_ = (0, _isPlainObject2.default)(_this.props.center);\n\n    _this.minZoom_ = DEFAULT_MIN_ZOOM;\n    _this.defaultDraggableOption_ = true;\n\n    _this.zoomControlClickTime_ = 0;\n\n    _this.childMouseDownArgs_ = null;\n    _this.childMouseUpTime_ = 0;\n\n    _this.googleMapDom_ = null;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (_this.props.apiKey) {\n        console.warn('GoogleMap: ' + // eslint-disable-line no-console\n        'apiKey is deprecated, use ' + 'bootstrapURLKeys={{key: YOUR_API_KEY}} instead.');\n      }\n\n      if (_this.props.onBoundsChange) {\n        console.warn('GoogleMap: ' + // eslint-disable-line no-console\n        'onBoundsChange is deprecated, use ' + 'onChange({center, zoom, bounds, ...other}) instead.');\n      }\n\n      if ((0, _isEmpty2.default)(_this.props.center) && (0, _isEmpty2.default)(_this.props.defaultCenter)) {\n        console.warn('GoogleMap: center or defaultCenter property must be defined' // eslint-disable-line no-console\n        );\n      }\n\n      if ((0, _isEmpty2.default)(_this.props.zoom) && (0, _isEmpty2.default)(_this.props.defaultZoom)) {\n        console.warn('GoogleMap: zoom or defaultZoom property must be defined' // eslint-disable-line no-console\n        );\n      }\n    }\n\n    if (_this._isCenterDefined(_this.props.center || _this.props.defaultCenter)) {\n      var propsCenter = latLng2Obj(_this.props.center || _this.props.defaultCenter);\n      _this.geoService_.setView(propsCenter, _this.props.zoom || _this.props.defaultZoom, 0);\n    }\n\n    _this.zoomAnimationInProgress_ = false;\n\n    _this.state = {\n      overlay: null\n    };\n    return _this;\n  }\n\n  GoogleMap.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.mounted_ = true;\n    (0, _passiveEvents2.default)(window, 'resize', this._onWindowResize, false);\n    (0, _passiveEvents2.default)(window, 'keydown', this._onKeyDownCapture, true);\n    var mapDom = _reactDom2.default.findDOMNode(this.googleMapDom_);\n    // gmap can't prevent map drag if mousedown event already occured\n    // the only workaround I find is prevent mousedown native browser event\n\n    if (mapDom) {\n      (0, _passiveEvents2.default)(mapDom, 'mousedown', this._onMapMouseDownNative, true);\n    }\n\n    (0, _passiveEvents2.default)(window, 'mouseup', this._onChildMouseUp, false);\n    var bootstrapURLKeys = _extends({}, this.props.apiKey && { key: this.props.apiKey }, this.props.bootstrapURLKeys);\n\n    this.props.googleMapLoader(bootstrapURLKeys, this.props.heatmapLibrary); // we can start load immediatly\n\n    setTimeout(function () {\n      // to detect size\n      _this2._setViewSize();\n      if (_this2._isCenterDefined(_this2.props.center || _this2.props.defaultCenter)) {\n        _this2._initMap();\n      }\n    }, 0, this);\n    if (this.props.resetBoundsOnResize) {\n      var that = this;\n      _detectElementResize2.default.addResizeListener(mapDom, that._mapDomResizeCallback);\n    }\n  };\n\n  GoogleMap.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this3 = this;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(0, _shallowEqual2.default)(this.props.defaultCenter, nextProps.defaultCenter)) {\n        console.warn(\"GoogleMap: defaultCenter prop changed. You can't change default props.\");\n      }\n\n      if (!(0, _shallowEqual2.default)(this.props.defaultZoom, nextProps.defaultZoom)) {\n        console.warn(\"GoogleMap: defaultZoom prop changed. You can't change default props.\");\n      }\n    }\n\n    if (!this._isCenterDefined(this.props.center) && this._isCenterDefined(nextProps.center)) {\n      setTimeout(function () {\n        return _this3._initMap();\n      }, 0);\n    }\n\n    if (this.map_) {\n      var centerLatLng = this.geoService_.getCenter();\n      if (this._isCenterDefined(nextProps.center)) {\n        var nextPropsCenter = latLng2Obj(nextProps.center);\n        var currCenter = this._isCenterDefined(this.props.center) ? latLng2Obj(this.props.center) : null;\n\n        if (!currCenter || Math.abs(nextPropsCenter.lat - currCenter.lat) + Math.abs(nextPropsCenter.lng - currCenter.lng) > kEPS) {\n          if (Math.abs(nextPropsCenter.lat - centerLatLng.lat) + Math.abs(nextPropsCenter.lng - centerLatLng.lng) > kEPS) {\n            this.map_.panTo({\n              lat: nextPropsCenter.lat,\n              lng: nextPropsCenter.lng\n            });\n          }\n        }\n      }\n\n      if (!(0, _isEmpty2.default)(nextProps.zoom)) {\n        // if zoom chaged by user\n        if (Math.abs(nextProps.zoom - this.props.zoom) > 0) {\n          this.map_.setZoom(nextProps.zoom);\n        }\n      }\n\n      if (!(0, _isEmpty2.default)(this.props.draggable) && (0, _isEmpty2.default)(nextProps.draggable)) {\n        // reset to default\n        this.map_.setOptions({ draggable: this.defaultDraggableOption_ });\n      } else if (!(0, _shallowEqual2.default)(this.props.draggable, nextProps.draggable)) {\n        // also prevent this on window 'mousedown' event to prevent map move\n        this.map_.setOptions({ draggable: nextProps.draggable });\n      }\n\n      // use shallowEqual to try avoid calling map._setOptions if only the ref changes\n      if (!(0, _isEmpty2.default)(nextProps.options) && !(0, _shallowEqual2.default)(this.props.options, nextProps.options)) {\n        var mapPlainObjects = (0, _pick2.default)(this.maps_, _isPlainObject2.default);\n        var options = typeof nextProps.options === 'function' ? nextProps.options(mapPlainObjects) : nextProps.options;\n        // remove zoom, center and draggable options as these are managed by google-maps-react\n        options = (0, _omit2.default)(options, ['zoom', 'center', 'draggable']);\n\n        if ('minZoom' in options) {\n          var minZoom = this._computeMinZoom(options.minZoom);\n          options.minZoom = _checkMinZoom(options.minZoom, minZoom);\n        }\n\n        this.map_.setOptions(options);\n      }\n\n      if (!(0, _shallowEqual2.default)(nextProps.layerTypes, this.props.layerTypes)) {\n        Object.keys(this.layers_).forEach(function (layerKey) {\n          _this3.layers_[layerKey].setMap(null);\n          delete _this3.layers_[layerKey];\n        });\n        this._setLayers(nextProps.layerTypes);\n      }\n\n      if (this.heatmap && !(0, _shallowEqual2.default)(nextProps.heatmap.positions, this.props.heatmap.positions)) {\n        this.heatmap.setData(nextProps.heatmap.positions.map(function (p) {\n          return {\n            location: new _this3.maps_.LatLng(p.lat, p.lng),\n            weight: p.weight\n          };\n        }));\n      }\n    }\n  };\n\n  GoogleMap.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // draggable does not affect inner components\n    return !(0, _shallowEqual2.default)((0, _omit2.default)(this.props, ['draggable']), (0, _omit2.default)(nextProps, ['draggable'])) || !(0, _shallowEqual2.default)(this.state, nextState);\n  };\n\n  GoogleMap.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    this.markersDispatcher_.emit('kON_CHANGE');\n\n    if (!(0, _shallowEqual2.default)(this.props.hoverDistance, prevProps.hoverDistance)) {\n      this.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\n    }\n  };\n\n  GoogleMap.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.mounted_ = false;\n    var mapDom = _reactDom2.default.findDOMNode(this.googleMapDom_);\n    if (mapDom) {\n      mapDom.removeEventListener('mousedown', this._onMapMouseDownNative, true);\n    }\n    window.removeEventListener('resize', this._onWindowResize);\n    window.removeEventListener('keydown', this._onKeyDownCapture);\n    window.removeEventListener('mouseup', this._onChildMouseUp, false);\n    if (this.props.resetBoundsOnResize) {\n      _detectElementResize2.default.removeResizeListener(mapDom, this._mapDomResizeCallback);\n    }\n\n    if (this.overlay_) {\n      // this triggers overlay_.onRemove(), which will unmount the <GoogleMapMarkers/>\n      this.overlay_.setMap(null);\n    }\n\n    if (this.maps_ && this.map_ && this.props.shouldUnregisterMapOnUnmount) {\n      // fix google, as otherwise listeners works even without map\n      this.map_.setOptions({ scrollwheel: false });\n      this.maps_.event.clearInstanceListeners(this.map_);\n    }\n\n    if (this.props.shouldUnregisterMapOnUnmount) {\n      this.map_ = null;\n      this.maps_ = null;\n    }\n    this.markersDispatcher_.dispose();\n\n    this.resetSizeOnIdle_ = false;\n\n    if (this.props.shouldUnregisterMapOnUnmount) {\n      delete this.map_;\n      delete this.markersDispatcher_;\n    }\n  };\n  // calc minZoom if map size available\n  // it's better to not set minZoom less than this calculation gives\n  // otherwise there is no homeomorphism between screen coordinates and map\n  // (one map coordinate can have different screen coordinates)\n\n\n  // this method works only if this.props.onChildMouseDown was called\n\n\n  // this method works only if this.props.onChildMouseDown was called\n\n\n  // K_IDLE_CLICK_TIMEOUT - looks like 300 is enough\n\n\n  // gmap can't prevent map drag if mousedown event already occured\n  // the only workaround I find is prevent mousedown native browser event\n\n\n  GoogleMap.prototype.render = function render() {\n    var overlay = this.state.overlay;\n    var mapMarkerPrerender = !overlay ? _react2.default.createElement(_google_map_markers_prerender2.default, {\n      experimental: this.props.experimental,\n      onChildClick: this._onChildClick,\n      onChildMouseDown: this._onChildMouseDown,\n      onChildMouseEnter: this._onChildMouseEnter,\n      onChildMouseLeave: this._onChildMouseLeave,\n      geoService: this.geoService_,\n      insideMapPanes: false,\n      distanceToMouse: this.props.distanceToMouse,\n      getHoverDistance: this._getHoverDistance,\n      dispatcher: this.markersDispatcher_\n    }) : null;\n\n    return _react2.default.createElement(\n      'div',\n      {\n        style: this.props.style,\n        onMouseMove: this._onMapMouseMove,\n        onMouseDownCapture: this._onMapMouseDownCapture,\n        onClick: this._onMapClick\n      },\n      _react2.default.createElement(_google_map_map2.default, { registerChild: this._registerChild }),\n      IS_REACT_16 && overlay && createPortal(this._renderPortal(), overlay),\n      mapMarkerPrerender\n    );\n  };\n\n  return GoogleMap;\n}(_react.Component);\n\nGoogleMap.propTypes = {\n  apiKey: _propTypes2.default.string,\n  bootstrapURLKeys: _propTypes2.default.any,\n\n  defaultCenter: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.shape({\n    lat: _propTypes2.default.number,\n    lng: _propTypes2.default.number\n  })]),\n  center: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.shape({\n    lat: _propTypes2.default.number,\n    lng: _propTypes2.default.number\n  })]),\n  defaultZoom: _propTypes2.default.number,\n  zoom: _propTypes2.default.number,\n  onBoundsChange: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  onClick: _propTypes2.default.func,\n  onChildClick: _propTypes2.default.func,\n  onChildMouseDown: _propTypes2.default.func,\n  onChildMouseUp: _propTypes2.default.func,\n  onChildMouseMove: _propTypes2.default.func,\n  onChildMouseEnter: _propTypes2.default.func,\n  onChildMouseLeave: _propTypes2.default.func,\n  onZoomAnimationStart: _propTypes2.default.func,\n  onZoomAnimationEnd: _propTypes2.default.func,\n  onDrag: _propTypes2.default.func,\n  onDragEnd: _propTypes2.default.func,\n  onMapTypeIdChange: _propTypes2.default.func,\n  onTilesLoaded: _propTypes2.default.func,\n  options: _propTypes2.default.any,\n  distanceToMouse: _propTypes2.default.func,\n  hoverDistance: _propTypes2.default.number,\n  debounced: _propTypes2.default.bool,\n  margin: _propTypes2.default.array,\n  googleMapLoader: _propTypes2.default.any,\n  onGoogleApiLoaded: _propTypes2.default.func,\n  yesIWantToUseGoogleMapApiInternals: _propTypes2.default.bool,\n  draggable: _propTypes2.default.bool,\n  style: _propTypes2.default.any,\n  resetBoundsOnResize: _propTypes2.default.bool,\n  layerTypes: _propTypes2.default.arrayOf(_propTypes2.default.string), // ['TransitLayer', 'TrafficLayer']\n  shouldUnregisterMapOnUnmount: _propTypes2.default.bool\n};\nGoogleMap.defaultProps = {\n  distanceToMouse: function distanceToMouse(pt, mousePos /* , markerProps */) {\n    return Math.sqrt((pt.x - mousePos.x) * (pt.x - mousePos.x) + (pt.y - mousePos.y) * (pt.y - mousePos.y));\n  },\n\n  hoverDistance: 30,\n  debounced: true,\n  options: defaultOptions_,\n  googleMapLoader: _google_map_loader2.default,\n  yesIWantToUseGoogleMapApiInternals: false,\n  style: {\n    width: '100%',\n    height: '100%',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n  layerTypes: [],\n  heatmap: {},\n  heatmapLibrary: false,\n  shouldUnregisterMapOnUnmount: true\n};\nGoogleMap.googleMapLoader = _google_map_loader2.default;\nexports.default = GoogleMap;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$google_map_react$lib$google_map_markers","~$module$node_modules$google_map_react$lib$utils$omit","~$module$node_modules$google_map_react$lib$utils$passiveEvents","~$module$node_modules$google_map_react$lib$utils$isArraysEqualEps","~$module$node_modules$google_map_react$lib$utils$raf","~$module$node_modules$react_dom$index","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$google_map_react$lib$loaders$google_map_loader","~$module$node_modules$google_map_react$lib$utils$math$log2","~$module$node_modules$google_map_react$lib$marker_dispatcher","~$module$node_modules$google_map_react$lib$utils$isEmpty","~$module$node_modules$google_map_react$lib$utils$pick","~$module$node_modules$google_map_react$lib$utils$shallowEqual","~$module$node_modules$google_map_react$lib$utils$detect","~$module$node_modules$google_map_react$lib$utils$isNumber","~$module$node_modules$google_map_react$lib$utils$geo","~$module$node_modules$google_map_react$lib$google_map_markers_prerender","~$module$node_modules$google_map_react$lib$google_heatmap","~$module$node_modules$google_map_react$lib$google_map_map","~$module$node_modules$google_map_react$lib$utils$isPlainObject","~$module$node_modules$google_map_react$lib$utils$detectElementResize"]],"~:properties",["^5",["backgroundColor","map","maps_","_onZoomAnimationEnd","geoService_","onRemove","width","sw","_onMapMouseMove","onChildMouseUp","defaultZoom","experimental","top","marginBounds","initialized_","onChange","mapTypeControl","onDrag","_initMap","ne","prototype","height","margin","_getMinZoom","overlay_","geoService","zoom","onZoomAnimationEnd","lng","zoomAnimationInProgress_","_onZoomAnimationStart","_onMapMouseDownNative","stylers","childMouseDownArgs_","distanceToMouse","maps","dragTime_","key","onMouseMove","onChildMouseEnter","prevBounds_","x","__esModule","nw","onChildMouseMove","_onMapMouseDownCapture","padding","_onKeyDownCapture","_onChildMouseMove","_onDrag","mouseInMap_","hoverDistance","shouldUnregisterMapOnUnmount","mounted_","elementType","event","fireMouseEventOnIdle_","onChildMouseLeave","propTypes","insideMapPanes","resetSizeOnIdle_","registerChild","featureType","heatmapLibrary","visibility","updateCounter_","defaultCenter","heatmap","onGoogleApiLoaded","position","configurable","centerIsObject_","_onTilesLoaded","style","childMouseUpTime_","value","zoomControlClickTime_","center","location","_setViewSize","enumerable","minZoom_","minZoom","componentDidUpdate","_onBoundsChanged","UNSAFE_componentWillReceiveProps","_onDragEnd","writable","defaultDraggableOption_","_onChildMouseLeave","styles","_setLayers","yesIWantToUseGoogleMapApiInternals","onDragEnd","draggable","se","onChildClick","onMapTypeIdChange","componentDidMount","onClick","apiKey","defaultProps","googleMapLoader","shouldComponentUpdate","debounced","_onChildMouseDown","render","mouse_","layers_","y","_onClick","lat","draw","state","ref","_onMapMouseDown","__proto__","_isCenterDefined","streetViewControl","_onChildMouseEnter","_onMapClick","onMouseDownCapture","bounds","componentWillUnmount","onChildMouseDown","map_","_getHoverDistance","_onMapTypeIdChange","_mapDomResizeCallback","onAdd","layerTypes","resetBoundsOnResize","size","onTilesLoaded","_onChildMouseUp","markersDispatcher_","rotateControl","_onChildClick","googleApiLoadedCalled_","boundingRect_","options","scrollwheel","googleMapDom_","dispatcher","onBoundsChange","overlay","_computeMinZoom","default","getHoverDistance","_onWindowResize","onZoomAnimationStart","_renderPortal","weight","left","mouseMoveTime_","_onGoogleApiLoaded","bootstrapURLKeys","constructor","overviewMapControl","_registerChild"]],"~:compiled-at",1577908996515,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$google_map_react$lib$google_map.js\",\n\"lineCount\":53,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/google-map-react/lib/google_map.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$google_map_react$lib$google_map\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nexports.__esModule = true;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nvar _react = require('react');\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _propTypes = require('prop-types');\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _reactDom = require('react-dom');\\n\\nvar _reactDom2 = _interopRequireDefault(_reactDom);\\n\\nvar _google_map_map = require('./google_map_map');\\n\\nvar _google_map_map2 = _interopRequireDefault(_google_map_map);\\n\\nvar _marker_dispatcher = require('./marker_dispatcher');\\n\\nvar _marker_dispatcher2 = _interopRequireDefault(_marker_dispatcher);\\n\\nvar _google_map_markers = require('./google_map_markers');\\n\\nvar _google_map_markers2 = _interopRequireDefault(_google_map_markers);\\n\\nvar _google_map_markers_prerender = require('./google_map_markers_prerender');\\n\\nvar _google_map_markers_prerender2 = _interopRequireDefault(_google_map_markers_prerender);\\n\\nvar _google_heatmap = require('./google_heatmap');\\n\\nvar _google_map_loader = require('./loaders/google_map_loader');\\n\\nvar _google_map_loader2 = _interopRequireDefault(_google_map_loader);\\n\\nvar _geo = require('./utils/geo');\\n\\nvar _geo2 = _interopRequireDefault(_geo);\\n\\nvar _raf = require('./utils/raf');\\n\\nvar _raf2 = _interopRequireDefault(_raf);\\n\\nvar _pick = require('./utils/pick');\\n\\nvar _pick2 = _interopRequireDefault(_pick);\\n\\nvar _omit = require('./utils/omit');\\n\\nvar _omit2 = _interopRequireDefault(_omit);\\n\\nvar _log = require('./utils/math/log2');\\n\\nvar _log2 = _interopRequireDefault(_log);\\n\\nvar _isEmpty = require('./utils/isEmpty');\\n\\nvar _isEmpty2 = _interopRequireDefault(_isEmpty);\\n\\nvar _isNumber = require('./utils/isNumber');\\n\\nvar _isNumber2 = _interopRequireDefault(_isNumber);\\n\\nvar _detect = require('./utils/detect');\\n\\nvar _detect2 = _interopRequireDefault(_detect);\\n\\nvar _shallowEqual = require('./utils/shallowEqual');\\n\\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\\n\\nvar _isPlainObject = require('./utils/isPlainObject');\\n\\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\\n\\nvar _isArraysEqualEps = require('./utils/isArraysEqualEps');\\n\\nvar _isArraysEqualEps2 = _interopRequireDefault(_isArraysEqualEps);\\n\\nvar _detectElementResize = require('./utils/detectElementResize');\\n\\nvar _detectElementResize2 = _interopRequireDefault(_detectElementResize);\\n\\nvar _passiveEvents = require('./utils/passiveEvents');\\n\\nvar _passiveEvents2 = _interopRequireDefault(_passiveEvents);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable import/no-extraneous-dependencies, react/forbid-prop-types, react/no-find-dom-node, no-console */\\n\\n\\n// helpers\\n\\n\\n// loaders\\n\\n\\n// utils\\n\\n\\n// consts\\nvar kEPS = 0.00001;\\nvar K_GOOGLE_TILE_SIZE = 256;\\n// real minZoom calculated here _getMinZoom\\nvar K_IDLE_TIMEOUT = 100;\\nvar K_IDLE_CLICK_TIMEOUT = 300;\\nvar DEFAULT_MIN_ZOOM = 3;\\n// Starting with version 3.32, the maps API calls `draw()` each frame during\\n// a zoom animation.\\nvar DRAW_CALLED_DURING_ANIMATION_VERSION = 32;\\nvar IS_REACT_16 = _reactDom2.default.createPortal !== undefined;\\n\\nvar createPortal = IS_REACT_16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;\\n\\nfunction defaultOptions_() /* maps */{\\n  return {\\n    overviewMapControl: false,\\n    streetViewControl: false,\\n    rotateControl: true,\\n    mapTypeControl: false,\\n    // disable poi\\n    styles: [{\\n      featureType: 'poi',\\n      elementType: 'labels',\\n      stylers: [{ visibility: 'off' }]\\n    }],\\n    minZoom: DEFAULT_MIN_ZOOM // dynamically recalculted if possible during init\\n  };\\n}\\n\\nvar latLng2Obj = function latLng2Obj(latLng) {\\n  return (0, _isPlainObject2.default)(latLng) ? latLng : { lat: latLng[0], lng: latLng[1] };\\n};\\n\\nvar _checkMinZoom = function _checkMinZoom(zoom, minZoom) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (zoom < minZoom) {\\n      console.warn('GoogleMap: ' + // eslint-disable-line\\n      'minZoom option is less than recommended ' + 'minZoom option for your map sizes.\\\\n' + 'overrided to value ' + minZoom);\\n    }\\n  }\\n\\n  if (minZoom < zoom) {\\n    return zoom;\\n  }\\n  return minZoom;\\n};\\n\\nvar isFullScreen = function isFullScreen() {\\n  return document.fullscreen || document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement;\\n};\\n\\nvar GoogleMap = function (_Component) {\\n  _inherits(GoogleMap, _Component);\\n\\n  // eslint-disable-line\\n\\n  function GoogleMap(props) {\\n    _classCallCheck(this, GoogleMap);\\n\\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\\n\\n    _this._getMinZoom = function () {\\n      if (_this.geoService_.getWidth() > 0 || _this.geoService_.getHeight() > 0) {\\n        var tilesPerWidth = Math.ceil(_this.geoService_.getWidth() / K_GOOGLE_TILE_SIZE) + 2;\\n        var tilesPerHeight = Math.ceil(_this.geoService_.getHeight() / K_GOOGLE_TILE_SIZE) + 2;\\n        var maxTilesPerDim = Math.max(tilesPerWidth, tilesPerHeight);\\n        return Math.ceil((0, _log2.default)(maxTilesPerDim));\\n      }\\n      return DEFAULT_MIN_ZOOM;\\n    };\\n\\n    _this._computeMinZoom = function (minZoom) {\\n      if (!(0, _isEmpty2.default)(minZoom)) {\\n        return minZoom;\\n      }\\n      return _this._getMinZoom();\\n    };\\n\\n    _this._mapDomResizeCallback = function () {\\n      _this.resetSizeOnIdle_ = true;\\n      if (_this.maps_) {\\n        var originalCenter = _this.props.center || _this.props.defaultCenter;\\n        var currentCenter = _this.map_.getCenter();\\n        _this.maps_.event.trigger(_this.map_, 'resize');\\n        _this.map_.setCenter(_this.props.resetBoundsOnResize ? originalCenter : currentCenter);\\n      }\\n    };\\n\\n    _this._setLayers = function (layerTypes) {\\n      layerTypes.forEach(function (layerType) {\\n        _this.layers_[layerType] = new _this.maps_[layerType]();\\n        _this.layers_[layerType].setMap(_this.map_);\\n      });\\n    };\\n\\n    _this._renderPortal = function () {\\n      return _react2.default.createElement(_google_map_markers2.default, {\\n        experimental: _this.props.experimental,\\n        onChildClick: _this._onChildClick,\\n        onChildMouseDown: _this._onChildMouseDown,\\n        onChildMouseEnter: _this._onChildMouseEnter,\\n        onChildMouseLeave: _this._onChildMouseLeave,\\n        geoService: _this.geoService_,\\n        insideMapPanes: true,\\n        distanceToMouse: _this.props.distanceToMouse,\\n        getHoverDistance: _this._getHoverDistance,\\n        dispatcher: _this.markersDispatcher_\\n      });\\n    };\\n\\n    _this._initMap = function () {\\n      // only initialize the map once\\n      if (_this.initialized_) {\\n        return;\\n      }\\n      _this.initialized_ = true;\\n\\n      var propsCenter = latLng2Obj(_this.props.center || _this.props.defaultCenter);\\n      _this.geoService_.setView(propsCenter, _this.props.zoom || _this.props.defaultZoom, 0);\\n\\n      _this._onBoundsChanged(); // now we can calculate map bounds center etc...\\n\\n      var bootstrapURLKeys = _extends({}, _this.props.apiKey && { key: _this.props.apiKey }, _this.props.bootstrapURLKeys);\\n\\n      _this.props.googleMapLoader(bootstrapURLKeys, _this.props.heatmapLibrary).then(function (maps) {\\n        if (!_this.mounted_) {\\n          return;\\n        }\\n\\n        var centerLatLng = _this.geoService_.getCenter();\\n\\n        var propsOptions = {\\n          zoom: _this.props.zoom || _this.props.defaultZoom,\\n          center: new maps.LatLng(centerLatLng.lat, centerLatLng.lng)\\n        };\\n\\n        // Start Heatmap\\n        if (_this.props.heatmap.positions) {\\n          Object.assign(_this, {\\n            heatmap: (0, _google_heatmap.generateHeatmap)(maps, _this.props.heatmap)\\n          });\\n          (0, _google_heatmap.optionsHeatmap)(_this.heatmap, _this.props.heatmap);\\n        }\\n        // End Heatmap\\n\\n        // prevent to exapose full api\\n        // next props must be exposed (console.log(Object.keys(pick(maps, isPlainObject))))\\n        // \\\"Animation\\\", \\\"ControlPosition\\\", \\\"MapTypeControlStyle\\\", \\\"MapTypeId\\\",\\n        // \\\"NavigationControlStyle\\\", \\\"ScaleControlStyle\\\", \\\"StrokePosition\\\",\\n        // \\\"SymbolPath\\\", \\\"ZoomControlStyle\\\",\\n        // \\\"event\\\", \\\"DirectionsStatus\\\", \\\"DirectionsTravelMode\\\", \\\"DirectionsUnitSystem\\\",\\n        // \\\"DistanceMatrixStatus\\\",\\n        // \\\"DistanceMatrixElementStatus\\\", \\\"ElevationStatus\\\", \\\"GeocoderLocationType\\\",\\n        // \\\"GeocoderStatus\\\", \\\"KmlLayerStatus\\\",\\n        // \\\"MaxZoomStatus\\\", \\\"StreetViewStatus\\\", \\\"TransitMode\\\", \\\"TransitRoutePreference\\\",\\n        // \\\"TravelMode\\\", \\\"UnitSystem\\\"\\n        var mapPlainObjects = (0, _pick2.default)(maps, _isPlainObject2.default);\\n        var options = typeof _this.props.options === 'function' ? _this.props.options(mapPlainObjects) : _this.props.options;\\n        var defaultOptions = defaultOptions_(mapPlainObjects);\\n\\n        var draggableOptions = !(0, _isEmpty2.default)(_this.props.draggable) && {\\n          draggable: _this.props.draggable\\n        };\\n\\n        var minZoom = _this._computeMinZoom(options.minZoom);\\n        _this.minZoom_ = minZoom;\\n\\n        var preMapOptions = _extends({}, defaultOptions, {\\n          minZoom: minZoom\\n        }, options, propsOptions);\\n\\n        _this.defaultDraggableOption_ = !(0, _isEmpty2.default)(preMapOptions.draggable) ? preMapOptions.draggable : _this.defaultDraggableOption_;\\n\\n        var mapOptions = _extends({}, preMapOptions, draggableOptions);\\n\\n        mapOptions.minZoom = _checkMinZoom(mapOptions.minZoom, minZoom);\\n\\n        var map = new maps.Map(_reactDom2.default.findDOMNode(_this.googleMapDom_), mapOptions);\\n\\n        _this.map_ = map;\\n        _this.maps_ = maps;\\n\\n        _this._setLayers(_this.props.layerTypes);\\n\\n        // Parse `google.maps.version` to capture the major version number.\\n        var versionMatch = maps.version.match(/^3\\\\.(\\\\d+)\\\\./);\\n        // The major version is the first (and only) captured group.\\n        var mapsVersion = versionMatch && Number(versionMatch[1]);\\n\\n        // render in overlay\\n        var this_ = _this;\\n        var overlay = Object.assign(new maps.OverlayView(), {\\n          onAdd: function onAdd() {\\n            var K_MAX_WIDTH = typeof screen !== 'undefined' ? screen.width + 'px' : '2000px';\\n            var K_MAX_HEIGHT = typeof screen !== 'undefined' ? screen.height + 'px' : '2000px';\\n\\n            var div = document.createElement('div');\\n            div.style.backgroundColor = 'transparent';\\n            div.style.position = 'absolute';\\n            div.style.left = '0px';\\n            div.style.top = '0px';\\n            div.style.width = K_MAX_WIDTH; // prevents some chrome draw defects\\n            div.style.height = K_MAX_HEIGHT;\\n\\n            if (this_.props.overlayViewDivStyle) {\\n              var overlayViewDivStyle = this_.props.overlayViewDivStyle;\\n\\n              if ((typeof overlayViewDivStyle === 'undefined' ? 'undefined' : _typeof(overlayViewDivStyle)) === 'object') {\\n                Object.keys(overlayViewDivStyle).forEach(function (property) {\\n                  div.style[property] = overlayViewDivStyle[property];\\n                });\\n              }\\n            }\\n\\n            var panes = this.getPanes();\\n            panes.overlayMouseTarget.appendChild(div);\\n            this_.geoService_.setMapCanvasProjection(maps, overlay.getProjection());\\n\\n            if (!IS_REACT_16) {\\n              createPortal(this_, this_._renderPortal(), div,\\n              // remove prerendered markers\\n              function () {\\n                return this_.setState({ overlay: div });\\n              });\\n            } else {\\n              this_.setState({ overlay: div });\\n            }\\n          },\\n          onRemove: function onRemove() {\\n            var renderedOverlay = this_.state.overlay;\\n            if (renderedOverlay && !IS_REACT_16) {\\n              _reactDom2.default.unmountComponentAtNode(renderedOverlay);\\n            }\\n            this_.setState({ overlay: null });\\n          },\\n          draw: function draw() {\\n            this_.updateCounter_++;\\n            this_._onBoundsChanged(map, maps, !this_.props.debounced);\\n\\n            if (!this_.googleApiLoadedCalled_) {\\n              this_._onGoogleApiLoaded({ map: map, maps: maps, ref: this_.googleMapDom_ });\\n              this_.googleApiLoadedCalled_ = true;\\n            }\\n\\n            if (this_.mouse_) {\\n              var latLng = this_.geoService_.fromContainerPixelToLatLng(this_.mouse_);\\n              this_.mouse_.lat = latLng.lat;\\n              this_.mouse_.lng = latLng.lng;\\n            }\\n\\n            this_._onChildMouseMove();\\n\\n            if (this_.markersDispatcher_) {\\n              this_.markersDispatcher_.emit('kON_CHANGE');\\n              if (this_.fireMouseEventOnIdle_) {\\n                this_.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\\n              }\\n            }\\n          }\\n        });\\n\\n        _this.overlay_ = overlay;\\n\\n        overlay.setMap(map);\\n        if (_this.props.heatmap.positions) {\\n          _this.heatmap.setMap(map);\\n        }\\n\\n        if (_this.props.onTilesLoaded) {\\n          maps.event.addListener(map, 'tilesloaded', function () {\\n            this_._onTilesLoaded();\\n          });\\n        }\\n\\n        maps.event.addListener(map, 'zoom_changed', function () {\\n          // recalc position at zoom start\\n          if (this_.geoService_.getZoom() !== map.getZoom()) {\\n            if (!this_.zoomAnimationInProgress_) {\\n              this_.zoomAnimationInProgress_ = true;\\n              this_._onZoomAnimationStart(map.zoom);\\n            }\\n\\n            // If draw() is not called each frame during a zoom animation,\\n            // simulate it.\\n            if (mapsVersion < DRAW_CALLED_DURING_ANIMATION_VERSION) {\\n              var TIMEOUT_ZOOM = 300;\\n\\n              if (new Date().getTime() - _this.zoomControlClickTime_ < TIMEOUT_ZOOM) {\\n                // there is strange Google Map Api behavior in chrome when zoom animation of map\\n                // is started only on second raf call, if was click on zoom control\\n                // or +- keys pressed, so i wait for two rafs before change state\\n\\n                // this does not fully prevent animation jump\\n                // but reduce it's occurence probability\\n                (0, _raf2.default)(function () {\\n                  return (0, _raf2.default)(function () {\\n                    this_.updateCounter_++;\\n                    this_._onBoundsChanged(map, maps);\\n                  });\\n                });\\n              } else {\\n                this_.updateCounter_++;\\n                this_._onBoundsChanged(map, maps);\\n              }\\n            }\\n          }\\n        });\\n\\n        maps.event.addListener(map, 'idle', function () {\\n          if (_this.resetSizeOnIdle_) {\\n            _this._setViewSize();\\n            var currMinZoom = _this._computeMinZoom(_this.props.options.minZoom);\\n\\n            if (currMinZoom !== _this.minZoom_) {\\n              _this.minZoom_ = currMinZoom;\\n              map.setOptions({ minZoom: currMinZoom });\\n            }\\n\\n            _this.resetSizeOnIdle_ = false;\\n          }\\n\\n          if (this_.zoomAnimationInProgress_) {\\n            this_.zoomAnimationInProgress_ = false;\\n            this_._onZoomAnimationEnd(map.zoom);\\n          }\\n\\n          this_.updateCounter_++;\\n          this_._onBoundsChanged(map, maps);\\n\\n          this_.dragTime_ = 0;\\n\\n          if (this_.markersDispatcher_) {\\n            this_.markersDispatcher_.emit('kON_CHANGE');\\n          }\\n        });\\n\\n        maps.event.addListener(map, 'mouseover', function () {\\n          // has advantage over div MouseLeave\\n          this_.mouseInMap_ = true;\\n        });\\n\\n        // an alternative way to know the mouse is back within the map\\n        // This would not fire when clicking/interacting with google maps\\n        // own on-map countrols+markers. This handles an edge case for touch devices\\n        // + 'draggable:false' custom option. See #332 for more details.\\n        maps.event.addListener(map, 'click', function () {\\n          this_.mouseInMap_ = true;\\n        });\\n\\n        maps.event.addListener(map, 'mouseout', function () {\\n          // has advantage over div MouseLeave\\n          this_.mouseInMap_ = false;\\n          this_.mouse_ = null;\\n          this_.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\\n        });\\n\\n        maps.event.addListener(map, 'drag', function () {\\n          this_.dragTime_ = new Date().getTime();\\n          this_._onDrag(map);\\n        });\\n\\n        maps.event.addListener(map, 'dragend', function () {\\n          // 'dragend' fires on mouse release.\\n          // 'idle' listener waits until drag inertia ends before firing `onDragEnd`\\n          var idleListener = maps.event.addListener(map, 'idle', function () {\\n            maps.event.removeListener(idleListener);\\n            this_._onDragEnd(map);\\n          });\\n        });\\n        // user choosing satellite vs roads, etc\\n        maps.event.addListener(map, 'maptypeid_changed', function () {\\n          this_._onMapTypeIdChange(map.getMapTypeId());\\n        });\\n      }).catch(function (e) {\\n        // notify callback of load failure\\n        _this._onGoogleApiLoaded({\\n          map: null,\\n          maps: null,\\n          ref: _this.googleMapDom_\\n        });\\n        console.error(e); // eslint-disable-line no-console\\n        throw e;\\n      });\\n    };\\n\\n    _this._onGoogleApiLoaded = function () {\\n      if (_this.props.onGoogleApiLoaded) {\\n        var _this$props;\\n\\n        if (process.env.NODE_ENV !== 'production' && _this.props.yesIWantToUseGoogleMapApiInternals !== true) {\\n          console.warn('GoogleMap: ' + // eslint-disable-line\\n          'Usage of internal api objects is dangerous ' + 'and can cause a lot of issues.\\\\n' + 'To hide this warning add yesIWantToUseGoogleMapApiInternals={true} ' + 'to <GoogleMap instance');\\n        }\\n\\n        (_this$props = _this.props).onGoogleApiLoaded.apply(_this$props, arguments);\\n      }\\n    };\\n\\n    _this._getHoverDistance = function () {\\n      return _this.props.hoverDistance;\\n    };\\n\\n    _this._onDrag = function () {\\n      var _this$props2;\\n\\n      return _this.props.onDrag && (_this$props2 = _this.props).onDrag.apply(_this$props2, arguments);\\n    };\\n\\n    _this._onDragEnd = function () {\\n      var _this$props3;\\n\\n      return _this.props.onDragEnd && (_this$props3 = _this.props).onDragEnd.apply(_this$props3, arguments);\\n    };\\n\\n    _this._onMapTypeIdChange = function () {\\n      var _this$props4;\\n\\n      return _this.props.onMapTypeIdChange && (_this$props4 = _this.props).onMapTypeIdChange.apply(_this$props4, arguments);\\n    };\\n\\n    _this._onZoomAnimationStart = function () {\\n      var _this$props5;\\n\\n      return _this.props.onZoomAnimationStart && (_this$props5 = _this.props).onZoomAnimationStart.apply(_this$props5, arguments);\\n    };\\n\\n    _this._onZoomAnimationEnd = function () {\\n      var _this$props6;\\n\\n      return _this.props.onZoomAnimationEnd && (_this$props6 = _this.props).onZoomAnimationEnd.apply(_this$props6, arguments);\\n    };\\n\\n    _this._onTilesLoaded = function () {\\n      return _this.props.onTilesLoaded && _this.props.onTilesLoaded();\\n    };\\n\\n    _this._onChildClick = function () {\\n      if (_this.props.onChildClick) {\\n        var _this$props7;\\n\\n        return (_this$props7 = _this.props).onChildClick.apply(_this$props7, arguments);\\n      }\\n      return undefined;\\n    };\\n\\n    _this._onChildMouseDown = function (hoverKey, childProps) {\\n      _this.childMouseDownArgs_ = [hoverKey, childProps];\\n      if (_this.props.onChildMouseDown) {\\n        _this.props.onChildMouseDown(hoverKey, childProps, _extends({}, _this.mouse_));\\n      }\\n    };\\n\\n    _this._onChildMouseUp = function () {\\n      if (_this.childMouseDownArgs_) {\\n        if (_this.props.onChildMouseUp) {\\n          var _this$props8;\\n\\n          (_this$props8 = _this.props).onChildMouseUp.apply(_this$props8, _this.childMouseDownArgs_.concat([_extends({}, _this.mouse_)]));\\n        }\\n        _this.childMouseDownArgs_ = null;\\n        _this.childMouseUpTime_ = new Date().getTime();\\n      }\\n    };\\n\\n    _this._onChildMouseMove = function () {\\n      if (_this.childMouseDownArgs_) {\\n        if (_this.props.onChildMouseMove) {\\n          var _this$props9;\\n\\n          (_this$props9 = _this.props).onChildMouseMove.apply(_this$props9, _this.childMouseDownArgs_.concat([_extends({}, _this.mouse_)]));\\n        }\\n      }\\n    };\\n\\n    _this._onChildMouseEnter = function () {\\n      if (_this.props.onChildMouseEnter) {\\n        var _this$props10;\\n\\n        return (_this$props10 = _this.props).onChildMouseEnter.apply(_this$props10, arguments);\\n      }\\n      return undefined;\\n    };\\n\\n    _this._onChildMouseLeave = function () {\\n      if (_this.props.onChildMouseLeave) {\\n        var _this$props11;\\n\\n        return (_this$props11 = _this.props).onChildMouseLeave.apply(_this$props11, arguments);\\n      }\\n      return undefined;\\n    };\\n\\n    _this._setViewSize = function () {\\n      if (!_this.mounted_) return;\\n      if (isFullScreen()) {\\n        _this.geoService_.setViewSize(window.innerWidth, window.innerHeight);\\n      } else {\\n        var mapDom = _reactDom2.default.findDOMNode(_this.googleMapDom_);\\n        _this.geoService_.setViewSize(mapDom.clientWidth, mapDom.clientHeight);\\n      }\\n      _this._onBoundsChanged();\\n    };\\n\\n    _this._onWindowResize = function () {\\n      _this.resetSizeOnIdle_ = true;\\n    };\\n\\n    _this._onMapMouseMove = function (e) {\\n      if (!_this.mouseInMap_) return;\\n\\n      var currTime = new Date().getTime();\\n      var K_RECALC_CLIENT_RECT_MS = 50;\\n\\n      if (currTime - _this.mouseMoveTime_ > K_RECALC_CLIENT_RECT_MS) {\\n        _this.boundingRect_ = e.currentTarget.getBoundingClientRect();\\n      }\\n      _this.mouseMoveTime_ = currTime;\\n\\n      var mousePosX = e.clientX - _this.boundingRect_.left;\\n      var mousePosY = e.clientY - _this.boundingRect_.top;\\n\\n      if (!_this.mouse_) {\\n        _this.mouse_ = { x: 0, y: 0, lat: 0, lng: 0 };\\n      }\\n\\n      _this.mouse_.x = mousePosX;\\n      _this.mouse_.y = mousePosY;\\n\\n      var latLng = _this.geoService_.fromContainerPixelToLatLng(_this.mouse_);\\n      _this.mouse_.lat = latLng.lat;\\n      _this.mouse_.lng = latLng.lng;\\n\\n      _this._onChildMouseMove();\\n\\n      if (currTime - _this.dragTime_ < K_IDLE_TIMEOUT) {\\n        _this.fireMouseEventOnIdle_ = true;\\n      } else {\\n        _this.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\\n        _this.fireMouseEventOnIdle_ = false;\\n      }\\n    };\\n\\n    _this._onClick = function () {\\n      var _this$props12;\\n\\n      return _this.props.onClick && !_this.childMouseDownArgs_ && new Date().getTime() - _this.childMouseUpTime_ > K_IDLE_CLICK_TIMEOUT && _this.dragTime_ === 0 && (_this$props12 = _this.props).onClick.apply(_this$props12, arguments);\\n    };\\n\\n    _this._onMapClick = function (event) {\\n      if (_this.markersDispatcher_) {\\n        // support touch events and recalculate mouse position on click\\n        _this._onMapMouseMove(event);\\n        var currTime = new Date().getTime();\\n        if (currTime - _this.dragTime_ > K_IDLE_TIMEOUT) {\\n          if (_this.mouse_) {\\n            _this._onClick(_extends({}, _this.mouse_, {\\n              event: event\\n            }));\\n          }\\n\\n          _this.markersDispatcher_.emit('kON_CLICK', event);\\n        }\\n      }\\n    };\\n\\n    _this._onMapMouseDownNative = function (event) {\\n      if (!_this.mouseInMap_) return;\\n\\n      _this._onMapMouseDown(event);\\n    };\\n\\n    _this._onMapMouseDown = function (event) {\\n      if (_this.markersDispatcher_) {\\n        var currTime = new Date().getTime();\\n        if (currTime - _this.dragTime_ > K_IDLE_TIMEOUT) {\\n          // Hovered marker detected at mouse move could be deleted at mouse down time\\n          // so it will be good to force hovered marker recalculation\\n          _this._onMapMouseMove(event);\\n          _this.markersDispatcher_.emit('kON_MDOWN', event);\\n        }\\n      }\\n    };\\n\\n    _this._onMapMouseDownCapture = function () {\\n      if ((0, _detect2.default)().isChrome) {\\n        // to fix strange zoom in chrome\\n        _this.zoomControlClickTime_ = new Date().getTime();\\n      }\\n    };\\n\\n    _this._onKeyDownCapture = function () {\\n      if ((0, _detect2.default)().isChrome) {\\n        _this.zoomControlClickTime_ = new Date().getTime();\\n      }\\n    };\\n\\n    _this._isCenterDefined = function (center) {\\n      return center && ((0, _isPlainObject2.default)(center) && (0, _isNumber2.default)(center.lat) && (0, _isNumber2.default)(center.lng) || center.length === 2 && (0, _isNumber2.default)(center[0]) && (0, _isNumber2.default)(center[1]));\\n    };\\n\\n    _this._onBoundsChanged = function (map, maps, callExtBoundsChange) {\\n      if (map) {\\n        var gmC = map.getCenter();\\n        _this.geoService_.setView([gmC.lat(), gmC.lng()], map.getZoom(), 0);\\n      }\\n\\n      if ((_this.props.onChange || _this.props.onBoundsChange) && _this.geoService_.canProject()) {\\n        var zoom = _this.geoService_.getZoom();\\n        var bounds = _this.geoService_.getBounds();\\n        var centerLatLng = _this.geoService_.getCenter();\\n\\n        if (!(0, _isArraysEqualEps2.default)(bounds, _this.prevBounds_, kEPS)) {\\n          if (callExtBoundsChange !== false) {\\n            var marginBounds = _this.geoService_.getBounds(_this.props.margin);\\n            if (_this.props.onBoundsChange) {\\n              _this.props.onBoundsChange(_this.centerIsObject_ ? _extends({}, centerLatLng) : [centerLatLng.lat, centerLatLng.lng], zoom, bounds, marginBounds);\\n            }\\n\\n            if (_this.props.onChange) {\\n              _this.props.onChange({\\n                center: _extends({}, centerLatLng),\\n                zoom: zoom,\\n                bounds: {\\n                  nw: {\\n                    lat: bounds[0],\\n                    lng: bounds[1]\\n                  },\\n                  se: {\\n                    lat: bounds[2],\\n                    lng: bounds[3]\\n                  },\\n                  sw: {\\n                    lat: bounds[4],\\n                    lng: bounds[5]\\n                  },\\n                  ne: {\\n                    lat: bounds[6],\\n                    lng: bounds[7]\\n                  }\\n                },\\n                marginBounds: {\\n                  nw: {\\n                    lat: marginBounds[0],\\n                    lng: marginBounds[1]\\n                  },\\n                  se: {\\n                    lat: marginBounds[2],\\n                    lng: marginBounds[3]\\n                  },\\n                  sw: {\\n                    lat: marginBounds[4],\\n                    lng: marginBounds[5]\\n                  },\\n                  ne: {\\n                    lat: marginBounds[6],\\n                    lng: marginBounds[7]\\n                  }\\n                },\\n\\n                size: _this.geoService_.hasSize() ? {\\n                  width: _this.geoService_.getWidth(),\\n                  height: _this.geoService_.getHeight()\\n                } : {\\n                  width: 0,\\n                  height: 0\\n                }\\n              });\\n            }\\n\\n            _this.prevBounds_ = bounds;\\n          }\\n        }\\n      }\\n    };\\n\\n    _this._registerChild = function (ref) {\\n      _this.googleMapDom_ = ref;\\n    };\\n\\n    _this.mounted_ = false;\\n    _this.initialized_ = false;\\n    _this.googleApiLoadedCalled_ = false;\\n\\n    _this.map_ = null;\\n    _this.maps_ = null;\\n    _this.prevBounds_ = null;\\n    _this.heatmap = null;\\n\\n    _this.layers_ = {};\\n\\n    _this.mouse_ = null;\\n    _this.mouseMoveTime_ = 0;\\n    _this.boundingRect_ = null;\\n    _this.mouseInMap_ = true;\\n\\n    _this.dragTime_ = 0;\\n    _this.fireMouseEventOnIdle_ = false;\\n    _this.updateCounter_ = 0;\\n\\n    _this.markersDispatcher_ = new _marker_dispatcher2.default(_this);\\n    _this.geoService_ = new _geo2.default(K_GOOGLE_TILE_SIZE);\\n    _this.centerIsObject_ = (0, _isPlainObject2.default)(_this.props.center);\\n\\n    _this.minZoom_ = DEFAULT_MIN_ZOOM;\\n    _this.defaultDraggableOption_ = true;\\n\\n    _this.zoomControlClickTime_ = 0;\\n\\n    _this.childMouseDownArgs_ = null;\\n    _this.childMouseUpTime_ = 0;\\n\\n    _this.googleMapDom_ = null;\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (_this.props.apiKey) {\\n        console.warn('GoogleMap: ' + // eslint-disable-line no-console\\n        'apiKey is deprecated, use ' + 'bootstrapURLKeys={{key: YOUR_API_KEY}} instead.');\\n      }\\n\\n      if (_this.props.onBoundsChange) {\\n        console.warn('GoogleMap: ' + // eslint-disable-line no-console\\n        'onBoundsChange is deprecated, use ' + 'onChange({center, zoom, bounds, ...other}) instead.');\\n      }\\n\\n      if ((0, _isEmpty2.default)(_this.props.center) && (0, _isEmpty2.default)(_this.props.defaultCenter)) {\\n        console.warn('GoogleMap: center or defaultCenter property must be defined' // eslint-disable-line no-console\\n        );\\n      }\\n\\n      if ((0, _isEmpty2.default)(_this.props.zoom) && (0, _isEmpty2.default)(_this.props.defaultZoom)) {\\n        console.warn('GoogleMap: zoom or defaultZoom property must be defined' // eslint-disable-line no-console\\n        );\\n      }\\n    }\\n\\n    if (_this._isCenterDefined(_this.props.center || _this.props.defaultCenter)) {\\n      var propsCenter = latLng2Obj(_this.props.center || _this.props.defaultCenter);\\n      _this.geoService_.setView(propsCenter, _this.props.zoom || _this.props.defaultZoom, 0);\\n    }\\n\\n    _this.zoomAnimationInProgress_ = false;\\n\\n    _this.state = {\\n      overlay: null\\n    };\\n    return _this;\\n  }\\n\\n  GoogleMap.prototype.componentDidMount = function componentDidMount() {\\n    var _this2 = this;\\n\\n    this.mounted_ = true;\\n    (0, _passiveEvents2.default)(window, 'resize', this._onWindowResize, false);\\n    (0, _passiveEvents2.default)(window, 'keydown', this._onKeyDownCapture, true);\\n    var mapDom = _reactDom2.default.findDOMNode(this.googleMapDom_);\\n    // gmap can't prevent map drag if mousedown event already occured\\n    // the only workaround I find is prevent mousedown native browser event\\n\\n    if (mapDom) {\\n      (0, _passiveEvents2.default)(mapDom, 'mousedown', this._onMapMouseDownNative, true);\\n    }\\n\\n    (0, _passiveEvents2.default)(window, 'mouseup', this._onChildMouseUp, false);\\n    var bootstrapURLKeys = _extends({}, this.props.apiKey && { key: this.props.apiKey }, this.props.bootstrapURLKeys);\\n\\n    this.props.googleMapLoader(bootstrapURLKeys, this.props.heatmapLibrary); // we can start load immediatly\\n\\n    setTimeout(function () {\\n      // to detect size\\n      _this2._setViewSize();\\n      if (_this2._isCenterDefined(_this2.props.center || _this2.props.defaultCenter)) {\\n        _this2._initMap();\\n      }\\n    }, 0, this);\\n    if (this.props.resetBoundsOnResize) {\\n      var that = this;\\n      _detectElementResize2.default.addResizeListener(mapDom, that._mapDomResizeCallback);\\n    }\\n  };\\n\\n  GoogleMap.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\\n    var _this3 = this;\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (!(0, _shallowEqual2.default)(this.props.defaultCenter, nextProps.defaultCenter)) {\\n        console.warn(\\\"GoogleMap: defaultCenter prop changed. You can't change default props.\\\");\\n      }\\n\\n      if (!(0, _shallowEqual2.default)(this.props.defaultZoom, nextProps.defaultZoom)) {\\n        console.warn(\\\"GoogleMap: defaultZoom prop changed. You can't change default props.\\\");\\n      }\\n    }\\n\\n    if (!this._isCenterDefined(this.props.center) && this._isCenterDefined(nextProps.center)) {\\n      setTimeout(function () {\\n        return _this3._initMap();\\n      }, 0);\\n    }\\n\\n    if (this.map_) {\\n      var centerLatLng = this.geoService_.getCenter();\\n      if (this._isCenterDefined(nextProps.center)) {\\n        var nextPropsCenter = latLng2Obj(nextProps.center);\\n        var currCenter = this._isCenterDefined(this.props.center) ? latLng2Obj(this.props.center) : null;\\n\\n        if (!currCenter || Math.abs(nextPropsCenter.lat - currCenter.lat) + Math.abs(nextPropsCenter.lng - currCenter.lng) > kEPS) {\\n          if (Math.abs(nextPropsCenter.lat - centerLatLng.lat) + Math.abs(nextPropsCenter.lng - centerLatLng.lng) > kEPS) {\\n            this.map_.panTo({\\n              lat: nextPropsCenter.lat,\\n              lng: nextPropsCenter.lng\\n            });\\n          }\\n        }\\n      }\\n\\n      if (!(0, _isEmpty2.default)(nextProps.zoom)) {\\n        // if zoom chaged by user\\n        if (Math.abs(nextProps.zoom - this.props.zoom) > 0) {\\n          this.map_.setZoom(nextProps.zoom);\\n        }\\n      }\\n\\n      if (!(0, _isEmpty2.default)(this.props.draggable) && (0, _isEmpty2.default)(nextProps.draggable)) {\\n        // reset to default\\n        this.map_.setOptions({ draggable: this.defaultDraggableOption_ });\\n      } else if (!(0, _shallowEqual2.default)(this.props.draggable, nextProps.draggable)) {\\n        // also prevent this on window 'mousedown' event to prevent map move\\n        this.map_.setOptions({ draggable: nextProps.draggable });\\n      }\\n\\n      // use shallowEqual to try avoid calling map._setOptions if only the ref changes\\n      if (!(0, _isEmpty2.default)(nextProps.options) && !(0, _shallowEqual2.default)(this.props.options, nextProps.options)) {\\n        var mapPlainObjects = (0, _pick2.default)(this.maps_, _isPlainObject2.default);\\n        var options = typeof nextProps.options === 'function' ? nextProps.options(mapPlainObjects) : nextProps.options;\\n        // remove zoom, center and draggable options as these are managed by google-maps-react\\n        options = (0, _omit2.default)(options, ['zoom', 'center', 'draggable']);\\n\\n        if ('minZoom' in options) {\\n          var minZoom = this._computeMinZoom(options.minZoom);\\n          options.minZoom = _checkMinZoom(options.minZoom, minZoom);\\n        }\\n\\n        this.map_.setOptions(options);\\n      }\\n\\n      if (!(0, _shallowEqual2.default)(nextProps.layerTypes, this.props.layerTypes)) {\\n        Object.keys(this.layers_).forEach(function (layerKey) {\\n          _this3.layers_[layerKey].setMap(null);\\n          delete _this3.layers_[layerKey];\\n        });\\n        this._setLayers(nextProps.layerTypes);\\n      }\\n\\n      if (this.heatmap && !(0, _shallowEqual2.default)(nextProps.heatmap.positions, this.props.heatmap.positions)) {\\n        this.heatmap.setData(nextProps.heatmap.positions.map(function (p) {\\n          return {\\n            location: new _this3.maps_.LatLng(p.lat, p.lng),\\n            weight: p.weight\\n          };\\n        }));\\n      }\\n    }\\n  };\\n\\n  GoogleMap.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\\n    // draggable does not affect inner components\\n    return !(0, _shallowEqual2.default)((0, _omit2.default)(this.props, ['draggable']), (0, _omit2.default)(nextProps, ['draggable'])) || !(0, _shallowEqual2.default)(this.state, nextState);\\n  };\\n\\n  GoogleMap.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\\n    this.markersDispatcher_.emit('kON_CHANGE');\\n\\n    if (!(0, _shallowEqual2.default)(this.props.hoverDistance, prevProps.hoverDistance)) {\\n      this.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');\\n    }\\n  };\\n\\n  GoogleMap.prototype.componentWillUnmount = function componentWillUnmount() {\\n    this.mounted_ = false;\\n    var mapDom = _reactDom2.default.findDOMNode(this.googleMapDom_);\\n    if (mapDom) {\\n      mapDom.removeEventListener('mousedown', this._onMapMouseDownNative, true);\\n    }\\n    window.removeEventListener('resize', this._onWindowResize);\\n    window.removeEventListener('keydown', this._onKeyDownCapture);\\n    window.removeEventListener('mouseup', this._onChildMouseUp, false);\\n    if (this.props.resetBoundsOnResize) {\\n      _detectElementResize2.default.removeResizeListener(mapDom, this._mapDomResizeCallback);\\n    }\\n\\n    if (this.overlay_) {\\n      // this triggers overlay_.onRemove(), which will unmount the <GoogleMapMarkers/>\\n      this.overlay_.setMap(null);\\n    }\\n\\n    if (this.maps_ && this.map_ && this.props.shouldUnregisterMapOnUnmount) {\\n      // fix google, as otherwise listeners works even without map\\n      this.map_.setOptions({ scrollwheel: false });\\n      this.maps_.event.clearInstanceListeners(this.map_);\\n    }\\n\\n    if (this.props.shouldUnregisterMapOnUnmount) {\\n      this.map_ = null;\\n      this.maps_ = null;\\n    }\\n    this.markersDispatcher_.dispose();\\n\\n    this.resetSizeOnIdle_ = false;\\n\\n    if (this.props.shouldUnregisterMapOnUnmount) {\\n      delete this.map_;\\n      delete this.markersDispatcher_;\\n    }\\n  };\\n  // calc minZoom if map size available\\n  // it's better to not set minZoom less than this calculation gives\\n  // otherwise there is no homeomorphism between screen coordinates and map\\n  // (one map coordinate can have different screen coordinates)\\n\\n\\n  // this method works only if this.props.onChildMouseDown was called\\n\\n\\n  // this method works only if this.props.onChildMouseDown was called\\n\\n\\n  // K_IDLE_CLICK_TIMEOUT - looks like 300 is enough\\n\\n\\n  // gmap can't prevent map drag if mousedown event already occured\\n  // the only workaround I find is prevent mousedown native browser event\\n\\n\\n  GoogleMap.prototype.render = function render() {\\n    var overlay = this.state.overlay;\\n    var mapMarkerPrerender = !overlay ? _react2.default.createElement(_google_map_markers_prerender2.default, {\\n      experimental: this.props.experimental,\\n      onChildClick: this._onChildClick,\\n      onChildMouseDown: this._onChildMouseDown,\\n      onChildMouseEnter: this._onChildMouseEnter,\\n      onChildMouseLeave: this._onChildMouseLeave,\\n      geoService: this.geoService_,\\n      insideMapPanes: false,\\n      distanceToMouse: this.props.distanceToMouse,\\n      getHoverDistance: this._getHoverDistance,\\n      dispatcher: this.markersDispatcher_\\n    }) : null;\\n\\n    return _react2.default.createElement(\\n      'div',\\n      {\\n        style: this.props.style,\\n        onMouseMove: this._onMapMouseMove,\\n        onMouseDownCapture: this._onMapMouseDownCapture,\\n        onClick: this._onMapClick\\n      },\\n      _react2.default.createElement(_google_map_map2.default, { registerChild: this._registerChild }),\\n      IS_REACT_16 && overlay && createPortal(this._renderPortal(), overlay),\\n      mapMarkerPrerender\\n    );\\n  };\\n\\n  return GoogleMap;\\n}(_react.Component);\\n\\nGoogleMap.propTypes = {\\n  apiKey: _propTypes2.default.string,\\n  bootstrapURLKeys: _propTypes2.default.any,\\n\\n  defaultCenter: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.shape({\\n    lat: _propTypes2.default.number,\\n    lng: _propTypes2.default.number\\n  })]),\\n  center: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.shape({\\n    lat: _propTypes2.default.number,\\n    lng: _propTypes2.default.number\\n  })]),\\n  defaultZoom: _propTypes2.default.number,\\n  zoom: _propTypes2.default.number,\\n  onBoundsChange: _propTypes2.default.func,\\n  onChange: _propTypes2.default.func,\\n  onClick: _propTypes2.default.func,\\n  onChildClick: _propTypes2.default.func,\\n  onChildMouseDown: _propTypes2.default.func,\\n  onChildMouseUp: _propTypes2.default.func,\\n  onChildMouseMove: _propTypes2.default.func,\\n  onChildMouseEnter: _propTypes2.default.func,\\n  onChildMouseLeave: _propTypes2.default.func,\\n  onZoomAnimationStart: _propTypes2.default.func,\\n  onZoomAnimationEnd: _propTypes2.default.func,\\n  onDrag: _propTypes2.default.func,\\n  onDragEnd: _propTypes2.default.func,\\n  onMapTypeIdChange: _propTypes2.default.func,\\n  onTilesLoaded: _propTypes2.default.func,\\n  options: _propTypes2.default.any,\\n  distanceToMouse: _propTypes2.default.func,\\n  hoverDistance: _propTypes2.default.number,\\n  debounced: _propTypes2.default.bool,\\n  margin: _propTypes2.default.array,\\n  googleMapLoader: _propTypes2.default.any,\\n  onGoogleApiLoaded: _propTypes2.default.func,\\n  yesIWantToUseGoogleMapApiInternals: _propTypes2.default.bool,\\n  draggable: _propTypes2.default.bool,\\n  style: _propTypes2.default.any,\\n  resetBoundsOnResize: _propTypes2.default.bool,\\n  layerTypes: _propTypes2.default.arrayOf(_propTypes2.default.string), // ['TransitLayer', 'TrafficLayer']\\n  shouldUnregisterMapOnUnmount: _propTypes2.default.bool\\n};\\nGoogleMap.defaultProps = {\\n  distanceToMouse: function distanceToMouse(pt, mousePos /* , markerProps */) {\\n    return Math.sqrt((pt.x - mousePos.x) * (pt.x - mousePos.x) + (pt.y - mousePos.y) * (pt.y - mousePos.y));\\n  },\\n\\n  hoverDistance: 30,\\n  debounced: true,\\n  options: defaultOptions_,\\n  googleMapLoader: _google_map_loader2.default,\\n  yesIWantToUseGoogleMapApiInternals: false,\\n  style: {\\n    width: '100%',\\n    height: '100%',\\n    margin: 0,\\n    padding: 0,\\n    position: 'relative'\\n  },\\n  layerTypes: [],\\n  heatmap: {},\\n  heatmapLibrary: false,\\n  shouldUnregisterMapOnUnmount: true\\n};\\nGoogleMap.googleMapLoader = _google_map_loader2.default;\\nexports.default = GoogleMap;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"_possibleConstructorReturn\",\"self\",\"call\",\"ReferenceError\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"prototype\",\"Object\",\"create\",\"constructor\",\"value\",\"enumerable\",\"writable\",\"configurable\",\"setPrototypeOf\",\"__proto__\",\"defaultOptions_\",\"overviewMapControl\",\"streetViewControl\",\"rotateControl\",\"mapTypeControl\",\"styles\",\"featureType\",\"elementType\",\"stylers\",\"visibility\",\"minZoom\",\"DEFAULT_MIN_ZOOM\",\"_typeof\",\"Symbol\",\"iterator\",\"_extends\",\"assign\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"hasOwnProperty\",\"_react\",\"_react2\",\"_propTypes\",\"_propTypes2\",\"_reactDom\",\"_reactDom2\",\"_google_map_map\",\"_google_map_map2\",\"_marker_dispatcher\",\"_marker_dispatcher2\",\"_google_map_markers\",\"_google_map_markers2\",\"_google_map_markers_prerender\",\"_google_map_markers_prerender2\",\"_google_heatmap\",\"_google_map_loader\",\"_google_map_loader2\",\"_geo\",\"_geo2\",\"_raf\",\"_raf2\",\"_pick\",\"_pick2\",\"_omit\",\"_omit2\",\"_log\",\"_log2\",\"_isEmpty\",\"_isEmpty2\",\"_isNumber\",\"_isNumber2\",\"_detect\",\"_detect2\",\"_shallowEqual\",\"_shallowEqual2\",\"_isPlainObject\",\"_isPlainObject2\",\"_isArraysEqualEps\",\"_isArraysEqualEps2\",\"_detectElementResize\",\"_detectElementResize2\",\"_passiveEvents\",\"_passiveEvents2\",\"IS_REACT_16\",\"undefined\",\"createPortal\",\"unstable_renderSubtreeIntoContainer\",\"latLng2Obj\",\"latLng\",\"lat\",\"lng\",\"_checkMinZoom\",\"zoom\",\"console\",\"warn\",\"GoogleMap\",\"_Component\",\"props\",\"instance\",\"_this\",\"_getMinZoom\",\"_this._getMinZoom\",\"geoService_\",\"getWidth\",\"getHeight\",\"tilesPerWidth\",\"Math\",\"ceil\",\"K_GOOGLE_TILE_SIZE\",\"tilesPerHeight\",\"maxTilesPerDim\",\"max\",\"_computeMinZoom\",\"_this._computeMinZoom\",\"_mapDomResizeCallback\",\"_this._mapDomResizeCallback\",\"resetSizeOnIdle_\",\"maps_\",\"originalCenter\",\"center\",\"defaultCenter\",\"currentCenter\",\"map_\",\"getCenter\",\"event\",\"trigger\",\"setCenter\",\"resetBoundsOnResize\",\"_setLayers\",\"_this._setLayers\",\"layerTypes\",\"forEach\",\"layerType\",\"layers_\",\"setMap\",\"_renderPortal\",\"_this._renderPortal\",\"createElement\",\"experimental\",\"onChildClick\",\"_onChildClick\",\"onChildMouseDown\",\"_onChildMouseDown\",\"onChildMouseEnter\",\"_onChildMouseEnter\",\"onChildMouseLeave\",\"_onChildMouseLeave\",\"geoService\",\"insideMapPanes\",\"distanceToMouse\",\"getHoverDistance\",\"_getHoverDistance\",\"dispatcher\",\"markersDispatcher_\",\"_initMap\",\"_this._initMap\",\"initialized_\",\"propsCenter\",\"setView\",\"defaultZoom\",\"_onBoundsChanged\",\"bootstrapURLKeys\",\"apiKey\",\"googleMapLoader\",\"heatmapLibrary\",\"then\",\"maps\",\"mounted_\",\"centerLatLng\",\"propsOptions\",\"LatLng\",\"heatmap\",\"positions\",\"generateHeatmap\",\"optionsHeatmap\",\"mapPlainObjects\",\"options\",\"defaultOptions\",\"draggableOptions\",\"draggable\",\"minZoom_\",\"preMapOptions\",\"defaultDraggableOption_\",\"mapOptions\",\"map\",\"Map\",\"findDOMNode\",\"googleMapDom_\",\"mapsVersion\",\"versionMatch\",\"version\",\"match\",\"Number\",\"overlay\",\"OverlayView\",\"onAdd\",\"K_MAX_WIDTH\",\"screen\",\"width\",\"K_MAX_HEIGHT\",\"height\",\"div\",\"document\",\"style\",\"backgroundColor\",\"position\",\"left\",\"top\",\"overlayViewDivStyle\",\"keys\",\"property\",\"getPanes\",\"panes\",\"overlayMouseTarget\",\"appendChild\",\"setMapCanvasProjection\",\"getProjection\",\"setState\",\"onRemove\",\"renderedOverlay\",\"state\",\"unmountComponentAtNode\",\"draw\",\"updateCounter_\",\"debounced\",\"googleApiLoadedCalled_\",\"_onGoogleApiLoaded\",\"ref\",\"mouse_\",\"fromContainerPixelToLatLng\",\"_onChildMouseMove\",\"emit\",\"fireMouseEventOnIdle_\",\"overlay_\",\"onTilesLoaded\",\"addListener\",\"_onTilesLoaded\",\"getZoom\",\"zoomAnimationInProgress_\",\"_onZoomAnimationStart\",\"DRAW_CALLED_DURING_ANIMATION_VERSION\",\"TIMEOUT_ZOOM\",\"getTime\",\"Date\",\"zoomControlClickTime_\",\"_setViewSize\",\"currMinZoom\",\"setOptions\",\"_onZoomAnimationEnd\",\"dragTime_\",\"mouseInMap_\",\"_onDrag\",\"idleListener\",\"removeListener\",\"_onDragEnd\",\"_onMapTypeIdChange\",\"getMapTypeId\",\"catch\",\"e\",\"error\",\"_this._onGoogleApiLoaded\",\"onGoogleApiLoaded\",\"_this$props\",\"yesIWantToUseGoogleMapApiInternals\",\"apply\",\"_this._getHoverDistance\",\"hoverDistance\",\"_this._onDrag\",\"_this$props2\",\"onDrag\",\"_this._onDragEnd\",\"_this$props3\",\"onDragEnd\",\"_this._onMapTypeIdChange\",\"_this$props4\",\"onMapTypeIdChange\",\"_this._onZoomAnimationStart\",\"_this$props5\",\"onZoomAnimationStart\",\"_this._onZoomAnimationEnd\",\"_this$props6\",\"onZoomAnimationEnd\",\"_this._onTilesLoaded\",\"_this._onChildClick\",\"_this$props7\",\"_this._onChildMouseDown\",\"hoverKey\",\"childProps\",\"childMouseDownArgs_\",\"_onChildMouseUp\",\"_this._onChildMouseUp\",\"onChildMouseUp\",\"_this$props8\",\"concat\",\"childMouseUpTime_\",\"_this._onChildMouseMove\",\"onChildMouseMove\",\"_this$props9\",\"_this._onChildMouseEnter\",\"_this$props10\",\"_this._onChildMouseLeave\",\"_this$props11\",\"_this._setViewSize\",\"fullscreen\",\"webkitIsFullScreen\",\"mozFullScreen\",\"msFullscreenElement\",\"setViewSize\",\"window\",\"innerWidth\",\"innerHeight\",\"mapDom\",\"clientWidth\",\"clientHeight\",\"_onWindowResize\",\"_this._onWindowResize\",\"_onMapMouseMove\",\"_this._onMapMouseMove\",\"currTime\",\"K_RECALC_CLIENT_RECT_MS\",\"mouseMoveTime_\",\"boundingRect_\",\"currentTarget\",\"getBoundingClientRect\",\"mousePosX\",\"clientX\",\"mousePosY\",\"clientY\",\"x\",\"y\",\"K_IDLE_TIMEOUT\",\"_onClick\",\"_this._onClick\",\"_this$props12\",\"onClick\",\"K_IDLE_CLICK_TIMEOUT\",\"_onMapClick\",\"_this._onMapClick\",\"_onMapMouseDownNative\",\"_this._onMapMouseDownNative\",\"_onMapMouseDown\",\"_this._onMapMouseDown\",\"_onMapMouseDownCapture\",\"_this._onMapMouseDownCapture\",\"isChrome\",\"_onKeyDownCapture\",\"_this._onKeyDownCapture\",\"_isCenterDefined\",\"_this._isCenterDefined\",\"_this._onBoundsChanged\",\"callExtBoundsChange\",\"gmC\",\"onChange\",\"onBoundsChange\",\"canProject\",\"bounds\",\"getBounds\",\"prevBounds_\",\"kEPS\",\"marginBounds\",\"margin\",\"centerIsObject_\",\"nw\",\"se\",\"sw\",\"ne\",\"size\",\"hasSize\",\"_registerChild\",\"_this._registerChild\",\"componentDidMount\",\"GoogleMap.prototype.componentDidMount\",\"_this2\",\"setTimeout\",\"addResizeListener\",\"that\",\"UNSAFE_componentWillReceiveProps\",\"GoogleMap.prototype.UNSAFE_componentWillReceiveProps\",\"nextProps\",\"_this3\",\"nextPropsCenter\",\"currCenter\",\"abs\",\"panTo\",\"setZoom\",\"layerKey\",\"setData\",\"p\",\"location\",\"weight\",\"shouldComponentUpdate\",\"GoogleMap.prototype.shouldComponentUpdate\",\"nextState\",\"componentDidUpdate\",\"GoogleMap.prototype.componentDidUpdate\",\"prevProps\",\"componentWillUnmount\",\"GoogleMap.prototype.componentWillUnmount\",\"removeEventListener\",\"removeResizeListener\",\"shouldUnregisterMapOnUnmount\",\"scrollwheel\",\"clearInstanceListeners\",\"dispose\",\"render\",\"GoogleMap.prototype.render\",\"mapMarkerPrerender\",\"onMouseMove\",\"onMouseDownCapture\",\"registerChild\",\"Component\",\"propTypes\",\"string\",\"any\",\"oneOfType\",\"array\",\"shape\",\"number\",\"func\",\"bool\",\"arrayOf\",\"defaultProps\",\"pt\",\"mousePos\",\"sqrt\",\"padding\"]\n}\n"]