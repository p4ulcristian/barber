shadow$provide.module$node_modules$react_redux$lib$hooks$useSelector=function(global,require,module,exports){function useSelectorWithStoreAndSubscription(selector,equalityFn,store,contextSub){var forceRender=(0,_react.useReducer)(function(s){return s+1},0)[1],subscription=(0,_react.useMemo)(function(){return new _Subscription["default"](store,contextSub)},[store,contextSub]),latestSubscriptionCallbackError=(0,_react.useRef)(),latestSelector=(0,_react.useRef)(),latestSelectedState=(0,_react.useRef)();
try{var selectedState=selector!==latestSelector.current||latestSubscriptionCallbackError.current?selector(store.getState()):latestSelectedState.current}catch(err){var errorMessage="An error occured while selecting the store state: "+err.message+".";latestSubscriptionCallbackError.current&&(errorMessage+="\nThe error may be correlated with this previous error:\n"+latestSubscriptionCallbackError.current.stack+"\n\nOriginal stack trace:");throw Error(errorMessage);}useIsomorphicLayoutEffect(function(){latestSelector.current=
selector;latestSelectedState.current=selectedState;latestSubscriptionCallbackError.current=void 0});useIsomorphicLayoutEffect(function(){function checkForUpdates(){try{var newSelectedState=latestSelector.current(store.getState());if(equalityFn(newSelectedState,latestSelectedState.current))return;latestSelectedState.current=newSelectedState}catch(err$9){latestSubscriptionCallbackError.current=err$9}forceRender({})}subscription.onStateChange=checkForUpdates;subscription.trySubscribe();checkForUpdates();
return function(){return subscription.tryUnsubscribe()}},[store,subscription]);return selectedState}function createSelectorHook(context){void 0===context&&(context=_Context.ReactReduxContext);var useReduxContext=context===_Context.ReactReduxContext?_useReduxContext2.useReduxContext:function(){return(0,_react.useContext)(context)};return function(selector,equalityFn){void 0===equalityFn&&(equalityFn=refEquality);(0,_invariant["default"])(selector,"You must pass a selector to useSelectors");var _useReduxContext=
useReduxContext();return useSelectorWithStoreAndSubscription(selector,equalityFn,_useReduxContext.store,_useReduxContext.subscription)}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.createSelectorHook=createSelectorHook;exports.useSelector=void 0;var _react=require("module$node_modules$react$index"),_invariant=global(require("module$node_modules$invariant$browser")),_useReduxContext2=require("module$node_modules$react_redux$lib$hooks$useReduxContext"),
_Subscription=global(require("module$node_modules$react_redux$lib$utils$Subscription")),_Context=require("module$node_modules$react_redux$lib$components$Context"),useIsomorphicLayoutEffect="undefined"!==typeof window?_react.useLayoutEffect:_react.useEffect,refEquality=function(a,b){return a===b};require=createSelectorHook();exports.useSelector=require}
//# sourceMappingURL=module$node_modules$react_redux$lib$hooks$useSelector.js.map
