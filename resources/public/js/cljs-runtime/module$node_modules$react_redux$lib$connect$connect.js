shadow$provide.module$node_modules$react_redux$lib$connect$connect=function(global,require,module,exports){function match(arg,factories,name){for(var i=factories.length-1;0<=i;i--){var result=factories[i](arg);if(result)return result}return function(dispatch,options){throw Error("Invalid value of type "+typeof arg+" for "+name+" argument when connecting component "+options.wrappedComponentName+".");}}function strictEqual(a,b){return a===b}function createConnect(_temp){_temp=void 0===_temp?{}:_temp;
var _ref$connectHOC=_temp.connectHOC,connectHOC=void 0===_ref$connectHOC?_connectAdvanced["default"]:_ref$connectHOC;_ref$connectHOC=_temp.mapStateToPropsFactories;var mapStateToPropsFactories=void 0===_ref$connectHOC?_mapStateToProps["default"]:_ref$connectHOC;_ref$connectHOC=_temp.mapDispatchToPropsFactories;var mapDispatchToPropsFactories=void 0===_ref$connectHOC?_mapDispatchToProps["default"]:_ref$connectHOC;_ref$connectHOC=_temp.mergePropsFactories;var mergePropsFactories=void 0===_ref$connectHOC?
_mergeProps["default"]:_ref$connectHOC;_temp=_temp.selectorFactory;var selectorFactory=void 0===_temp?_selectorFactory["default"]:_temp;return function(mapStateToProps,mapDispatchToProps,mergeProps,_ref2){void 0===_ref2&&(_ref2={});var _ref3=_ref2;_ref2=_ref3.pure;_ref2=void 0===_ref2?!0:_ref2;var _ref3$areStatesEqual=_ref3.areStatesEqual;_ref3$areStatesEqual=void 0===_ref3$areStatesEqual?strictEqual:_ref3$areStatesEqual;var _ref3$areOwnPropsEqua=_ref3.areOwnPropsEqual;_ref3$areOwnPropsEqua=void 0===
_ref3$areOwnPropsEqua?_shallowEqual["default"]:_ref3$areOwnPropsEqua;var _ref3$areStatePropsEq=_ref3.areStatePropsEqual;_ref3$areStatePropsEq=void 0===_ref3$areStatePropsEq?_shallowEqual["default"]:_ref3$areStatePropsEq;var _ref3$areMergedPropsE=_ref3.areMergedPropsEqual;_ref3$areMergedPropsE=void 0===_ref3$areMergedPropsE?_shallowEqual["default"]:_ref3$areMergedPropsE;_ref3=(0,_objectWithoutPropertiesLoose2["default"])(_ref3,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]);
var initMapStateToProps=match(mapStateToProps,mapStateToPropsFactories,"mapStateToProps");mapDispatchToProps=match(mapDispatchToProps,mapDispatchToPropsFactories,"mapDispatchToProps");mergeProps=match(mergeProps,mergePropsFactories,"mergeProps");return connectHOC(selectorFactory,(0,_extends2["default"])({methodName:"connect",getDisplayName:function(name){return"Connect("+name+")"},shouldHandleStateChanges:!!mapStateToProps,initMapStateToProps:initMapStateToProps,initMapDispatchToProps:mapDispatchToProps,
initMergeProps:mergeProps,pure:_ref2,areStatesEqual:_ref3$areStatesEqual,areOwnPropsEqual:_ref3$areOwnPropsEqua,areStatePropsEqual:_ref3$areStatePropsEq,areMergedPropsEqual:_ref3$areMergedPropsE},_ref3))}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.createConnect=createConnect;exports["default"]=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),
_connectAdvanced=global(require("module$node_modules$react_redux$lib$components$connectAdvanced")),_shallowEqual=global(require("module$node_modules$react_redux$lib$utils$shallowEqual")),_mapDispatchToProps=global(require("module$node_modules$react_redux$lib$connect$mapDispatchToProps")),_mapStateToProps=global(require("module$node_modules$react_redux$lib$connect$mapStateToProps")),_mergeProps=global(require("module$node_modules$react_redux$lib$connect$mergeProps")),_selectorFactory=global(require("module$node_modules$react_redux$lib$connect$selectorFactory"));
require=createConnect();exports["default"]=require}
//# sourceMappingURL=module$node_modules$react_redux$lib$connect$connect.js.map
