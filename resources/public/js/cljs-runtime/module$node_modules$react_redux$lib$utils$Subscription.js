shadow$provide.module$node_modules$react_redux$lib$utils$Subscription=function(global,require,module,exports){function createListenerCollection(){var batch=(0,_batch.getBatch)(),current=[],next=[];return{clear:function(){current=next=null},notify:function(){var listeners=current=next;batch(function(){for(var i=0;i<listeners.length;i++)listeners[i]()})},get:function(){return next},subscribe:function(listener){var isSubscribed=!0;next===current&&(next=current.slice());next.push(listener);return function(){isSubscribed&&
null!==current&&(isSubscribed=!1,next===current&&(next=current.slice()),next.splice(next.indexOf(listener),1))}}}}exports.__esModule=!0;exports["default"]=void 0;var _batch=require("module$node_modules$react_redux$lib$utils$batch"),nullListeners={notify:function(){}};global=function(){function Subscription(store,parentSub){this.store=store;this.parentSub=parentSub;this.unsubscribe=null;this.listeners=nullListeners;this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var _proto=Subscription.prototype;
_proto.addNestedSub=function(listener){this.trySubscribe();return this.listeners.subscribe(listener)};_proto.notifyNestedSubs=function(){this.listeners.notify()};_proto.handleChangeWrapper=function(){if(this.onStateChange)this.onStateChange()};_proto.isSubscribed=function(){return!!this.unsubscribe};_proto.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=createListenerCollection())};
_proto.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=nullListeners)};return Subscription}();exports["default"]=global}
//# sourceMappingURL=module$node_modules$react_redux$lib$utils$Subscription.js.map
