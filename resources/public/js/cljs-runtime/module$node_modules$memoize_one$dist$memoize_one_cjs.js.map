{
"version":3,
"file":"module$node_modules$memoize_one$dist$memoize_one_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,QAASA,eAAc,CAACC,SAAD,CAAYC,UAAZ,CAAwB,CAC3C,GAAID,SAAAE,OAAJ,GAAyBD,UAAAC,OAAzB,CACI,MAAO,CAAA,CAEX,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,SAAAE,OAApB,CAAsCC,CAAA,EAAtC,CACI,GAAIH,SAAA,CAAUG,CAAV,CAAJ,GAAqBF,UAAA,CAAWE,CAAX,CAArB,CACI,MAAO,CAAA,CAGf,OAAO,CAAA,CAToC,CAmC/CN,MAAAC,QAAA,CAvBAM,QAAmB,CAACC,QAAD,CAAWC,OAAX,CAAoB,CACnB,IAAK,EAArB,GAAIA,OAAJ,GAA0BA,OAA1B,CAAoCP,cAApC,CACA,KAAIQ,QAAJ,CACIC,SAAW,EADf,CAEIC,UAFJ,CAGIC,WAAa,CAAA,CAejB,OAdAC,SAAiB,EAAG,CAEhB,IADA,IAAIC,QAAU,EAAd,CACSC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBC,SAAAZ,OAAtB,CAAwCW,EAAA,EAAxC,CACID,OAAA,CAAQC,EAAR,CAAA;AAAcC,SAAA,CAAUD,EAAV,CAElB,IAAIH,UAAJ,EAAkBH,QAAlB,GAA+B,IAA/B,EAAuCD,OAAA,CAAQM,OAAR,CAAiBJ,QAAjB,CAAvC,CACI,MAAOC,WAEXA,WAAA,CAAaJ,QAAAU,MAAA,CAAe,IAAf,CAAqBH,OAArB,CACbF,WAAA,CAAa,CAAA,CACbH,SAAA,CAAW,IACXC,SAAA,CAAWI,OACX,OAAOH,WAZS,CANe,CAf0E;",
"sources":["node_modules/memoize-one/dist/memoize-one.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$memoize_one$dist$memoize_one_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nmodule.exports = memoizeOne;\n\n};"],
"names":["shadow$provide","global","require","module","exports","areInputsEqual","newInputs","lastInputs","length","i","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","_i","arguments","apply"]
}
